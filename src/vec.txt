____Loading package: 
____Loading package: @bazel_tools//tools/cpp
____Loading complete.  Analyzing...
____Found 1 target...
____From Compiling benchmark.cc:
benchmark.cc:24:28: note: ===vect_slp_analyze_bb===
benchmark.cc:24:28: note: === vect_analyze_data_refs ===
benchmark.cc:24:28: note: got vectype for stmt: argc.0_2 = argc;
vector(8) int
benchmark.cc:24:28: note: not vectorized: not enough data-refs in basic block.
benchmark.cc:24:28: note: ***** Re-trying analysis with vector size 16
benchmark.cc:24:28: note: === vect_analyze_data_refs ===
benchmark.cc:24:28: note: got vectype for stmt: argc.0_2 = argc;
vector(4) int
benchmark.cc:24:28: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:287:67: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:287:67: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:287:67: note: not vectorized: not enough data-refs in basic block.
____From Compiling base_bench.cc:

Analyzing loop at /usr/local/include/benchmark/benchmark.h:405
/usr/local/include/benchmark/benchmark.h:405:5: note: ===== analyze_loop_nest =====
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:5: note: ===== analyze_loop_nest_1 =====
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:5: note: === get_loop_niters ===
/usr/local/include/benchmark/benchmark.h:405:5: note: not vectorized: control flow in loop.
/usr/local/include/benchmark/benchmark.h:405:5: note: bad loop form.

Analyzing loop at base_bench.cc:29
base_bench.cc:29:23: note: ===== analyze_loop_nest =====
base_bench.cc:29:23: note: === vect_analyze_loop_form ===
base_bench.cc:29:23: note: === get_loop_niters ===
base_bench.cc:29:23: note: === vect_analyze_data_refs ===
base_bench.cc:29:23: note: === vect_analyze_scalar_cycles ===
base_bench.cc:29:23: note: Analyze phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: Access function of PHI: {0, +, 1}_2
base_bench.cc:29:23: note: step: 1,  init: 0
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: Analyze phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: Access function of PHI: {z$_M_value$real_31, +, pretmp_18}_2
base_bench.cc:29:23: note: step: pretmp_18,  init: z$_M_value$real_31
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: Analyze phi: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>

base_bench.cc:29:23: note: Access function of PHI: {z$_M_value$imag_1, +, pretmp_15}_2
base_bench.cc:29:23: note: step: pretmp_15,  init: z$_M_value$imag_1
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: Analyze phi: ivtmp_30 = PHI <2000(8), ivtmp_56(10)>

base_bench.cc:29:23: note: Access function of PHI: {2000, +, 4294967295}_2
base_bench.cc:29:23: note: step: 4294967295,  init: 2000
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: === vect_pattern_recog ===
base_bench.cc:29:23: note: === vect_analyze_data_ref_accesses ===
base_bench.cc:29:23: note: === vect_mark_stmts_to_be_vectorized ===
base_bench.cc:29:23: note: init: phi relevant? i_38 = PHI <0(8), i_23(10)>
base_bench.cc:29:23: note: init: phi relevant? z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>
base_bench.cc:29:23: note: init: phi relevant? z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>
base_bench.cc:29:23: note: init: phi relevant? ivtmp_30 = PHI <2000(8), ivtmp_56(10)>
base_bench.cc:29:23: note: init: stmt relevant? z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;
base_bench.cc:29:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: init: stmt relevant? z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;
base_bench.cc:29:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: init: stmt relevant? i_23 = i_38 + 1;
base_bench.cc:29:23: note: init: stmt relevant? ivtmp_56 = ivtmp_30 - 1;
base_bench.cc:29:23: note: init: stmt relevant? if (ivtmp_56 == 0)
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;
base_bench.cc:29:23: note: vect_is_simple_use: operand pretmp_15
base_bench.cc:29:23: note: def_stmt: pretmp_15 = pretmp_9 + pretmp_14;
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$imag_20
base_bench.cc:29:23: note: def_stmt: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>
base_bench.cc:29:23: note: type of def: 4.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$imag_1
base_bench.cc:29:23: note: def_stmt: z$_M_value$imag_1 = PHI <0.0(2), z$_M_value$imag_29(11)>
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$imag_27
base_bench.cc:29:23: note: def_stmt: z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;
base_bench.cc:29:23: note: type of def: 3.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: already marked relevant/live.
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$real_3
base_bench.cc:29:23: note: def_stmt: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>
base_bench.cc:29:23: note: type of def: 4.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: vect_is_simple_use: operand pretmp_18
base_bench.cc:29:23: note: def_stmt: pretmp_18 = pretmp_25 - pretmp_57;
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$real_31
base_bench.cc:29:23: note: def_stmt: z$_M_value$real_31 = PHI <0.0(2), z$_M_value$real_17(11)>
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$real_24
base_bench.cc:29:23: note: def_stmt: z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;
base_bench.cc:29:23: note: type of def: 3.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: already marked relevant/live.
base_bench.cc:29:23: note: === vect_analyze_data_ref_dependences ===
base_bench.cc:29:23: note: === vect_determine_vectorization_factor ===
base_bench.cc:29:23: note: ==> examining phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: ==> examining phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: ==> examining phi: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>

base_bench.cc:29:23: note: ==> examining phi: ivtmp_30 = PHI <2000(8), ivtmp_56(10)>

base_bench.cc:29:23: note: ==> examining statement: z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;

base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(4) double
base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(4) double
base_bench.cc:29:23: note: nunits = 4
base_bench.cc:29:23: note: ==> examining statement: z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;

base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(4) double
base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(4) double
base_bench.cc:29:23: note: nunits = 4
base_bench.cc:29:23: note: ==> examining statement: i_23 = i_38 + 1;

base_bench.cc:29:23: note: skip.
base_bench.cc:29:23: note: ==> examining statement: ivtmp_56 = ivtmp_30 - 1;

base_bench.cc:29:23: note: skip.
base_bench.cc:29:23: note: ==> examining statement: if (ivtmp_56 == 0)

base_bench.cc:29:23: note: skip.
base_bench.cc:29:23: note: vectorization factor = 4
base_bench.cc:29:23: note: === vect_analyze_data_refs_alignment ===
base_bench.cc:29:23: note: === vect_prune_runtime_alias_test_list ===
base_bench.cc:29:23: note: === vect_enhance_data_refs_alignment ===
base_bench.cc:29:23: note: vect_can_advance_ivs_p:
base_bench.cc:29:23: note: Analyze phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: Analyze phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: Analyze phi: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>

base_bench.cc:29:23: note: Analyze phi: ivtmp_30 = PHI <2000(8), ivtmp_56(10)>

base_bench.cc:29:23: note: === vect_analyze_slp ===
base_bench.cc:29:23: note: === vect_make_slp_decision ===
base_bench.cc:29:23: note: === vect_detect_hybrid_slp ===
base_bench.cc:29:23: note: === vect_analyze_loop_operations ===
base_bench.cc:29:23: note: examining phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: examining phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: not vectorized: value used after loop.
base_bench.cc:29:23: note: bad operation or unsupported loop bound.
base_bench.cc:29:23: note: ***** Re-trying analysis with vector size 16
base_bench.cc:29:23: note: === vect_analyze_loop_form ===
base_bench.cc:29:23: note: === get_loop_niters ===
base_bench.cc:29:23: note: === vect_analyze_data_refs ===
base_bench.cc:29:23: note: === vect_analyze_scalar_cycles ===
base_bench.cc:29:23: note: Analyze phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: Access function of PHI: {0, +, 1}_2
base_bench.cc:29:23: note: step: 1,  init: 0
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: Analyze phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: Access function of PHI: {z$_M_value$real_31, +, pretmp_18}_2
base_bench.cc:29:23: note: step: pretmp_18,  init: z$_M_value$real_31
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: Analyze phi: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>

base_bench.cc:29:23: note: Access function of PHI: {z$_M_value$imag_1, +, pretmp_15}_2
base_bench.cc:29:23: note: step: pretmp_15,  init: z$_M_value$imag_1
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: Analyze phi: ivtmp_30 = PHI <2000(8), ivtmp_56(10)>

base_bench.cc:29:23: note: Access function of PHI: {2000, +, 4294967295}_2
base_bench.cc:29:23: note: step: 4294967295,  init: 2000
base_bench.cc:29:23: note: Detected induction.
base_bench.cc:29:23: note: === vect_pattern_recog ===
base_bench.cc:29:23: note: === vect_analyze_data_ref_accesses ===
base_bench.cc:29:23: note: === vect_mark_stmts_to_be_vectorized ===
base_bench.cc:29:23: note: init: phi relevant? i_38 = PHI <0(8), i_23(10)>
base_bench.cc:29:23: note: init: phi relevant? z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>
base_bench.cc:29:23: note: init: phi relevant? z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>
base_bench.cc:29:23: note: init: phi relevant? ivtmp_30 = PHI <2000(8), ivtmp_56(10)>
base_bench.cc:29:23: note: init: stmt relevant? z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;
base_bench.cc:29:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: init: stmt relevant? z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;
base_bench.cc:29:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: init: stmt relevant? i_23 = i_38 + 1;
base_bench.cc:29:23: note: init: stmt relevant? ivtmp_56 = ivtmp_30 - 1;
base_bench.cc:29:23: note: init: stmt relevant? if (ivtmp_56 == 0)
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;
base_bench.cc:29:23: note: vect_is_simple_use: operand pretmp_15
base_bench.cc:29:23: note: def_stmt: pretmp_15 = pretmp_9 + pretmp_14;
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$imag_20
base_bench.cc:29:23: note: def_stmt: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>
base_bench.cc:29:23: note: type of def: 4.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$imag_1
base_bench.cc:29:23: note: def_stmt: z$_M_value$imag_1 = PHI <0.0(2), z$_M_value$imag_29(11)>
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$imag_27
base_bench.cc:29:23: note: def_stmt: z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;
base_bench.cc:29:23: note: type of def: 3.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: already marked relevant/live.
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$real_3
base_bench.cc:29:23: note: def_stmt: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>
base_bench.cc:29:23: note: type of def: 4.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: vect_is_simple_use: operand pretmp_18
base_bench.cc:29:23: note: def_stmt: pretmp_18 = pretmp_25 - pretmp_57;
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: worklist: examine stmt: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$real_31
base_bench.cc:29:23: note: def_stmt: z$_M_value$real_31 = PHI <0.0(2), z$_M_value$real_17(11)>
base_bench.cc:29:23: note: type of def: 2.
base_bench.cc:29:23: note: def_stmt is out of loop.
base_bench.cc:29:23: note: vect_is_simple_use: operand z$_M_value$real_24
base_bench.cc:29:23: note: def_stmt: z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;
base_bench.cc:29:23: note: type of def: 3.
base_bench.cc:29:23: note: mark relevant 0, live 1.
base_bench.cc:29:23: note: already marked relevant/live.
base_bench.cc:29:23: note: === vect_analyze_data_ref_dependences ===
base_bench.cc:29:23: note: === vect_determine_vectorization_factor ===
base_bench.cc:29:23: note: ==> examining phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: ==> examining phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: ==> examining phi: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>

base_bench.cc:29:23: note: ==> examining phi: ivtmp_30 = PHI <2000(8), ivtmp_56(10)>

base_bench.cc:29:23: note: ==> examining statement: z$_M_value$real_24 = z$_M_value$real_3 + pretmp_18;

base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(2) double
base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(2) double
base_bench.cc:29:23: note: nunits = 2
base_bench.cc:29:23: note: ==> examining statement: z$_M_value$imag_27 = pretmp_15 + z$_M_value$imag_20;

base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(2) double
base_bench.cc:29:23: note: get vectype for scalar type:  double
base_bench.cc:29:23: note: vectype: vector(2) double
base_bench.cc:29:23: note: nunits = 2
base_bench.cc:29:23: note: ==> examining statement: i_23 = i_38 + 1;

base_bench.cc:29:23: note: skip.
base_bench.cc:29:23: note: ==> examining statement: ivtmp_56 = ivtmp_30 - 1;

base_bench.cc:29:23: note: skip.
base_bench.cc:29:23: note: ==> examining statement: if (ivtmp_56 == 0)

base_bench.cc:29:23: note: skip.
base_bench.cc:29:23: note: vectorization factor = 2
base_bench.cc:29:23: note: === vect_analyze_data_refs_alignment ===
base_bench.cc:29:23: note: === vect_prune_runtime_alias_test_list ===
base_bench.cc:29:23: note: === vect_enhance_data_refs_alignment ===
base_bench.cc:29:23: note: vect_can_advance_ivs_p:
base_bench.cc:29:23: note: Analyze phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: Analyze phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: Analyze phi: z$_M_value$imag_20 = PHI <z$_M_value$imag_1(8), z$_M_value$imag_27(10)>

base_bench.cc:29:23: note: Analyze phi: ivtmp_30 = PHI <2000(8), ivtmp_56(10)>

base_bench.cc:29:23: note: === vect_analyze_slp ===
base_bench.cc:29:23: note: === vect_make_slp_decision ===
base_bench.cc:29:23: note: === vect_detect_hybrid_slp ===
base_bench.cc:29:23: note: === vect_analyze_loop_operations ===
base_bench.cc:29:23: note: examining phi: i_38 = PHI <0(8), i_23(10)>

base_bench.cc:29:23: note: examining phi: z$_M_value$real_3 = PHI <z$_M_value$real_31(8), z$_M_value$real_24(10)>

base_bench.cc:29:23: note: not vectorized: value used after loop.
base_bench.cc:29:23: note: bad operation or unsupported loop bound.
base_bench.cc:24:13: note: vectorized 0 loops in function.
base_bench.cc:25:41: note: ===vect_slp_analyze_bb===
base_bench.cc:25:41: note: === vect_analyze_data_refs ===
base_bench.cc:25:41: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:405:5: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:405:5: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:406:25: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:406:25: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:406:25: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:24:13: note: ===vect_slp_analyze_bb===
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:410:26: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:410:26: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:410:26: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:24:13: note: ===vect_slp_analyze_bb===
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: got vectype for stmt: pretmp_54 = state_16(D)->started_;
vector(32) unsigned char
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:24:13: note: ***** Re-trying analysis with vector size 16
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: got vectype for stmt: pretmp_54 = state_16(D)->started_;
vector(16) unsigned char
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:24:13: note: ===vect_slp_analyze_bb===
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/complex:1302:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/complex:1302:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/complex:1302:4: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:24:13: note: ===vect_slp_analyze_bb===
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:24:13: note: ===vect_slp_analyze_bb===
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _59 = state_16(D)->total_iterations_;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_16(D)->total_iterations_ = _60;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _62 = state_16(D)->max_iterations;
const vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_16(D)->total_iterations_ and state_16(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_16(D)->total_iterations_ = _60;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_16(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_16(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ***** Re-trying analysis with vector size 16
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _59 = state_16(D)->total_iterations_;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_16(D)->total_iterations_ = _60;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _62 = state_16(D)->max_iterations;
const vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_16(D)->total_iterations_ and state_16(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_16(D)->total_iterations_ = _60;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_16(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_16(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.
base_bench.cc:24:13: note: ===vect_slp_analyze_bb===
base_bench.cc:24:13: note: === vect_analyze_data_refs ===
base_bench.cc:24:13: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/local/include/benchmark/benchmark.h:405
/usr/local/include/benchmark/benchmark.h:405:9: note: ===== analyze_loop_nest =====
/usr/local/include/benchmark/benchmark.h:405:9: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:9: note: ===== analyze_loop_nest_1 =====
/usr/local/include/benchmark/benchmark.h:405:9: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:9: note: not vectorized: latch block not empty.
/usr/local/include/benchmark/benchmark.h:405:9: note: bad inner-loop form.
/usr/local/include/benchmark/benchmark.h:405:9: note: not vectorized: Bad inner loop.
/usr/local/include/benchmark/benchmark.h:405:9: note: bad loop form.

Analyzing loop at base_bench.cc:58
base_bench.cc:58:23: note: ===== analyze_loop_nest =====
base_bench.cc:58:23: note: === vect_analyze_loop_form ===
base_bench.cc:58:23: note: not vectorized: latch block not empty.
base_bench.cc:58:23: note: bad loop form.
base_bench.cc:55:13: note: vectorized 0 loops in function.
base_bench.cc:55:13: note: ===vect_slp_analyze_bb===
base_bench.cc:55:13: note: === vect_analyze_data_refs ===
base_bench.cc:55:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:405:9: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:405:9: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:405:9: note: got vectype for stmt: _16 = state_5(D)->started_;
vector(32) unsigned char
/usr/local/include/benchmark/benchmark.h:405:9: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:405:9: note: ***** Re-trying analysis with vector size 16
/usr/local/include/benchmark/benchmark.h:405:9: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:405:9: note: got vectype for stmt: _16 = state_5(D)->started_;
vector(16) unsigned char
/usr/local/include/benchmark/benchmark.h:405:9: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:406:25: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:406:25: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:406:25: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:410:26: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:410:26: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:410:26: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:55:13: note: ===vect_slp_analyze_bb===
base_bench.cc:55:13: note: === vect_analyze_data_refs ===
base_bench.cc:55:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:308:49: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:308:49: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:308:49: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:55:13: note: ===vect_slp_analyze_bb===
base_bench.cc:55:13: note: === vect_analyze_data_refs ===
base_bench.cc:55:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:55:13: note: ===vect_slp_analyze_bb===
base_bench.cc:55:13: note: === vect_analyze_data_refs ===
base_bench.cc:55:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _23 = state_5(D)->total_iterations_;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_5(D)->total_iterations_ = _3;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _26 = state_5(D)->max_iterations;
const vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_5(D)->total_iterations_ and state_5(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_5(D)->total_iterations_ = _3;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_5(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_5(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ***** Re-trying analysis with vector size 16
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _23 = state_5(D)->total_iterations_;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_5(D)->total_iterations_ = _3;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _26 = state_5(D)->max_iterations;
const vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_5(D)->total_iterations_ and state_5(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_5(D)->total_iterations_ = _3;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_5(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_5(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at /usr/local/include/benchmark/benchmark.h:405
/usr/local/include/benchmark/benchmark.h:405:5: note: ===== analyze_loop_nest =====
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:5: note: ===== analyze_loop_nest_1 =====
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:5: note: === get_loop_niters ===
/usr/local/include/benchmark/benchmark.h:405:5: note: not vectorized: control flow in loop.
/usr/local/include/benchmark/benchmark.h:405:5: note: bad loop form.

Analyzing loop at base_bench.cc:73
base_bench.cc:73:34: note: ===== analyze_loop_nest =====
base_bench.cc:73:34: note: === vect_analyze_loop_form ===
base_bench.cc:73:34: note: === get_loop_niters ===
base_bench.cc:73:34: note: === vect_analyze_data_refs ===
base_bench.cc:73:34: note: got vectype for stmt: *_15 = x_12;
vector(4) double
base_bench.cc:73:34: note: === vect_analyze_scalar_cycles ===
base_bench.cc:73:34: note: Analyze phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: Access function of PHI: {0, +, 1}_2
base_bench.cc:73:34: note: step: 1,  init: 0
base_bench.cc:73:34: note: Detected induction.
base_bench.cc:73:34: note: Analyze phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: Analyze phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: Access function of PHI: {4097, +, 4294967295}_2
base_bench.cc:73:34: note: step: 4294967295,  init: 4097
base_bench.cc:73:34: note: Detected induction.
base_bench.cc:73:34: note: === vect_pattern_recog ===
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand _13
base_bench.cc:73:34: note: def_stmt: _13 = (long unsigned int) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: vect_is_simple_use: operand 8
base_bench.cc:73:34: note: === vect_analyze_data_ref_accesses ===
base_bench.cc:73:34: note: === vect_mark_stmts_to_be_vectorized ===
base_bench.cc:73:34: note: init: phi relevant? i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: init: phi relevant? .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>
base_bench.cc:73:34: note: init: phi relevant? ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>
base_bench.cc:73:34: note: init: stmt relevant? _11 = (double) i_24;
base_bench.cc:73:34: note: init: stmt relevant? x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: init: stmt relevant? _13 = (long unsigned int) i_24;
base_bench.cc:73:34: note: init: stmt relevant? _14 = _13 * 8;
base_bench.cc:73:34: note: init: stmt relevant? _15 = data_10 + _14;
base_bench.cc:73:34: note: init: stmt relevant? *_15 = x_12;
base_bench.cc:73:34: note: vec_stmt_relevant_p: stmt has vdefs.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: init: stmt relevant? i_17 = i_24 + 1;
base_bench.cc:73:34: note: init: stmt relevant? ivtmp_45 = ivtmp_32 - 1;
base_bench.cc:73:34: note: init: stmt relevant? if (ivtmp_45 != 0)
base_bench.cc:73:34: note: worklist: examine stmt: *_15 = x_12;
base_bench.cc:73:34: note: vect_is_simple_use: operand x_12
base_bench.cc:73:34: note: def_stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: worklist: examine stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: worklist: examine stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: worklist: examine stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: vect_is_simple_use: operand i_17
base_bench.cc:73:34: note: def_stmt: i_17 = i_24 + 1;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: vect_is_simple_use: operand 0
base_bench.cc:73:34: note: worklist: examine stmt: i_17 = i_24 + 1;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: already marked relevant/live.
base_bench.cc:73:34: note: === vect_analyze_data_ref_dependences ===
base_bench.cc:73:34: note: === vect_determine_vectorization_factor ===
base_bench.cc:73:34: note: ==> examining phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(8) int
base_bench.cc:73:34: note: nunits = 8
base_bench.cc:73:34: note: ==> examining phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: ==> examining phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: ==> examining statement: _11 = (double) i_24;

base_bench.cc:73:34: note: get vectype for scalar type:  double
base_bench.cc:73:34: note: vectype: vector(4) double
base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(8) int
base_bench.cc:73:34: note: nunits = 8
base_bench.cc:73:34: note: ==> examining statement: x_12 = _11 * 2.44140625e-4;

base_bench.cc:73:34: note: get vectype for scalar type:  const double
base_bench.cc:73:34: note: vectype: const vector(4) double
base_bench.cc:73:34: note: get vectype for scalar type:  const double
base_bench.cc:73:34: note: vectype: const vector(4) double
base_bench.cc:73:34: note: nunits = 4
base_bench.cc:73:34: note: ==> examining statement: _13 = (long unsigned int) i_24;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: _14 = _13 * 8;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: _15 = data_10 + _14;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: *_15 = x_12;

base_bench.cc:73:34: note: get vectype for scalar type:  double
base_bench.cc:73:34: note: vectype: vector(4) double
base_bench.cc:73:34: note: nunits = 4
base_bench.cc:73:34: note: ==> examining statement: i_17 = i_24 + 1;

base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(8) int
base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(8) int
base_bench.cc:73:34: note: nunits = 8
base_bench.cc:73:34: note: ==> examining statement: ivtmp_45 = ivtmp_32 - 1;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: if (ivtmp_45 != 0)

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: vectorization factor = 8
base_bench.cc:73:34: note: === vect_analyze_data_refs_alignment ===
base_bench.cc:73:34: note: vect_compute_data_ref_alignment:
base_bench.cc:73:34: note: misalign = 0 bytes of ref *_15
base_bench.cc:73:34: note: === vect_prune_runtime_alias_test_list ===
base_bench.cc:73:34: note: === vect_enhance_data_refs_alignment ===
base_bench.cc:73:34: note: vect_can_advance_ivs_p:
base_bench.cc:73:34: note: Analyze phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: Analyze phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: virtual phi. skip.
base_bench.cc:73:34: note: Analyze phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: === vect_analyze_slp ===
base_bench.cc:73:34: note: === vect_make_slp_decision ===
base_bench.cc:73:34: note: === vect_detect_hybrid_slp ===
base_bench.cc:73:34: note: === vect_analyze_loop_operations ===
base_bench.cc:73:34: note: examining phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: === vectorizable_induction ===
base_bench.cc:73:34: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
base_bench.cc:73:34: note: examining phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: examining phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: ==> examining statement: _11 = (double) i_24;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: === vectorizable_conversion ===
base_bench.cc:73:34: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base_bench.cc:73:34: note: ==> examining statement: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand 2.44140625e-4
base_bench.cc:73:34: note: === vectorizable_operation ===
base_bench.cc:73:34: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
base_bench.cc:73:34: note: ==> examining statement: _13 = (long unsigned int) i_24;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: _14 = _13 * 8;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: _15 = data_10 + _14;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: *_15 = x_12;
base_bench.cc:73:34: note: vect_is_simple_use: operand x_12
base_bench.cc:73:34: note: def_stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_model_store_cost: aligned.
base_bench.cc:73:34: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
base_bench.cc:73:34: note: ==> examining statement: i_17 = i_24 + 1;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: vect_is_simple_use: operand 1
base_bench.cc:73:34: note: op not supported by target.
base_bench.cc:73:34: note: not vectorized: relevant stmt not supported: i_17 = i_24 + 1;
base_bench.cc:73:34: note: bad operation or unsupported loop bound.
base_bench.cc:73:34: note: ***** Re-trying analysis with vector size 16
base_bench.cc:73:34: note: === vect_analyze_loop_form ===
base_bench.cc:73:34: note: === get_loop_niters ===
base_bench.cc:73:34: note: === vect_analyze_data_refs ===
base_bench.cc:73:34: note: got vectype for stmt: *_15 = x_12;
vector(2) double
base_bench.cc:73:34: note: === vect_analyze_scalar_cycles ===
base_bench.cc:73:34: note: Analyze phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: Access function of PHI: {0, +, 1}_2
base_bench.cc:73:34: note: step: 1,  init: 0
base_bench.cc:73:34: note: Detected induction.
base_bench.cc:73:34: note: Analyze phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: Analyze phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: Access function of PHI: {4097, +, 4294967295}_2
base_bench.cc:73:34: note: step: 4294967295,  init: 4097
base_bench.cc:73:34: note: Detected induction.
base_bench.cc:73:34: note: === vect_pattern_recog ===
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand _13
base_bench.cc:73:34: note: def_stmt: _13 = (long unsigned int) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: vect_is_simple_use: operand 8
base_bench.cc:73:34: note: === vect_analyze_data_ref_accesses ===
base_bench.cc:73:34: note: === vect_mark_stmts_to_be_vectorized ===
base_bench.cc:73:34: note: init: phi relevant? i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: init: phi relevant? .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>
base_bench.cc:73:34: note: init: phi relevant? ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>
base_bench.cc:73:34: note: init: stmt relevant? _11 = (double) i_24;
base_bench.cc:73:34: note: init: stmt relevant? x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: init: stmt relevant? _13 = (long unsigned int) i_24;
base_bench.cc:73:34: note: init: stmt relevant? _14 = _13 * 8;
base_bench.cc:73:34: note: init: stmt relevant? _15 = data_10 + _14;
base_bench.cc:73:34: note: init: stmt relevant? *_15 = x_12;
base_bench.cc:73:34: note: vec_stmt_relevant_p: stmt has vdefs.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: init: stmt relevant? i_17 = i_24 + 1;
base_bench.cc:73:34: note: init: stmt relevant? ivtmp_45 = ivtmp_32 - 1;
base_bench.cc:73:34: note: init: stmt relevant? if (ivtmp_45 != 0)
base_bench.cc:73:34: note: worklist: examine stmt: *_15 = x_12;
base_bench.cc:73:34: note: vect_is_simple_use: operand x_12
base_bench.cc:73:34: note: def_stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: worklist: examine stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: worklist: examine stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: worklist: examine stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: vect_is_simple_use: operand i_17
base_bench.cc:73:34: note: def_stmt: i_17 = i_24 + 1;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: vect_is_simple_use: operand 0
base_bench.cc:73:34: note: worklist: examine stmt: i_17 = i_24 + 1;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: mark relevant 4, live 0.
base_bench.cc:73:34: note: already marked relevant/live.
base_bench.cc:73:34: note: === vect_analyze_data_ref_dependences ===
base_bench.cc:73:34: note: === vect_determine_vectorization_factor ===
base_bench.cc:73:34: note: ==> examining phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(4) int
base_bench.cc:73:34: note: nunits = 4
base_bench.cc:73:34: note: ==> examining phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: ==> examining phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: ==> examining statement: _11 = (double) i_24;

base_bench.cc:73:34: note: get vectype for scalar type:  double
base_bench.cc:73:34: note: vectype: vector(2) double
base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(4) int
base_bench.cc:73:34: note: nunits = 4
base_bench.cc:73:34: note: ==> examining statement: x_12 = _11 * 2.44140625e-4;

base_bench.cc:73:34: note: get vectype for scalar type:  const double
base_bench.cc:73:34: note: vectype: const vector(2) double
base_bench.cc:73:34: note: get vectype for scalar type:  const double
base_bench.cc:73:34: note: vectype: const vector(2) double
base_bench.cc:73:34: note: nunits = 2
base_bench.cc:73:34: note: ==> examining statement: _13 = (long unsigned int) i_24;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: _14 = _13 * 8;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: _15 = data_10 + _14;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: *_15 = x_12;

base_bench.cc:73:34: note: get vectype for scalar type:  double
base_bench.cc:73:34: note: vectype: vector(2) double
base_bench.cc:73:34: note: nunits = 2
base_bench.cc:73:34: note: ==> examining statement: i_17 = i_24 + 1;

base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(4) int
base_bench.cc:73:34: note: get vectype for scalar type:  int
base_bench.cc:73:34: note: vectype: vector(4) int
base_bench.cc:73:34: note: nunits = 4
base_bench.cc:73:34: note: ==> examining statement: ivtmp_45 = ivtmp_32 - 1;

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: ==> examining statement: if (ivtmp_45 != 0)

base_bench.cc:73:34: note: skip.
base_bench.cc:73:34: note: vectorization factor = 4
base_bench.cc:73:34: note: === vect_analyze_data_refs_alignment ===
base_bench.cc:73:34: note: vect_compute_data_ref_alignment:
base_bench.cc:73:34: note: misalign = 0 bytes of ref *_15
base_bench.cc:73:34: note: === vect_prune_runtime_alias_test_list ===
base_bench.cc:73:34: note: === vect_enhance_data_refs_alignment ===
base_bench.cc:73:34: note: vect_can_advance_ivs_p:
base_bench.cc:73:34: note: Analyze phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: Analyze phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: virtual phi. skip.
base_bench.cc:73:34: note: Analyze phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: === vect_analyze_slp ===
base_bench.cc:73:34: note: === vect_make_slp_decision ===
base_bench.cc:73:34: note: === vect_detect_hybrid_slp ===
base_bench.cc:73:34: note: === vect_analyze_loop_operations ===
base_bench.cc:73:34: note: examining phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: === vectorizable_induction ===
base_bench.cc:73:34: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
base_bench.cc:73:34: note: examining phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: examining phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: ==> examining statement: _11 = (double) i_24;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: === vectorizable_conversion ===
base_bench.cc:73:34: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base_bench.cc:73:34: note: ==> examining statement: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand 2.44140625e-4
base_bench.cc:73:34: note: === vectorizable_operation ===
base_bench.cc:73:34: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
base_bench.cc:73:34: note: ==> examining statement: _13 = (long unsigned int) i_24;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: _14 = _13 * 8;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: _15 = data_10 + _14;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: *_15 = x_12;
base_bench.cc:73:34: note: vect_is_simple_use: operand x_12
base_bench.cc:73:34: note: def_stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_model_store_cost: aligned.
base_bench.cc:73:34: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
base_bench.cc:73:34: note: ==> examining statement: i_17 = i_24 + 1;
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(7)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: vect_is_simple_use: operand 1
base_bench.cc:73:34: note: === vectorizable_operation ===
base_bench.cc:73:34: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base_bench.cc:73:34: note: ==> examining statement: ivtmp_45 = ivtmp_32 - 1;
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: ==> examining statement: if (ivtmp_45 != 0)
base_bench.cc:73:34: note: irrelevant.
base_bench.cc:73:34: note: vectorization_factor = 4, niters = 4097
base_bench.cc:73:34: note: === vect_update_slp_costs_according_to_vf ===
base_bench.cc:73:34: note: cost model disabled.
base_bench.cc:73:34: note: epilog loop required
base_bench.cc:73:34: note: vect_can_advance_ivs_p:
base_bench.cc:73:34: note: Analyze phi: i_24 = PHI <i_17(9), 0(7)>

base_bench.cc:73:34: note: Analyze phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(7)>

base_bench.cc:73:34: note: virtual phi. skip.
base_bench.cc:73:34: note: Analyze phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(7)>

base_bench.cc:73:34: note: loop vectorized
base_bench.cc:73:34: note: === vec_transform_loop ===
base_bench.cc:73:34: note: === vect_do_peeling_for_loop_bound ===
base_bench.cc:73:34: note: vect_update_ivs_after_vectorizer: phi: i_24 = PHI <i_17(9), 0(16)>

base_bench.cc:73:34: note: vect_update_ivs_after_vectorizer: phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(16)>

base_bench.cc:73:34: note: virtual phi. skip.
base_bench.cc:73:34: note: vect_update_ivs_after_vectorizer: phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(16)>

Setting upper bound of nb iterations for epilogue loop to 2
base_bench.cc:73:34: note: ------>vectorizing phi: i_24 = PHI <i_17(9), 0(20)>

base_bench.cc:73:34: note: transform phi.
base_bench.cc:73:34: note: transform induction phi.
base_bench.cc:73:34: note: created new init_stmt: vect_cst_.73_57 = { 0, 1, 2, 3 };
base_bench.cc:73:34: note: created new init_stmt: vect_cst_.74_58 = { 4, 4, 4, 4 };
base_bench.cc:73:34: note: transform induction: created def-use cycle: vect_vec_iv_.75_59 = PHI <vect_vec_iv_.75_60(9), vect_cst_.73_57(20)>

vect_vec_iv_.75_60 = vect_vec_iv_.75_59 + vect_cst_.74_58;

base_bench.cc:73:34: note: ------>vectorizing phi: .MEM_22 = PHI <.MEM_16(9), .MEM_31(20)>

base_bench.cc:73:34: note: ------>vectorizing phi: ivtmp_32 = PHI <ivtmp_45(9), 4097(20)>

base_bench.cc:73:34: note: ------>vectorizing phi: vect_vec_iv_.75_59 = PHI <vect_vec_iv_.75_60(9), vect_cst_.73_57(20)>

base_bench.cc:73:34: note: ------>vectorizing statement: vect_vec_iv_.75_60 = vect_vec_iv_.75_59 + vect_cst_.74_58;

base_bench.cc:73:34: note: ------>vectorizing statement: _11 = (double) i_24;

base_bench.cc:73:34: note: multiple-types.
base_bench.cc:73:34: note: transform statement.
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(20)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: transform conversion. ncopies = 1.
base_bench.cc:73:34: note: vect_get_vec_def_for_operand: i_24
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(20)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: def =  i_24
  def_stmt =  i_24 = PHI <i_17(9), 0(20)>
base_bench.cc:73:34: note: add new stmt: vect__11.76_61 = [vec_unpack_float_lo_expr] vect_vec_iv_.75_59;
base_bench.cc:73:34: note: add new stmt: vect__11.76_62 = [vec_unpack_float_hi_expr] vect_vec_iv_.75_59;
base_bench.cc:73:34: note: ------>vectorizing statement: x_12 = _11 * 2.44140625e-4;

base_bench.cc:73:34: note: multiple-types.
base_bench.cc:73:34: note: transform statement.
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: vect_is_simple_use: operand 2.44140625e-4
base_bench.cc:73:34: note: transform binary/unary operation.
base_bench.cc:73:34: note: vect_get_vec_def_for_operand: _11
base_bench.cc:73:34: note: vect_is_simple_use: operand _11
base_bench.cc:73:34: note: def_stmt: _11 = (double) i_24;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: def =  _11
  def_stmt =  _11 = (double) i_24;
base_bench.cc:73:34: note: vect_get_vec_def_for_operand: 2.44140625e-4
base_bench.cc:73:34: note: vect_is_simple_use: operand 2.44140625e-4
base_bench.cc:73:34: note: Create vector_cst. nunits = 2
base_bench.cc:73:34: note: created new init_stmt: vect_cst_.78_63 = { 2.44140625e-4, 2.44140625e-4 };
base_bench.cc:73:34: note: add new stmt: vect_x_12.77_64 = vect__11.76_61 * vect_cst_.78_63;
base_bench.cc:73:34: note: add new stmt: vect_x_12.77_65 = vect__11.76_62 * vect_cst_.78_63;
base_bench.cc:73:34: note: ------>vectorizing statement: _13 = (long unsigned int) i_24;

base_bench.cc:73:34: note: ------>vectorizing statement: _14 = _13 * 8;

base_bench.cc:73:34: note: ------>vectorizing statement: _15 = data_10 + _14;

base_bench.cc:73:34: note: ------>vectorizing statement: *_15 = x_12;

base_bench.cc:73:34: note: multiple-types.
base_bench.cc:73:34: note: transform statement.
base_bench.cc:73:34: note: vect_is_simple_use: operand x_12
base_bench.cc:73:34: note: def_stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: transform store. ncopies = 2
base_bench.cc:73:34: note: vect_get_vec_def_for_operand: x_12
base_bench.cc:73:34: note: vect_is_simple_use: operand x_12
base_bench.cc:73:34: note: def_stmt: x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: def =  x_12
  def_stmt =  x_12 = _11 * 2.44140625e-4;
base_bench.cc:73:34: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *data_10
base_bench.cc:73:34: note: created vectp_data.80_66
base_bench.cc:73:34: note: add new stmt: MEM[(double *)vectp_data.79_67] = vect_x_12.77_64;
base_bench.cc:73:34: note: vect_is_simple_use: operand vect_x_12.77_64
base_bench.cc:73:34: note: def_stmt: vect_x_12.77_64 = vect__11.76_61 * vect_cst_.78_63;
base_bench.cc:73:34: note: type of def: 3.
base_bench.cc:73:34: note: add new stmt: vectp_data.79_70 = vectp_data.79_67 + 16;
base_bench.cc:73:34: note: add new stmt: MEM[(double *)vectp_data.79_70] = vect_x_12.77_65;
base_bench.cc:73:34: note: ------>vectorizing statement: i_17 = i_24 + 1;

base_bench.cc:73:34: note: transform statement.
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(20)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: vect_is_simple_use: operand 1
base_bench.cc:73:34: note: transform binary/unary operation.
base_bench.cc:73:34: note: vect_get_vec_def_for_operand: i_24
base_bench.cc:73:34: note: vect_is_simple_use: operand i_24
base_bench.cc:73:34: note: def_stmt: i_24 = PHI <i_17(9), 0(20)>
base_bench.cc:73:34: note: type of def: 4.
base_bench.cc:73:34: note: def =  i_24
  def_stmt =  i_24 = PHI <i_17(9), 0(20)>
base_bench.cc:73:34: note: vect_get_vec_def_for_operand: 1
base_bench.cc:73:34: note: vect_is_simple_use: operand 1
base_bench.cc:73:34: note: Create vector_cst. nunits = 4
base_bench.cc:73:34: note: created new init_stmt: vect_cst_.82_16 = { 1, 1, 1, 1 };
base_bench.cc:73:34: note: add new stmt: vect_i_17.81_72 = vect_vec_iv_.75_59 + vect_cst_.82_16;
base_bench.cc:73:34: note: ------>vectorizing statement: ivtmp_45 = ivtmp_32 - 1;

base_bench.cc:73:34: note: ------>vectorizing statement: vectp_data.79_68 = vectp_data.79_70 + 16;

base_bench.cc:73:34: note: ------>vectorizing statement: if (ivtmp_45 != 0)


loop at base_bench.cc:73: if (ivtmp_74 < 1024)

base_bench.cc:73:34: note: LOOP VECTORIZED

base_bench.cc:66:13: note: vectorized 1 loops in function.
base_bench.cc:68:20: note: ===vect_slp_analyze_bb===
base_bench.cc:68:20: note: === vect_analyze_data_refs ===
base_bench.cc:68:20: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:405:5: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:405:5: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:406:25: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:406:25: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:406:25: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:410:26: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:410:26: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:410:26: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:66:13: note: ===vect_slp_analyze_bb===
base_bench.cc:66:13: note: === vect_analyze_data_refs ===
base_bench.cc:66:13: note: got vectype for stmt: pretmp_37 = state_7(D)->started_;
vector(32) unsigned char
base_bench.cc:66:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:66:13: note: ***** Re-trying analysis with vector size 16
base_bench.cc:66:13: note: === vect_analyze_data_refs ===
base_bench.cc:66:13: note: got vectype for stmt: pretmp_37 = state_7(D)->started_;
vector(16) unsigned char
base_bench.cc:66:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:71:9: note: ===vect_slp_analyze_bb===
base_bench.cc:71:9: note: === vect_analyze_data_refs ===
base_bench.cc:71:9: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:73:34: note: ===vect_slp_analyze_bb===
base_bench.cc:73:34: note: === vect_analyze_data_refs ===
base_bench.cc:73:34: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_data.79_67] = vect_x_12.77_64;
 scalar_type: vector(2) double
base_bench.cc:73:34: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:73:34: note: ===vect_slp_analyze_bb===
base_bench.cc:73:34: note: === vect_analyze_data_refs ===
base_bench.cc:73:34: note: got vectype for stmt: *_41 = x_2;
vector(4) double
base_bench.cc:73:34: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:73:34: note: ***** Re-trying analysis with vector size 16
base_bench.cc:73:34: note: === vect_analyze_data_refs ===
base_bench.cc:73:34: note: got vectype for stmt: *_41 = x_2;
vector(2) double
base_bench.cc:73:34: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:66:13: note: ===vect_slp_analyze_bb===
base_bench.cc:66:13: note: === vect_analyze_data_refs ===
base_bench.cc:66:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _23 = state_7(D)->total_iterations_;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_7(D)->total_iterations_ = _30;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _4 = state_7(D)->max_iterations;
const vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_7(D)->total_iterations_ and state_7(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_7(D)->total_iterations_ = _30;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_7(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_7(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ***** Re-trying analysis with vector size 16
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _23 = state_7(D)->total_iterations_;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_7(D)->total_iterations_ = _30;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _4 = state_7(D)->max_iterations;
const vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_7(D)->total_iterations_ and state_7(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_7(D)->total_iterations_ = _30;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_7(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_7(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at /usr/local/include/benchmark/benchmark.h:405
/usr/local/include/benchmark/benchmark.h:405:5: note: ===== analyze_loop_nest =====
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:5: note: ===== analyze_loop_nest_1 =====
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_loop_form ===
/usr/local/include/benchmark/benchmark.h:405:5: note: === get_loop_niters ===
/usr/local/include/benchmark/benchmark.h:405:5: note: not vectorized: control flow in loop.
/usr/local/include/benchmark/benchmark.h:405:5: note: bad loop form.

Analyzing loop at base_bench.cc:45
base_bench.cc:45:23: note: ===== analyze_loop_nest =====
base_bench.cc:45:23: note: === vect_analyze_loop_form ===
base_bench.cc:45:23: note: === get_loop_niters ===
base_bench.cc:45:23: note: === vect_analyze_data_refs ===
base_bench.cc:45:23: note: === vect_analyze_scalar_cycles ===
base_bench.cc:45:23: note: Analyze phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: Access function of PHI: {0, +, 1}_2
base_bench.cc:45:23: note: step: 1,  init: 0
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: Analyze phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: Access function of PHI: {im_28, +, pretmp_52}_2
base_bench.cc:45:23: note: step: pretmp_52,  init: im_28
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: Analyze phi: re_56 = PHI <re_31(8), re_22(10)>

base_bench.cc:45:23: note: Access function of PHI: {re_31, +, pretmp_43}_2
base_bench.cc:45:23: note: step: pretmp_43,  init: re_31
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: Analyze phi: ivtmp_24 = PHI <2000(8), ivtmp_25(10)>

base_bench.cc:45:23: note: Access function of PHI: {2000, +, 4294967295}_2
base_bench.cc:45:23: note: step: 4294967295,  init: 2000
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: === vect_pattern_recog ===
base_bench.cc:45:23: note: === vect_analyze_data_ref_accesses ===
base_bench.cc:45:23: note: === vect_mark_stmts_to_be_vectorized ===
base_bench.cc:45:23: note: init: phi relevant? i_19 = PHI <0(8), i_29(10)>
base_bench.cc:45:23: note: init: phi relevant? im_55 = PHI <im_28(8), im_27(10)>
base_bench.cc:45:23: note: init: phi relevant? re_56 = PHI <re_31(8), re_22(10)>
base_bench.cc:45:23: note: init: phi relevant? ivtmp_24 = PHI <2000(8), ivtmp_25(10)>
base_bench.cc:45:23: note: init: stmt relevant? re_22 = pretmp_43 + re_56;
base_bench.cc:45:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: init: stmt relevant? im_27 = pretmp_52 + im_55;
base_bench.cc:45:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: init: stmt relevant? i_29 = i_19 + 1;
base_bench.cc:45:23: note: init: stmt relevant? ivtmp_25 = ivtmp_24 - 1;
base_bench.cc:45:23: note: init: stmt relevant? if (ivtmp_25 == 0)
base_bench.cc:45:23: note: worklist: examine stmt: im_27 = pretmp_52 + im_55;
base_bench.cc:45:23: note: vect_is_simple_use: operand pretmp_52
base_bench.cc:45:23: note: def_stmt: pretmp_52 = pretmp_51 + pretmp_53;
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand im_55
base_bench.cc:45:23: note: def_stmt: im_55 = PHI <im_28(8), im_27(10)>
base_bench.cc:45:23: note: type of def: 4.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: worklist: examine stmt: im_55 = PHI <im_28(8), im_27(10)>
base_bench.cc:45:23: note: vect_is_simple_use: operand im_28
base_bench.cc:45:23: note: def_stmt: im_28 = PHI <0.0(2), im_14(11)>
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand im_27
base_bench.cc:45:23: note: def_stmt: im_27 = pretmp_52 + im_55;
base_bench.cc:45:23: note: type of def: 3.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: already marked relevant/live.
base_bench.cc:45:23: note: worklist: examine stmt: re_22 = pretmp_43 + re_56;
base_bench.cc:45:23: note: vect_is_simple_use: operand pretmp_43
base_bench.cc:45:23: note: def_stmt: pretmp_43 = pretmp_54 - pretmp_45;
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand re_56
base_bench.cc:45:23: note: def_stmt: re_56 = PHI <re_31(8), re_22(10)>
base_bench.cc:45:23: note: type of def: 4.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: worklist: examine stmt: re_56 = PHI <re_31(8), re_22(10)>
base_bench.cc:45:23: note: vect_is_simple_use: operand re_31
base_bench.cc:45:23: note: def_stmt: re_31 = PHI <0.0(2), re_18(11)>
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand re_22
base_bench.cc:45:23: note: def_stmt: re_22 = pretmp_43 + re_56;
base_bench.cc:45:23: note: type of def: 3.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: already marked relevant/live.
base_bench.cc:45:23: note: === vect_analyze_data_ref_dependences ===
base_bench.cc:45:23: note: === vect_determine_vectorization_factor ===
base_bench.cc:45:23: note: ==> examining phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: ==> examining phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: ==> examining phi: re_56 = PHI <re_31(8), re_22(10)>

base_bench.cc:45:23: note: ==> examining phi: ivtmp_24 = PHI <2000(8), ivtmp_25(10)>

base_bench.cc:45:23: note: ==> examining statement: re_22 = pretmp_43 + re_56;

base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(4) double
base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(4) double
base_bench.cc:45:23: note: nunits = 4
base_bench.cc:45:23: note: ==> examining statement: im_27 = pretmp_52 + im_55;

base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(4) double
base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(4) double
base_bench.cc:45:23: note: nunits = 4
base_bench.cc:45:23: note: ==> examining statement: i_29 = i_19 + 1;

base_bench.cc:45:23: note: skip.
base_bench.cc:45:23: note: ==> examining statement: ivtmp_25 = ivtmp_24 - 1;

base_bench.cc:45:23: note: skip.
base_bench.cc:45:23: note: ==> examining statement: if (ivtmp_25 == 0)

base_bench.cc:45:23: note: skip.
base_bench.cc:45:23: note: vectorization factor = 4
base_bench.cc:45:23: note: === vect_analyze_data_refs_alignment ===
base_bench.cc:45:23: note: === vect_prune_runtime_alias_test_list ===
base_bench.cc:45:23: note: === vect_enhance_data_refs_alignment ===
base_bench.cc:45:23: note: vect_can_advance_ivs_p:
base_bench.cc:45:23: note: Analyze phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: Analyze phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: Analyze phi: re_56 = PHI <re_31(8), re_22(10)>

base_bench.cc:45:23: note: Analyze phi: ivtmp_24 = PHI <2000(8), ivtmp_25(10)>

base_bench.cc:45:23: note: === vect_analyze_slp ===
base_bench.cc:45:23: note: === vect_make_slp_decision ===
base_bench.cc:45:23: note: === vect_detect_hybrid_slp ===
base_bench.cc:45:23: note: === vect_analyze_loop_operations ===
base_bench.cc:45:23: note: examining phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: examining phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: not vectorized: value used after loop.
base_bench.cc:45:23: note: bad operation or unsupported loop bound.
base_bench.cc:45:23: note: ***** Re-trying analysis with vector size 16
base_bench.cc:45:23: note: === vect_analyze_loop_form ===
base_bench.cc:45:23: note: === get_loop_niters ===
base_bench.cc:45:23: note: === vect_analyze_data_refs ===
base_bench.cc:45:23: note: === vect_analyze_scalar_cycles ===
base_bench.cc:45:23: note: Analyze phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: Access function of PHI: {0, +, 1}_2
base_bench.cc:45:23: note: step: 1,  init: 0
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: Analyze phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: Access function of PHI: {im_28, +, pretmp_52}_2
base_bench.cc:45:23: note: step: pretmp_52,  init: im_28
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: Analyze phi: re_56 = PHI <re_31(8), re_22(10)>

base_bench.cc:45:23: note: Access function of PHI: {re_31, +, pretmp_43}_2
base_bench.cc:45:23: note: step: pretmp_43,  init: re_31
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: Analyze phi: ivtmp_24 = PHI <2000(8), ivtmp_25(10)>

base_bench.cc:45:23: note: Access function of PHI: {2000, +, 4294967295}_2
base_bench.cc:45:23: note: step: 4294967295,  init: 2000
base_bench.cc:45:23: note: Detected induction.
base_bench.cc:45:23: note: === vect_pattern_recog ===
base_bench.cc:45:23: note: === vect_analyze_data_ref_accesses ===
base_bench.cc:45:23: note: === vect_mark_stmts_to_be_vectorized ===
base_bench.cc:45:23: note: init: phi relevant? i_19 = PHI <0(8), i_29(10)>
base_bench.cc:45:23: note: init: phi relevant? im_55 = PHI <im_28(8), im_27(10)>
base_bench.cc:45:23: note: init: phi relevant? re_56 = PHI <re_31(8), re_22(10)>
base_bench.cc:45:23: note: init: phi relevant? ivtmp_24 = PHI <2000(8), ivtmp_25(10)>
base_bench.cc:45:23: note: init: stmt relevant? re_22 = pretmp_43 + re_56;
base_bench.cc:45:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: init: stmt relevant? im_27 = pretmp_52 + im_55;
base_bench.cc:45:23: note: vec_stmt_relevant_p: used out of loop.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: init: stmt relevant? i_29 = i_19 + 1;
base_bench.cc:45:23: note: init: stmt relevant? ivtmp_25 = ivtmp_24 - 1;
base_bench.cc:45:23: note: init: stmt relevant? if (ivtmp_25 == 0)
base_bench.cc:45:23: note: worklist: examine stmt: im_27 = pretmp_52 + im_55;
base_bench.cc:45:23: note: vect_is_simple_use: operand pretmp_52
base_bench.cc:45:23: note: def_stmt: pretmp_52 = pretmp_51 + pretmp_53;
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand im_55
base_bench.cc:45:23: note: def_stmt: im_55 = PHI <im_28(8), im_27(10)>
base_bench.cc:45:23: note: type of def: 4.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: worklist: examine stmt: im_55 = PHI <im_28(8), im_27(10)>
base_bench.cc:45:23: note: vect_is_simple_use: operand im_28
base_bench.cc:45:23: note: def_stmt: im_28 = PHI <0.0(2), im_14(11)>
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand im_27
base_bench.cc:45:23: note: def_stmt: im_27 = pretmp_52 + im_55;
base_bench.cc:45:23: note: type of def: 3.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: already marked relevant/live.
base_bench.cc:45:23: note: worklist: examine stmt: re_22 = pretmp_43 + re_56;
base_bench.cc:45:23: note: vect_is_simple_use: operand pretmp_43
base_bench.cc:45:23: note: def_stmt: pretmp_43 = pretmp_54 - pretmp_45;
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand re_56
base_bench.cc:45:23: note: def_stmt: re_56 = PHI <re_31(8), re_22(10)>
base_bench.cc:45:23: note: type of def: 4.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: worklist: examine stmt: re_56 = PHI <re_31(8), re_22(10)>
base_bench.cc:45:23: note: vect_is_simple_use: operand re_31
base_bench.cc:45:23: note: def_stmt: re_31 = PHI <0.0(2), re_18(11)>
base_bench.cc:45:23: note: type of def: 2.
base_bench.cc:45:23: note: def_stmt is out of loop.
base_bench.cc:45:23: note: vect_is_simple_use: operand re_22
base_bench.cc:45:23: note: def_stmt: re_22 = pretmp_43 + re_56;
base_bench.cc:45:23: note: type of def: 3.
base_bench.cc:45:23: note: mark relevant 0, live 1.
base_bench.cc:45:23: note: already marked relevant/live.
base_bench.cc:45:23: note: === vect_analyze_data_ref_dependences ===
base_bench.cc:45:23: note: === vect_determine_vectorization_factor ===
base_bench.cc:45:23: note: ==> examining phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: ==> examining phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: ==> examining phi: re_56 = PHI <re_31(8), re_22(10)>

base_bench.cc:45:23: note: ==> examining phi: ivtmp_24 = PHI <2000(8), ivtmp_25(10)>

base_bench.cc:45:23: note: ==> examining statement: re_22 = pretmp_43 + re_56;

base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(2) double
base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(2) double
base_bench.cc:45:23: note: nunits = 2
base_bench.cc:45:23: note: ==> examining statement: im_27 = pretmp_52 + im_55;

base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(2) double
base_bench.cc:45:23: note: get vectype for scalar type:  double
base_bench.cc:45:23: note: vectype: vector(2) double
base_bench.cc:45:23: note: nunits = 2
base_bench.cc:45:23: note: ==> examining statement: i_29 = i_19 + 1;

base_bench.cc:45:23: note: skip.
base_bench.cc:45:23: note: ==> examining statement: ivtmp_25 = ivtmp_24 - 1;

base_bench.cc:45:23: note: skip.
base_bench.cc:45:23: note: ==> examining statement: if (ivtmp_25 == 0)

base_bench.cc:45:23: note: skip.
base_bench.cc:45:23: note: vectorization factor = 2
base_bench.cc:45:23: note: === vect_analyze_data_refs_alignment ===
base_bench.cc:45:23: note: === vect_prune_runtime_alias_test_list ===
base_bench.cc:45:23: note: === vect_enhance_data_refs_alignment ===
base_bench.cc:45:23: note: vect_can_advance_ivs_p:
base_bench.cc:45:23: note: Analyze phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: Analyze phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: Analyze phi: re_56 = PHI <re_31(8), re_22(10)>

base_bench.cc:45:23: note: Analyze phi: ivtmp_24 = PHI <2000(8), ivtmp_25(10)>

base_bench.cc:45:23: note: === vect_analyze_slp ===
base_bench.cc:45:23: note: === vect_make_slp_decision ===
base_bench.cc:45:23: note: === vect_detect_hybrid_slp ===
base_bench.cc:45:23: note: === vect_analyze_loop_operations ===
base_bench.cc:45:23: note: examining phi: i_19 = PHI <0(8), i_29(10)>

base_bench.cc:45:23: note: examining phi: im_55 = PHI <im_28(8), im_27(10)>

base_bench.cc:45:23: note: not vectorized: value used after loop.
base_bench.cc:45:23: note: bad operation or unsupported loop bound.
base_bench.cc:39:13: note: vectorized 0 loops in function.
base_bench.cc:40:41: note: ===vect_slp_analyze_bb===
base_bench.cc:40:41: note: === vect_analyze_data_refs ===
base_bench.cc:40:41: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:405:5: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:405:5: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:405:5: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:406:25: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:406:25: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:406:25: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:39:13: note: ===vect_slp_analyze_bb===
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:410:26: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:410:26: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:410:26: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:39:13: note: ===vect_slp_analyze_bb===
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: got vectype for stmt: pretmp_44 = state_13(D)->started_;
vector(32) unsigned char
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:39:13: note: ***** Re-trying analysis with vector size 16
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: got vectype for stmt: pretmp_44 = state_13(D)->started_;
vector(16) unsigned char
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:39:13: note: ===vect_slp_analyze_bb===
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:46:54: note: ===vect_slp_analyze_bb===
base_bench.cc:46:54: note: === vect_analyze_data_refs ===
base_bench.cc:46:54: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:39:13: note: ===vect_slp_analyze_bb===
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
base_bench.cc:39:13: note: ===vect_slp_analyze_bb===
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ===vect_slp_analyze_bb===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _37 = state_13(D)->total_iterations_;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_13(D)->total_iterations_ = _23;
vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _1 = state_13(D)->max_iterations;
const vector(4) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_13(D)->total_iterations_ and state_13(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_13(D)->total_iterations_ = _23;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_13(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_13(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: ***** Re-trying analysis with vector size 16
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs ===
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _37 = state_13(D)->total_iterations_;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: state_13(D)->total_iterations_ = _23;
vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: got vectype for stmt: _1 = state_13(D)->max_iterations;
const vector(2) long unsigned int
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_ref_accesses ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving state_13(D)->total_iterations_ and state_13(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: Detected interleaving of size 2
/usr/local/include/benchmark/benchmark.h:408:22: note: not consecutive access state_13(D)->total_iterations_ = _23;

/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_pattern_recog ===
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_data_refs_alignment ===
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_13(D)->total_iterations_
/usr/local/include/benchmark/benchmark.h:408:22: note: vect_compute_data_ref_alignment:
/usr/local/include/benchmark/benchmark.h:408:22: note: can't force alignment of ref: state_13(D)->max_iterations
/usr/local/include/benchmark/benchmark.h:408:22: note: === vect_analyze_slp ===
/usr/local/include/benchmark/benchmark.h:408:22: note: Failed to SLP the basic block.
/usr/local/include/benchmark/benchmark.h:408:22: note: not vectorized: failed to find SLP opportunities in basic block.
base_bench.cc:39:13: note: ===vect_slp_analyze_bb===
base_bench.cc:39:13: note: === vect_analyze_data_refs ===
base_bench.cc:39:13: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/iostream:74:25: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/iostream:74:25: note: === vect_analyze_data_refs ===
/usr/include/c++/5/iostream:74:25: note: not vectorized: not enough data-refs in basic block.
____From Compiling base.cc:

Analyzing loop at /usr/include/c++/5/bits/random.tcc:334
/usr/include/c++/5/bits/random.tcc:334:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: __x_15 = rng._M_x[_14];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: rng._M_x[__i_29] = __res_21;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: .MEM_27 = PHI <.MEM_24(4), .MEM_23(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: __i_29 = PHI <__i_22(4), 1(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {1, +, 1}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 1,  init: 1
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: ivtmp_31 = PHI <ivtmp_32(4), 623(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {623, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 18446744073709551615,  init: 623
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_17
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_20
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? .MEM_27 = PHI <.MEM_24(4), .MEM_23(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? ivtmp_31 = PHI <ivtmp_32(4), 623(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _14 = __i_29 + 18446744073709551615;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _16 = __x_15 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_18 = __x_17 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __res_21 = __x_20 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? rng._M_x[__i_29] = __res_21;
/usr/include/c++/5/bits/random.tcc:334:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __i_22 = __i_29 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? ivtmp_32 = ivtmp_31 - 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? if (ivtmp_32 == 0)
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: rng._M_x[__i_29] = __res_21;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __res_21
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __res_21 = __x_20 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __res_21 = __x_20 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_20
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_18
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_18 = __x_17 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_29
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_22
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_22 = __i_29 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_22 = __i_29 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_29
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_18 = __x_17 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_17
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_15
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand _16
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: _16 = __x_15 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: _16 = __x_15 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_15
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:334:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:334:7: note: not vectorized, possible dependence between data-refs rng._M_x[_14] and rng._M_x[__i_29]
/usr/include/c++/5/bits/random.tcc:334:7: note: bad data dependence.
/usr/include/c++/5/bits/random.tcc:334:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: __x_15 = rng._M_x[_14];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: rng._M_x[__i_29] = __res_21;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: .MEM_27 = PHI <.MEM_24(4), .MEM_23(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: __i_29 = PHI <__i_22(4), 1(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {1, +, 1}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 1,  init: 1
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: ivtmp_31 = PHI <ivtmp_32(4), 623(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {623, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 18446744073709551615,  init: 623
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_17
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_20
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? .MEM_27 = PHI <.MEM_24(4), .MEM_23(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? ivtmp_31 = PHI <ivtmp_32(4), 623(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _14 = __i_29 + 18446744073709551615;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _16 = __x_15 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_18 = __x_17 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __res_21 = __x_20 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? rng._M_x[__i_29] = __res_21;
/usr/include/c++/5/bits/random.tcc:334:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __i_22 = __i_29 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? ivtmp_32 = ivtmp_31 - 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? if (ivtmp_32 == 0)
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: rng._M_x[__i_29] = __res_21;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __res_21
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __res_21 = __x_20 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __res_21 = __x_20 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_20
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_20 = __x_18 + __i_29;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_18
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_18 = __x_17 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_29
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_22
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_22 = __i_29 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_22 = __i_29 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_29
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_29 = PHI <__i_22(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_18 = __x_17 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_17
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_17 = __x_15 ^ _16;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_15
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand _16
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: _16 = __x_15 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: _16 = __x_15 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_15
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_15 = rng._M_x[_14];
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:334:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:334:7: note: not vectorized, possible dependence between data-refs rng._M_x[_14] and rng._M_x[__i_29]
/usr/include/c++/5/bits/random.tcc:334:7: note: bad data dependence.
base.cc:53:6: note: vectorized 0 loops in function.
base.cc:54:28: note: ===vect_slp_analyze_bb===
base.cc:54:28: note: === vect_analyze_data_refs ===
base.cc:54:28: note: got vectype for stmt: _3 = *argv_2(D);
vector(4) long unsigned int
base.cc:54:28: note: not vectorized: not enough data-refs in basic block.
base.cc:54:28: note: ***** Re-trying analysis with vector size 16
base.cc:54:28: note: === vect_analyze_data_refs ===
base.cc:54:28: note: got vectype for stmt: _3 = *argv_2(D);
vector(2) long unsigned int
base.cc:54:28: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:336:24: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:336:24: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:336:24: note: got vectype for stmt: rng._M_x[__i_29] = __res_21;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:336:24: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:336:24: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:336:24: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:336:24: note: got vectype for stmt: rng._M_x[__i_29] = __res_21;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:336:24: note: not vectorized: not enough data-refs in basic block.
base.cc:53:6: note: ===vect_slp_analyze_bb===
base.cc:53:6: note: === vect_analyze_data_refs ===
base.cc:53:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: rng._M_p = 624;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:343:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: rng._M_p = 624;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:343:7: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/random.tcc:334
/usr/include/c++/5/bits/random.tcc:334:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: __x_8 = rng._M_x[_7];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: rng._M_x[__i_22] = __res_14;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: .MEM_21 = PHI <.MEM_17(4), .MEM_16(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: __i_22 = PHI <__i_15(4), 1(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {1, +, 1}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 1,  init: 1
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: ivtmp_28 = PHI <ivtmp_29(4), 623(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {623, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 18446744073709551615,  init: 623
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_13
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? .MEM_21 = PHI <.MEM_17(4), .MEM_16(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? ivtmp_28 = PHI <ivtmp_29(4), 623(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _7 = __i_22 + 18446744073709551615;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _9 = __x_8 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_11 = __x_10 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __res_14 = __x_13 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? rng._M_x[__i_22] = __res_14;
/usr/include/c++/5/bits/random.tcc:334:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __i_15 = __i_22 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? ivtmp_29 = ivtmp_28 - 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? if (ivtmp_29 == 0)
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: rng._M_x[__i_22] = __res_14;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __res_14
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __res_14 = __x_13 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __res_14 = __x_13 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_13
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_11
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_11 = __x_10 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_22
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_15
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_15 = __i_22 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_15 = __i_22 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_22
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_11 = __x_10 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_8
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand _9
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: _9 = __x_8 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: _9 = __x_8 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_8
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:334:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:334:7: note: not vectorized, possible dependence between data-refs rng._M_x[_7] and rng._M_x[__i_22]
/usr/include/c++/5/bits/random.tcc:334:7: note: bad data dependence.
/usr/include/c++/5/bits/random.tcc:334:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: __x_8 = rng._M_x[_7];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: rng._M_x[__i_22] = __res_14;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: .MEM_21 = PHI <.MEM_17(4), .MEM_16(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: __i_22 = PHI <__i_15(4), 1(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {1, +, 1}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 1,  init: 1
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: ivtmp_28 = PHI <ivtmp_29(4), 623(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {623, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 18446744073709551615,  init: 623
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_13
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? .MEM_21 = PHI <.MEM_17(4), .MEM_16(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? ivtmp_28 = PHI <ivtmp_29(4), 623(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _7 = __i_22 + 18446744073709551615;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _9 = __x_8 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_11 = __x_10 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __res_14 = __x_13 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? rng._M_x[__i_22] = __res_14;
/usr/include/c++/5/bits/random.tcc:334:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __i_15 = __i_22 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? ivtmp_29 = ivtmp_28 - 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? if (ivtmp_29 == 0)
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: rng._M_x[__i_22] = __res_14;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __res_14
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __res_14 = __x_13 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __res_14 = __x_13 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_13
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_13 = __x_11 + __i_22;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_11
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_11 = __x_10 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_22
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_15
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_15 = __i_22 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_15 = __i_22 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_22
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_22 = PHI <__i_15(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_11 = __x_10 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_10 = __x_8 ^ _9;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_8
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand _9
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: _9 = __x_8 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: _9 = __x_8 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_8
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_8 = rng._M_x[_7];
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:334:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:334:7: note: not vectorized, possible dependence between data-refs rng._M_x[_7] and rng._M_x[__i_22]
/usr/include/c++/5/bits/random.tcc:334:7: note: bad data dependence.
base.cc:60:6: note: vectorized 0 loops in function.
base.cc:60:37: note: ===vect_slp_analyze_bb===
base.cc:60:37: note: === vect_analyze_data_refs ===
base.cc:60:37: note: got vectype for stmt: rng._M_x[0] = __res_5;
vector(4) long unsigned int
base.cc:60:37: note: got vectype for stmt: _25 = MEM[(long unsigned int *)&rng];
vector(4) long unsigned int
base.cc:60:37: note: === vect_analyze_data_ref_accesses ===
base.cc:60:37: note: not consecutive access _25 = MEM[(long unsigned int *)&rng];

base.cc:60:37: note: not consecutive access rng._M_x[0] = __res_5;

base.cc:60:37: note: === vect_pattern_recog ===
base.cc:60:37: note: vect_is_simple_use: operand seed.0_2
base.cc:60:37: note: def_stmt: seed.0_2 = (long unsigned int) seed_1(D);
base.cc:60:37: note: type of def: 3.
base.cc:60:37: note: vect_is_simple_use: operand seed_1(D)
base.cc:60:37: note: def_stmt: GIMPLE_NOP
base.cc:60:37: note: === vect_analyze_data_refs_alignment ===
base.cc:60:37: note: === vect_analyze_slp ===
base.cc:60:37: note: Failed to SLP the basic block.
base.cc:60:37: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:60:37: note: ***** Re-trying analysis with vector size 16
base.cc:60:37: note: === vect_analyze_data_refs ===
base.cc:60:37: note: got vectype for stmt: rng._M_x[0] = __res_5;
vector(2) long unsigned int
base.cc:60:37: note: got vectype for stmt: _25 = MEM[(long unsigned int *)&rng];
vector(2) long unsigned int
base.cc:60:37: note: === vect_analyze_data_ref_accesses ===
base.cc:60:37: note: not consecutive access _25 = MEM[(long unsigned int *)&rng];

base.cc:60:37: note: not consecutive access rng._M_x[0] = __res_5;

base.cc:60:37: note: === vect_pattern_recog ===
base.cc:60:37: note: vect_is_simple_use: operand seed.0_2
base.cc:60:37: note: def_stmt: seed.0_2 = (long unsigned int) seed_1(D);
base.cc:60:37: note: type of def: 3.
base.cc:60:37: note: vect_is_simple_use: operand seed_1(D)
base.cc:60:37: note: def_stmt: GIMPLE_NOP
base.cc:60:37: note: === vect_analyze_data_refs_alignment ===
base.cc:60:37: note: === vect_analyze_slp ===
base.cc:60:37: note: Failed to SLP the basic block.
base.cc:60:37: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:336:24: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:336:24: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:336:24: note: got vectype for stmt: rng._M_x[__i_22] = __res_14;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:336:24: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:336:24: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:336:24: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:336:24: note: got vectype for stmt: rng._M_x[__i_22] = __res_14;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:336:24: note: not vectorized: not enough data-refs in basic block.
base.cc:60:6: note: ===vect_slp_analyze_bb===
base.cc:60:6: note: === vect_analyze_data_refs ===
base.cc:60:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: rng._M_p = 624;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:343:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: rng._M_p = 624;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:343:7: note: not vectorized: not enough data-refs in basic block.
base.cc:71:3: note: ===vect_slp_analyze_bb===
base.cc:71:3: note: === vect_analyze_data_refs ===
base.cc:71:3: note: not vectorized: not enough data-refs in basic block.
base.cc:72:20: note: ===vect_slp_analyze_bb===
base.cc:72:20: note: === vect_analyze_data_refs ===
base.cc:72:20: note: not vectorized: not enough data-refs in basic block.
base.cc:75:3: note: ===vect_slp_analyze_bb===
base.cc:75:3: note: === vect_analyze_data_refs ===
base.cc:75:3: note: not vectorized: not enough data-refs in basic block.
base.cc:64:8: note: ===vect_slp_analyze_bb===
base.cc:64:8: note: === vect_analyze_data_refs ===
base.cc:64:8: note: not vectorized: not enough data-refs in basic block.
base.cc:76:27: note: ===vect_slp_analyze_bb===
base.cc:76:27: note: === vect_analyze_data_refs ===
base.cc:76:27: note: not vectorized: not enough data-refs in basic block.
base.cc:64:8: note: ===vect_slp_analyze_bb===
base.cc:64:8: note: === vect_analyze_data_refs ===
base.cc:64:8: note: not vectorized: not enough data-refs in basic block.
base.cc:79:27: note: ===vect_slp_analyze_bb===
base.cc:79:27: note: === vect_analyze_data_refs ===
base.cc:79:27: note: not vectorized: not enough data-refs in basic block.
base.cc:64:8: note: ===vect_slp_analyze_bb===
base.cc:64:8: note: === vect_analyze_data_refs ===
base.cc:64:8: note: not vectorized: not enough data-refs in basic block.
base.cc:95:29: note: ===vect_slp_analyze_bb===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: not vectorized: not enough data-refs in basic block.
base.cc:105:3: note: ===vect_slp_analyze_bb===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: not vectorized: not enough data-refs in basic block.
base.cc:106:17: note: ===vect_slp_analyze_bb===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: not vectorized: not enough data-refs in basic block.
base.cc:107:10: note: ===vect_slp_analyze_bb===
base.cc:107:10: note: === vect_analyze_data_refs ===
base.cc:107:10: note: not vectorized: not enough data-refs in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: not vectorized: not enough data-refs in basic block.
base.cc:108:16: note: ===vect_slp_analyze_bb===
base.cc:108:16: note: === vect_analyze_data_refs ===
base.cc:108:16: note: not vectorized: not enough data-refs in basic block.
base.cc:110:11: note: ===vect_slp_analyze_bb===
base.cc:110:11: note: === vect_analyze_data_refs ===
base.cc:110:11: note: not vectorized: not enough data-refs in basic block.
base.cc:189:24: note: ===vect_slp_analyze_bb===
base.cc:189:24: note: === vect_analyze_data_refs ===
base.cc:189:24: note: got vectype for stmt: this_2(D)->n_ = 0;
vector(4) long int
base.cc:189:24: note: got vectype for stmt: this_2(D)->data_ = 0B;
vector(4) long unsigned int
base.cc:189:24: note: === vect_analyze_data_ref_accesses ===
base.cc:189:24: note: not consecutive access this_2(D)->n_ = 0;

base.cc:189:24: note: not consecutive access this_2(D)->data_ = 0B;

base.cc:189:24: note: === vect_pattern_recog ===
base.cc:189:24: note: === vect_analyze_data_refs_alignment ===
base.cc:189:24: note: === vect_analyze_slp ===
base.cc:189:24: note: Failed to SLP the basic block.
base.cc:189:24: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:189:24: note: ***** Re-trying analysis with vector size 16
base.cc:189:24: note: === vect_analyze_data_refs ===
base.cc:189:24: note: got vectype for stmt: this_2(D)->n_ = 0;
vector(2) long int
base.cc:189:24: note: got vectype for stmt: this_2(D)->data_ = 0B;
vector(2) long unsigned int
base.cc:189:24: note: === vect_analyze_data_ref_accesses ===
base.cc:189:24: note: not consecutive access this_2(D)->n_ = 0;

base.cc:189:24: note: not consecutive access this_2(D)->data_ = 0B;

base.cc:189:24: note: === vect_pattern_recog ===
base.cc:189:24: note: === vect_analyze_data_refs_alignment ===
base.cc:189:24: note: === vect_analyze_slp ===
base.cc:189:24: note: Failed to SLP the basic block.
base.cc:189:24: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:199:7: note: ===vect_slp_analyze_bb===
base.cc:199:7: note: === vect_analyze_data_refs ===
base.cc:199:7: note: got vectype for stmt: _4 = this_3(D)->data_;
vector(4) long unsigned int
base.cc:199:7: note: not vectorized: not enough data-refs in basic block.
base.cc:199:7: note: ***** Re-trying analysis with vector size 16
base.cc:199:7: note: === vect_analyze_data_refs ===
base.cc:199:7: note: got vectype for stmt: _4 = this_3(D)->data_;
vector(2) long unsigned int
base.cc:199:7: note: not vectorized: not enough data-refs in basic block.
base.cc:198:6: note: ===vect_slp_analyze_bb===
base.cc:198:6: note: === vect_analyze_data_refs ===
base.cc:198:6: note: not vectorized: not enough data-refs in basic block.
base.cc:200:18: note: ===vect_slp_analyze_bb===
base.cc:200:18: note: === vect_analyze_data_refs ===
base.cc:200:18: note: not vectorized: not enough data-refs in basic block.
base.cc:204:1: note: ===vect_slp_analyze_bb===
base.cc:204:1: note: === vect_analyze_data_refs ===
base.cc:204:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:208
base.cc:208:21: note: ===== analyze_loop_nest =====
base.cc:208:21: note: === vect_analyze_loop_form ===
base.cc:208:21: note: === get_loop_niters ===
base.cc:208:21: note: Symbolic number of iterations is (unsigned long) _20
base.cc:208:21: note: === vect_analyze_data_refs ===
base.cc:208:21: note: got vectype for stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
vector(4) double
base.cc:208:21: note: got vectype for stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
vector(4) double
base.cc:208:21: note: === vect_analyze_scalar_cycles ===
base.cc:208:21: note: Analyze phi: ans_22 = PHI <0.0(3), ans_11(6)>

base.cc:208:21: note: Access function of PHI: {0.0, +, _17}_1
base.cc:208:21: note: step: _17,  init: 0.0
base.cc:208:21: note: step unknown.
base.cc:208:21: note: Analyze phi: i_24 = PHI <0(3), i_12(6)>

base.cc:208:21: note: Access function of PHI: {0, +, 1}_1
base.cc:208:21: note: step: 1,  init: 0
base.cc:208:21: note: Detected induction.
base.cc:208:21: note: Analyze phi: ans_22 = PHI <0.0(3), ans_11(6)>

base.cc:208:21: note: detected reduction: ans_11 = _17 + ans_22;

base.cc:208:21: note: Detected reduction.
base.cc:208:21: note: === vect_pattern_recog ===
base.cc:208:21: note: vect_is_simple_use: operand i.6_8
base.cc:208:21: note: def_stmt: i.6_8 = (long unsigned int) i_24;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand i_24
base.cc:208:21: note: def_stmt: i_24 = PHI <0(3), i_12(6)>
base.cc:208:21: note: type of def: 4.
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: === vect_analyze_data_ref_accesses ===
base.cc:208:21: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_10]> and IMAGPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: Detected interleaving of size 2
base.cc:208:21: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:208:21: note: init: phi relevant? ans_22 = PHI <0.0(3), ans_11(6)>
base.cc:208:21: note: init: phi relevant? i_24 = PHI <0(3), i_12(6)>
base.cc:208:21: note: init: stmt relevant? i.6_8 = (long unsigned int) i_24;
base.cc:208:21: note: init: stmt relevant? _9 = i.6_8 * 16;
base.cc:208:21: note: init: stmt relevant? _10 = pretmp_34 + _9;
base.cc:208:21: note: init: stmt relevant? _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: init: stmt relevant? _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: init: stmt relevant? powmult_14 = _13 * _13;
base.cc:208:21: note: init: stmt relevant? powmult_16 = _15 * _15;
base.cc:208:21: note: init: stmt relevant? _17 = powmult_14 + powmult_16;
base.cc:208:21: note: init: stmt relevant? ans_11 = _17 + ans_22;
base.cc:208:21: note: vec_stmt_relevant_p: used out of loop.
base.cc:208:21: note: mark relevant 0, live 1.
base.cc:208:21: note: init: stmt relevant? i_12 = i_24 + 1;
base.cc:208:21: note: init: stmt relevant? if (i_12 >= _20)
base.cc:208:21: note: worklist: examine stmt: ans_11 = _17 + ans_22;
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: vect_is_simple_use: operand ans_22
base.cc:208:21: note: def_stmt: ans_22 = PHI <0.0(3), ans_11(6)>
base.cc:208:21: note: type of def: 5.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: worklist: examine stmt: ans_22 = PHI <0.0(3), ans_11(6)>
base.cc:208:21: note: vect_is_simple_use: operand 0.0
base.cc:208:21: note: vect_is_simple_use: operand ans_11
base.cc:208:21: note: def_stmt: ans_11 = _17 + ans_22;
base.cc:208:21: note: type of def: 5.
base.cc:208:21: note: reduc-stmt defining reduc-phi in the same nest.
base.cc:208:21: note: worklist: examine stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: vect_is_simple_use: operand powmult_14
base.cc:208:21: note: def_stmt: powmult_14 = _13 * _13;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: vect_is_simple_use: operand powmult_16
base.cc:208:21: note: def_stmt: powmult_16 = _15 * _15;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: worklist: examine stmt: powmult_16 = _15 * _15;
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: already marked relevant/live.
base.cc:208:21: note: worklist: examine stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: worklist: examine stmt: powmult_14 = _13 * _13;
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: mark relevant 3, live 0.
base.cc:208:21: note: already marked relevant/live.
base.cc:208:21: note: worklist: examine stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: === vect_analyze_data_ref_dependences ===
base.cc:208:21: note: === vect_determine_vectorization_factor ===
base.cc:208:21: note: ==> examining phi: ans_22 = PHI <0.0(3), ans_11(6)>

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining phi: i_24 = PHI <0(3), i_12(6)>

base.cc:208:21: note: ==> examining statement: i.6_8 = (long unsigned int) i_24;

base.cc:208:21: note: skip.
base.cc:208:21: note: ==> examining statement: _9 = i.6_8 * 16;

base.cc:208:21: note: skip.
base.cc:208:21: note: ==> examining statement: _10 = pretmp_34 + _9;

base.cc:208:21: note: skip.
base.cc:208:21: note: ==> examining statement: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining statement: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining statement: powmult_14 = _13 * _13;

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining statement: powmult_16 = _15 * _15;

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining statement: _17 = powmult_14 + powmult_16;

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining statement: ans_11 = _17 + ans_22;

base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: get vectype for scalar type:  double
base.cc:208:21: note: vectype: vector(4) double
base.cc:208:21: note: nunits = 4
base.cc:208:21: note: ==> examining statement: i_12 = i_24 + 1;

base.cc:208:21: note: skip.
base.cc:208:21: note: ==> examining statement: if (i_12 >= _20)

base.cc:208:21: note: skip.
base.cc:208:21: note: vectorization factor = 4
base.cc:208:21: note: === vect_analyze_data_refs_alignment ===
base.cc:208:21: note: vect_compute_data_ref_alignment:
base.cc:208:21: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: vect_compute_data_ref_alignment:
base.cc:208:21: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: === vect_prune_runtime_alias_test_list ===
base.cc:208:21: note: === vect_enhance_data_refs_alignment ===
base.cc:208:21: note: vector alignment may not be reachable
base.cc:208:21: note: vect_can_advance_ivs_p:
base.cc:208:21: note: Analyze phi: ans_22 = PHI <0.0(3), ans_11(6)>

base.cc:208:21: note: reduc phi. skip.
base.cc:208:21: note: Analyze phi: i_24 = PHI <0(3), i_12(6)>

base.cc:208:21: note: Vectorizing an unaligned access.
base.cc:208:21: note: === vect_analyze_slp ===
base.cc:208:21: note: === vect_make_slp_decision ===
base.cc:208:21: note: === vect_detect_hybrid_slp ===
base.cc:208:21: note: === vect_analyze_loop_operations ===
base.cc:208:21: note: examining phi: ans_22 = PHI <0.0(3), ans_11(6)>

base.cc:208:21: note: examining phi: i_24 = PHI <0(3), i_12(6)>

base.cc:208:21: note: ==> examining statement: i.6_8 = (long unsigned int) i_24;
base.cc:208:21: note: irrelevant.
base.cc:208:21: note: ==> examining statement: _9 = i.6_8 * 16;
base.cc:208:21: note: irrelevant.
base.cc:208:21: note: ==> examining statement: _10 = pretmp_34 + _9;
base.cc:208:21: note: irrelevant.
base.cc:208:21: note: ==> examining statement: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: not ssa-name.
base.cc:208:21: note: use not simple.
base.cc:208:21: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: not ssa-name.
base.cc:208:21: note: use not simple.
base.cc:208:21: note: no array mode for V4DF[2]
base.cc:208:21: note: vect_model_load_cost: strided group_size = 2 .
base.cc:208:21: note: vect_model_load_cost: unaligned supported by hardware.
base.cc:208:21: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
base.cc:208:21: note: ==> examining statement: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: vect_is_simple_use: operand IMAGPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: not ssa-name.
base.cc:208:21: note: use not simple.
base.cc:208:21: note: vect_is_simple_use: operand IMAGPART_EXPR <MEM[(const struct complex &)_10]>
base.cc:208:21: note: not ssa-name.
base.cc:208:21: note: use not simple.
base.cc:208:21: note: no array mode for V4DF[2]
base.cc:208:21: note: vect_model_load_cost: unaligned supported by hardware.
base.cc:208:21: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
base.cc:208:21: note: ==> examining statement: powmult_14 = _13 * _13;
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: === vectorizable_operation ===
base.cc:208:21: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:208:21: note: ==> examining statement: powmult_16 = _15 * _15;
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: === vectorizable_operation ===
base.cc:208:21: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:208:21: note: ==> examining statement: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: vect_is_simple_use: operand powmult_14
base.cc:208:21: note: def_stmt: powmult_14 = _13 * _13;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand powmult_16
base.cc:208:21: note: def_stmt: powmult_16 = _15 * _15;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: === vectorizable_operation ===
base.cc:208:21: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:208:21: note: ==> examining statement: ans_11 = _17 + ans_22;
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand ans_22
base.cc:208:21: note: def_stmt: ans_22 = PHI <0.0(3), ans_11(6)>
base.cc:208:21: note: type of def: 5.
base.cc:208:21: note: detected reduction: ans_11 = _17 + ans_22;

vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 2 .
base.cc:208:21: note: ==> examining statement: i_12 = i_24 + 1;
base.cc:208:21: note: irrelevant.
base.cc:208:21: note: ==> examining statement: if (i_12 >= _20)
base.cc:208:21: note: irrelevant.
base.cc:208:21: note: === vect_update_slp_costs_according_to_vf ===
base.cc:208:21: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
base.cc:208:21: note: Cost model analysis: 
  Vector inside of loop cost: 10
  Vector prologue cost: 7
  Vector epilogue cost: 14
  Scalar iteration cost: 6
  Scalar outside cost: 6
  Vector outside cost: 21
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 3
base.cc:208:21: note:   Runtime profitability threshold = 3
base.cc:208:21: note:   Static estimate profitability threshold = 3
base.cc:208:21: note: epilog loop required
base.cc:208:21: note: vect_can_advance_ivs_p:
base.cc:208:21: note: Analyze phi: ans_22 = PHI <0.0(3), ans_11(6)>

base.cc:208:21: note: reduc phi. skip.
base.cc:208:21: note: Analyze phi: i_24 = PHI <0(3), i_12(6)>

base.cc:208:21: note: loop vectorized
base.cc:208:21: note: === vec_transform_loop ===
base.cc:208:21: note: Profitability threshold is 3 loop iterations.
base.cc:208:21: note: === vect_do_peeling_for_loop_bound ===
base.cc:208:21: note: vect_update_ivs_after_vectorizer: phi: ans_22 = PHI <0.0(12), ans_11(6)>

base.cc:208:21: note: reduc phi. skip.
base.cc:208:21: note: vect_update_ivs_after_vectorizer: phi: i_24 = PHI <0(12), i_12(6)>

Setting upper bound of nb iterations for epilogue loop to 2
base.cc:208:21: note: ------>vectorizing phi: ans_22 = PHI <0.0(16), ans_11(6)>

base.cc:208:21: note: ------>vectorizing phi: i_24 = PHI <0(16), i_12(6)>

base.cc:208:21: note: ------>vectorizing statement: i.6_8 = (long unsigned int) i_24;

base.cc:208:21: note: ------>vectorizing statement: _9 = i.6_8 * 16;

base.cc:208:21: note: ------>vectorizing statement: _10 = pretmp_34 + _9;

base.cc:208:21: note: ------>vectorizing statement: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;

base.cc:208:21: note: transform statement.
base.cc:208:21: note: no array mode for V4DF[2]
base.cc:208:21: note: transform load. ncopies = 1
base.cc:208:21: note: create vector_type-pointer variable to type: vector(4) double  vectorizing a pointer ref: MEM[(const struct complex &)pretmp_34]
base.cc:208:21: note: created vectp_pretmp.501_25
base.cc:208:21: note: add new stmt: vect__13.502_48 = MEM[(const struct complex &)vectp_pretmp.500_26];
base.cc:208:21: note: add new stmt: vectp_pretmp.500_49 = vectp_pretmp.500_26 + 32;
base.cc:208:21: note: add new stmt: vect__13.503_50 = MEM[(const struct complex &)vectp_pretmp.500_49];
base.cc:208:21: note: add new stmt: vect_perm_even_51 = VEC_PERM_EXPR <vect__13.502_48, vect__13.503_50, { 0, 2, 4, 6 }>;
base.cc:208:21: note: add new stmt: vect_perm_odd_52 = VEC_PERM_EXPR <vect__13.502_48, vect__13.503_50, { 1, 3, 5, 7 }>;
base.cc:208:21: note: ------>vectorizing statement: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;

base.cc:208:21: note: transform statement.
base.cc:208:21: note: no array mode for V4DF[2]
base.cc:208:21: note: transform load. ncopies = 1
base.cc:208:21: note: ------>vectorizing statement: powmult_14 = _13 * _13;

base.cc:208:21: note: transform statement.
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: transform binary/unary operation.
base.cc:208:21: note: vect_get_vec_def_for_operand: _13
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  _13
  def_stmt =  _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: vect_get_vec_def_for_operand: _13
base.cc:208:21: note: vect_is_simple_use: operand _13
base.cc:208:21: note: def_stmt: _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  _13
  def_stmt =  _13 = REALPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: add new stmt: vect_powmult_14.504_53 = vect_perm_even_51 * vect_perm_even_51;
base.cc:208:21: note: ------>vectorizing statement: powmult_16 = _15 * _15;

base.cc:208:21: note: transform statement.
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: transform binary/unary operation.
base.cc:208:21: note: vect_get_vec_def_for_operand: _15
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  _15
  def_stmt =  _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: vect_get_vec_def_for_operand: _15
base.cc:208:21: note: vect_is_simple_use: operand _15
base.cc:208:21: note: def_stmt: _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  _15
  def_stmt =  _15 = IMAGPART_EXPR <MEM[(const struct complex &)_10]>;
base.cc:208:21: note: add new stmt: vect_powmult_16.505_54 = vect_perm_odd_52 * vect_perm_odd_52;
base.cc:208:21: note: ------>vectorizing statement: _17 = powmult_14 + powmult_16;

base.cc:208:21: note: transform statement.
base.cc:208:21: note: vect_is_simple_use: operand powmult_14
base.cc:208:21: note: def_stmt: powmult_14 = _13 * _13;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand powmult_16
base.cc:208:21: note: def_stmt: powmult_16 = _15 * _15;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: transform binary/unary operation.
base.cc:208:21: note: vect_get_vec_def_for_operand: powmult_14
base.cc:208:21: note: vect_is_simple_use: operand powmult_14
base.cc:208:21: note: def_stmt: powmult_14 = _13 * _13;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  powmult_14
  def_stmt =  powmult_14 = _13 * _13;
base.cc:208:21: note: vect_get_vec_def_for_operand: powmult_16
base.cc:208:21: note: vect_is_simple_use: operand powmult_16
base.cc:208:21: note: def_stmt: powmult_16 = _15 * _15;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  powmult_16
  def_stmt =  powmult_16 = _15 * _15;
base.cc:208:21: note: add new stmt: vect__17.506_55 = vect_powmult_14.504_53 + vect_powmult_16.505_54;
base.cc:208:21: note: ------>vectorizing statement: ans_11 = _17 + ans_22;

base.cc:208:21: note: transform statement.
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: vect_is_simple_use: operand ans_22
base.cc:208:21: note: def_stmt: ans_22 = PHI <0.0(16), ans_11(6)>
base.cc:208:21: note: type of def: 5.
base.cc:208:21: note: detected reduction: ans_11 = _17 + ans_22;

base.cc:208:21: note: transform reduction.
base.cc:208:21: note: vect_get_vec_def_for_operand: _17
base.cc:208:21: note: vect_is_simple_use: operand _17
base.cc:208:21: note: def_stmt: _17 = powmult_14 + powmult_16;
base.cc:208:21: note: type of def: 3.
base.cc:208:21: note: def =  _17
  def_stmt =  _17 = powmult_14 + powmult_16;
base.cc:208:21: note: add new stmt: vect_ans_11.507_57 = vect__17.506_55 + vect_ans_11.507_56;
base.cc:208:21: note: vect_is_simple_use: operand 0.0
base.cc:208:21: note: vect_get_vec_def_for_operand: ans_22
base.cc:208:21: note: vect_is_simple_use: operand ans_22
base.cc:208:21: note: def_stmt: ans_22 = PHI <0.0(16), ans_11(6)>
base.cc:208:21: note: type of def: 5.
base.cc:208:21: note: def =  ans_22
  def_stmt =  ans_22 = PHI <0.0(16), ans_11(6)>
base.cc:208:21: note: transform reduction: created def-use cycle: vect_ans_11.507_56 = PHI <{ 0.0, 0.0, 0.0, 0.0 }(16), vect_ans_11.507_57(6)>

vect_ans_11.507_57 = vect__17.506_55 + vect_ans_11.507_56;

base.cc:208:21: note: Reduce using direct vector reduction.
base.cc:208:21: note: ------>vectorizing statement: i_12 = i_24 + 1;

base.cc:208:21: note: ------>vectorizing statement: vectp_pretmp.500_47 = vectp_pretmp.500_49 + 32;

base.cc:208:21: note: ------>vectorizing statement: if (i_12 >= _20)


loop at base.cc:209: if (ivtmp_62 >= bnd.497_44)

base.cc:208:21: note: LOOP VECTORIZED

base.cc:206:8: note: vectorized 1 loops in function.
base.cc:208:23: note: ===vect_slp_analyze_bb===
base.cc:208:23: note: === vect_analyze_data_refs ===
base.cc:208:23: note: got vectype for stmt: _20 = this_5(D)->n_;
const vector(4) long int
base.cc:208:23: note: not vectorized: not enough data-refs in basic block.
base.cc:208:23: note: ***** Re-trying analysis with vector size 16
base.cc:208:23: note: === vect_analyze_data_refs ===
base.cc:208:23: note: got vectype for stmt: _20 = this_5(D)->n_;
const vector(2) long int
base.cc:208:23: note: not vectorized: not enough data-refs in basic block.
base.cc:206:8: note: ===vect_slp_analyze_bb===
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: got vectype for stmt: pretmp_34 = this_5(D)->data_;
vector(4) long unsigned int
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
base.cc:206:8: note: ***** Re-trying analysis with vector size 16
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: got vectype for stmt: pretmp_34 = this_5(D)->data_;
vector(2) long unsigned int
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
base.cc:206:8: note: ===vect_slp_analyze_bb===
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/complex:1224:38: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/complex:1224:38: note: === vect_analyze_data_refs ===
/usr/include/c++/5/complex:1224:38: note: not vectorized: no vectype for stmt: vect__13.502_48 = MEM[(const struct complex &)vectp_pretmp.500_26];
 scalar_type: vector(4) double
/usr/include/c++/5/complex:1224:38: note: not vectorized: not enough data-refs in basic block.
base.cc:209:17: note: ===vect_slp_analyze_bb===
base.cc:209:17: note: === vect_analyze_data_refs ===
base.cc:209:17: note: got vectype for stmt: _30 = REALPART_EXPR <MEM[(const struct complex &)_31]>;
vector(4) double
base.cc:209:17: note: got vectype for stmt: _29 = IMAGPART_EXPR <MEM[(const struct complex &)_31]>;
vector(4) double
base.cc:209:17: note: === vect_analyze_data_ref_accesses ===
base.cc:209:17: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_31]> and IMAGPART_EXPR <MEM[(const struct complex &)_31]>
base.cc:209:17: note: Detected interleaving of size 2
base.cc:209:17: note: === vect_pattern_recog ===
base.cc:209:17: note: vect_is_simple_use: operand i.6_33
base.cc:209:17: note: def_stmt: i.6_33 = (long unsigned int) i_39;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand i_39
base.cc:209:17: note: def_stmt: i_39 = PHI <i_71(9)>
base.cc:209:17: note: type of def: 2.
base.cc:209:17: note: vect_is_simple_use: operand _30
base.cc:209:17: note: def_stmt: _30 = REALPART_EXPR <MEM[(const struct complex &)_31]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand _29
base.cc:209:17: note: def_stmt: _29 = IMAGPART_EXPR <MEM[(const struct complex &)_31]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: === vect_analyze_data_refs_alignment ===
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_31]>
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_31]>
base.cc:209:17: note: === vect_analyze_slp ===
base.cc:209:17: note: Failed to SLP the basic block.
base.cc:209:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:209:17: note: ***** Re-trying analysis with vector size 16
base.cc:209:17: note: === vect_analyze_data_refs ===
base.cc:209:17: note: got vectype for stmt: _30 = REALPART_EXPR <MEM[(const struct complex &)_31]>;
vector(2) double
base.cc:209:17: note: got vectype for stmt: _29 = IMAGPART_EXPR <MEM[(const struct complex &)_31]>;
vector(2) double
base.cc:209:17: note: === vect_analyze_data_ref_accesses ===
base.cc:209:17: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_31]> and IMAGPART_EXPR <MEM[(const struct complex &)_31]>
base.cc:209:17: note: Detected interleaving of size 2
base.cc:209:17: note: === vect_pattern_recog ===
base.cc:209:17: note: vect_is_simple_use: operand i.6_33
base.cc:209:17: note: def_stmt: i.6_33 = (long unsigned int) i_39;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand i_39
base.cc:209:17: note: def_stmt: i_39 = PHI <i_71(9)>
base.cc:209:17: note: type of def: 2.
base.cc:209:17: note: vect_is_simple_use: operand _30
base.cc:209:17: note: def_stmt: _30 = REALPART_EXPR <MEM[(const struct complex &)_31]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand _29
base.cc:209:17: note: def_stmt: _29 = IMAGPART_EXPR <MEM[(const struct complex &)_31]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: === vect_analyze_data_refs_alignment ===
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_31]>
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_31]>
base.cc:209:17: note: === vect_analyze_slp ===
base.cc:209:17: note: Failed to SLP the basic block.
base.cc:209:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:206:8: note: ===vect_slp_analyze_bb===
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
base.cc:209:17: note: ===vect_slp_analyze_bb===
base.cc:209:17: note: === vect_analyze_data_refs ===
base.cc:209:17: note: got vectype for stmt: _9 = REALPART_EXPR <MEM[(const struct complex &)_8]>;
vector(4) double
base.cc:209:17: note: got vectype for stmt: _10 = IMAGPART_EXPR <MEM[(const struct complex &)_8]>;
vector(4) double
base.cc:209:17: note: === vect_analyze_data_ref_accesses ===
base.cc:209:17: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_8]> and IMAGPART_EXPR <MEM[(const struct complex &)_8]>
base.cc:209:17: note: Detected interleaving of size 2
base.cc:209:17: note: === vect_pattern_recog ===
base.cc:209:17: note: vect_is_simple_use: operand i.6_24
base.cc:209:17: note: def_stmt: i.6_24 = (long unsigned int) i_38;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand i_38
base.cc:209:17: note: def_stmt: i_38 = PHI <tmp.499_7(7), 0(3)>
base.cc:209:17: note: type of def: 2.
base.cc:209:17: note: vect_is_simple_use: operand _9
base.cc:209:17: note: def_stmt: _9 = REALPART_EXPR <MEM[(const struct complex &)_8]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand _10
base.cc:209:17: note: def_stmt: _10 = IMAGPART_EXPR <MEM[(const struct complex &)_8]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: === vect_analyze_data_refs_alignment ===
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_8]>
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_8]>
base.cc:209:17: note: === vect_analyze_slp ===
base.cc:209:17: note: Failed to SLP the basic block.
base.cc:209:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:209:17: note: ***** Re-trying analysis with vector size 16
base.cc:209:17: note: === vect_analyze_data_refs ===
base.cc:209:17: note: got vectype for stmt: _9 = REALPART_EXPR <MEM[(const struct complex &)_8]>;
vector(2) double
base.cc:209:17: note: got vectype for stmt: _10 = IMAGPART_EXPR <MEM[(const struct complex &)_8]>;
vector(2) double
base.cc:209:17: note: === vect_analyze_data_ref_accesses ===
base.cc:209:17: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_8]> and IMAGPART_EXPR <MEM[(const struct complex &)_8]>
base.cc:209:17: note: Detected interleaving of size 2
base.cc:209:17: note: === vect_pattern_recog ===
base.cc:209:17: note: vect_is_simple_use: operand i.6_24
base.cc:209:17: note: def_stmt: i.6_24 = (long unsigned int) i_38;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand i_38
base.cc:209:17: note: def_stmt: i_38 = PHI <tmp.499_7(7), 0(3)>
base.cc:209:17: note: type of def: 2.
base.cc:209:17: note: vect_is_simple_use: operand _9
base.cc:209:17: note: def_stmt: _9 = REALPART_EXPR <MEM[(const struct complex &)_8]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand _10
base.cc:209:17: note: def_stmt: _10 = IMAGPART_EXPR <MEM[(const struct complex &)_8]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: === vect_analyze_data_refs_alignment ===
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_8]>
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_8]>
base.cc:209:17: note: === vect_analyze_slp ===
base.cc:209:17: note: Failed to SLP the basic block.
base.cc:209:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:209:17: note: ===vect_slp_analyze_bb===
base.cc:209:17: note: === vect_analyze_data_refs ===
base.cc:209:17: note: got vectype for stmt: _65 = REALPART_EXPR <MEM[(const struct complex &)_64]>;
vector(4) double
base.cc:209:17: note: got vectype for stmt: _66 = IMAGPART_EXPR <MEM[(const struct complex &)_64]>;
vector(4) double
base.cc:209:17: note: === vect_analyze_data_ref_accesses ===
base.cc:209:17: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_64]> and IMAGPART_EXPR <MEM[(const struct complex &)_64]>
base.cc:209:17: note: Detected interleaving of size 2
base.cc:209:17: note: === vect_pattern_recog ===
base.cc:209:17: note: vect_is_simple_use: operand i.6_46
base.cc:209:17: note: def_stmt: i.6_46 = (long unsigned int) i_12;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand i_12
base.cc:209:17: note: def_stmt: i_12 = PHI <i_17(8)>
base.cc:209:17: note: type of def: 2.
base.cc:209:17: note: vect_is_simple_use: operand _65
base.cc:209:17: note: def_stmt: _65 = REALPART_EXPR <MEM[(const struct complex &)_64]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand _66
base.cc:209:17: note: def_stmt: _66 = IMAGPART_EXPR <MEM[(const struct complex &)_64]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: === vect_analyze_data_refs_alignment ===
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_64]>
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_64]>
base.cc:209:17: note: === vect_analyze_slp ===
base.cc:209:17: note: Failed to SLP the basic block.
base.cc:209:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:209:17: note: ***** Re-trying analysis with vector size 16
base.cc:209:17: note: === vect_analyze_data_refs ===
base.cc:209:17: note: got vectype for stmt: _65 = REALPART_EXPR <MEM[(const struct complex &)_64]>;
vector(2) double
base.cc:209:17: note: got vectype for stmt: _66 = IMAGPART_EXPR <MEM[(const struct complex &)_64]>;
vector(2) double
base.cc:209:17: note: === vect_analyze_data_ref_accesses ===
base.cc:209:17: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_64]> and IMAGPART_EXPR <MEM[(const struct complex &)_64]>
base.cc:209:17: note: Detected interleaving of size 2
base.cc:209:17: note: === vect_pattern_recog ===
base.cc:209:17: note: vect_is_simple_use: operand i.6_46
base.cc:209:17: note: def_stmt: i.6_46 = (long unsigned int) i_12;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand i_12
base.cc:209:17: note: def_stmt: i_12 = PHI <i_17(8)>
base.cc:209:17: note: type of def: 2.
base.cc:209:17: note: vect_is_simple_use: operand _65
base.cc:209:17: note: def_stmt: _65 = REALPART_EXPR <MEM[(const struct complex &)_64]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: vect_is_simple_use: operand _66
base.cc:209:17: note: def_stmt: _66 = IMAGPART_EXPR <MEM[(const struct complex &)_64]>;
base.cc:209:17: note: type of def: 3.
base.cc:209:17: note: === vect_analyze_data_refs_alignment ===
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_64]>
base.cc:209:17: note: vect_compute_data_ref_alignment:
base.cc:209:17: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_64]>
base.cc:209:17: note: === vect_analyze_slp ===
base.cc:209:17: note: Failed to SLP the basic block.
base.cc:209:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:206:8: note: ===vect_slp_analyze_bb===
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
base.cc:206:8: note: ===vect_slp_analyze_bb===
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
base.cc:206:8: note: ===vect_slp_analyze_bb===
base.cc:206:8: note: === vect_analyze_data_refs ===
base.cc:206:8: note: not vectorized: not enough data-refs in basic block.
base.cc:211:10: note: ===vect_slp_analyze_bb===
base.cc:211:10: note: === vect_analyze_data_refs ===
base.cc:211:10: note: not vectorized: not enough data-refs in basic block.
base.cc:214:36: note: ===vect_slp_analyze_bb===
base.cc:214:36: note: === vect_analyze_data_refs ===
base.cc:214:36: note: not vectorized: not enough data-refs in basic block.
base.cc:217:10: note: ===vect_slp_analyze_bb===
base.cc:217:10: note: === vect_analyze_data_refs ===
base.cc:217:10: note: not vectorized: not enough data-refs in basic block.
base.cc:223:3: note: ===vect_slp_analyze_bb===
base.cc:223:3: note: === vect_analyze_data_refs ===
base.cc:223:3: note: not vectorized: not enough data-refs in basic block.
base.cc:224:1: note: ===vect_slp_analyze_bb===
base.cc:224:1: note: === vect_analyze_data_refs ===
base.cc:224:1: note: not vectorized: not enough data-refs in basic block.
base.cc:191:29: note: ===vect_slp_analyze_bb===
base.cc:191:29: note: === vect_analyze_data_refs ===
base.cc:191:29: note: got vectype for stmt: this_2(D)->n_ = 0;
vector(4) long int
base.cc:191:29: note: got vectype for stmt: this_2(D)->data_ = 0B;
vector(4) long unsigned int
base.cc:191:29: note: === vect_analyze_data_ref_accesses ===
base.cc:191:29: note: not consecutive access this_2(D)->n_ = 0;

base.cc:191:29: note: not consecutive access this_2(D)->data_ = 0B;

base.cc:191:29: note: === vect_pattern_recog ===
base.cc:191:29: note: === vect_analyze_data_refs_alignment ===
base.cc:191:29: note: === vect_analyze_slp ===
base.cc:191:29: note: Failed to SLP the basic block.
base.cc:191:29: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:191:29: note: ***** Re-trying analysis with vector size 16
base.cc:191:29: note: === vect_analyze_data_refs ===
base.cc:191:29: note: got vectype for stmt: this_2(D)->n_ = 0;
vector(2) long int
base.cc:191:29: note: got vectype for stmt: this_2(D)->data_ = 0B;
vector(2) long unsigned int
base.cc:191:29: note: === vect_analyze_data_ref_accesses ===
base.cc:191:29: note: not consecutive access this_2(D)->n_ = 0;

base.cc:191:29: note: not consecutive access this_2(D)->data_ = 0B;

base.cc:191:29: note: === vect_pattern_recog ===
base.cc:191:29: note: === vect_analyze_data_refs_alignment ===
base.cc:191:29: note: === vect_analyze_slp ===
base.cc:191:29: note: Failed to SLP the basic block.
base.cc:191:29: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at /usr/include/c++/5/bits/stl_algobase.h:338
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: === get_loop_niters ===
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: Symbolic number of iterations is (unsigned long) __n_11
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: not vectorized: no vectype for stmt: *__result_24 = *l_25;
 scalar_type: const struct complex
/usr/include/c++/5/bits/stl_algobase.h:338:4: note: bad data references.
base.cc:193:1: note: vectorized 0 loops in function.
base.cc:193:54: note: ===vect_slp_analyze_bb===
base.cc:193:54: note: === vect_analyze_data_refs ===
base.cc:193:54: note: got vectype for stmt: l_22 = MEM[(struct initializer_list *)&l];
vector(4) long unsigned int
base.cc:193:54: note: got vectype for stmt: l$8_23 = MEM[(struct initializer_list *)&l + 8B];
const vector(4) long unsigned int
base.cc:193:54: note: got vectype for stmt: this_2(D)->n_ = 0;
vector(4) long int
base.cc:193:54: note: got vectype for stmt: this_2(D)->data_ = 0B;
vector(4) long unsigned int
base.cc:193:54: note: === vect_analyze_data_ref_accesses ===
base.cc:193:54: note: not consecutive access l_22 = MEM[(struct initializer_list *)&l];

base.cc:193:54: note: not consecutive access l$8_23 = MEM[(struct initializer_list *)&l + 8B];

base.cc:193:54: note: not consecutive access this_2(D)->n_ = 0;

base.cc:193:54: note: not consecutive access this_2(D)->data_ = 0B;

base.cc:193:54: note: === vect_pattern_recog ===
base.cc:193:54: note: === vect_analyze_data_refs_alignment ===
base.cc:193:54: note: === vect_analyze_slp ===
base.cc:193:54: note: Failed to SLP the basic block.
base.cc:193:54: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:193:54: note: ***** Re-trying analysis with vector size 16
base.cc:193:54: note: === vect_analyze_data_refs ===
base.cc:193:54: note: got vectype for stmt: l_22 = MEM[(struct initializer_list *)&l];
vector(2) long unsigned int
base.cc:193:54: note: got vectype for stmt: l$8_23 = MEM[(struct initializer_list *)&l + 8B];
const vector(2) long unsigned int
base.cc:193:54: note: got vectype for stmt: this_2(D)->n_ = 0;
vector(2) long int
base.cc:193:54: note: got vectype for stmt: this_2(D)->data_ = 0B;
vector(2) long unsigned int
base.cc:193:54: note: === vect_analyze_data_ref_accesses ===
base.cc:193:54: note: not consecutive access l_22 = MEM[(struct initializer_list *)&l];

base.cc:193:54: note: not consecutive access l$8_23 = MEM[(struct initializer_list *)&l + 8B];

base.cc:193:54: note: not consecutive access this_2(D)->n_ = 0;

base.cc:193:54: note: not consecutive access this_2(D)->data_ = 0B;

base.cc:193:54: note: === vect_pattern_recog ===
base.cc:193:54: note: === vect_analyze_data_refs_alignment ===
base.cc:193:54: note: === vect_analyze_slp ===
base.cc:193:54: note: Failed to SLP the basic block.
base.cc:193:54: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:196:1: note: ===vect_slp_analyze_bb===
base.cc:196:1: note: === vect_analyze_data_refs ===
base.cc:196:1: note: not vectorized: not enough data-refs in basic block.
base.cc:193:1: note: ===vect_slp_analyze_bb===
base.cc:193:1: note: === vect_analyze_data_refs ===
base.cc:193:1: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_algobase.h:340:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_algobase.h:340:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_algobase.h:340:8: note: not vectorized: no vectype for stmt: *__result_24 = *l_25;
 scalar_type: const struct complex
/usr/include/c++/5/bits/stl_algobase.h:340:8: note: not vectorized: not enough data-refs in basic block.
base.cc:193:1: note: ===vect_slp_analyze_bb===
base.cc:193:1: note: === vect_analyze_data_refs ===
base.cc:193:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/stl_algobase.h:700
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: Symbolic number of iterations is (((unsigned long) _7 - (unsigned long) (__first_3 + 16)) /[ex] 16 & 1152921504606846975) + 1
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: not vectorized: no vectype for stmt: *__first_16 = x;
 scalar_type: struct Cplex
/usr/include/c++/5/bits/stl_algobase.h:700:7: note: bad data references.
base.cc:226:6: note: vectorized 0 loops in function.
base.cc:226:51: note: ===vect_slp_analyze_bb===
base.cc:226:51: note: === vect_analyze_data_refs ===
base.cc:226:51: note: got vectype for stmt: __first_3 = this_2(D)->data_;
vector(4) long unsigned int
base.cc:226:51: note: got vectype for stmt: _4 = this_2(D)->n_;
vector(4) long int
base.cc:226:51: note: === vect_analyze_data_ref_accesses ===
base.cc:226:51: note: not consecutive access _4 = this_2(D)->n_;

base.cc:226:51: note: not consecutive access __first_3 = this_2(D)->data_;

base.cc:226:51: note: === vect_pattern_recog ===
base.cc:226:51: note: vect_is_simple_use: operand _5
base.cc:226:51: note: def_stmt: _5 = (long unsigned int) _4;
base.cc:226:51: note: type of def: 3.
base.cc:226:51: note: vect_is_simple_use: operand _4
base.cc:226:51: note: def_stmt: _4 = this_2(D)->n_;
base.cc:226:51: note: type of def: 3.
base.cc:226:51: note: === vect_analyze_data_refs_alignment ===
base.cc:226:51: note: === vect_analyze_slp ===
base.cc:226:51: note: Failed to SLP the basic block.
base.cc:226:51: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:226:51: note: ***** Re-trying analysis with vector size 16
base.cc:226:51: note: === vect_analyze_data_refs ===
base.cc:226:51: note: got vectype for stmt: __first_3 = this_2(D)->data_;
vector(2) long unsigned int
base.cc:226:51: note: got vectype for stmt: _4 = this_2(D)->n_;
vector(2) long int
base.cc:226:51: note: === vect_analyze_data_ref_accesses ===
base.cc:226:51: note: not consecutive access _4 = this_2(D)->n_;

base.cc:226:51: note: not consecutive access __first_3 = this_2(D)->data_;

base.cc:226:51: note: === vect_pattern_recog ===
base.cc:226:51: note: vect_is_simple_use: operand _5
base.cc:226:51: note: def_stmt: _5 = (long unsigned int) _4;
base.cc:226:51: note: type of def: 3.
base.cc:226:51: note: vect_is_simple_use: operand _4
base.cc:226:51: note: def_stmt: _4 = this_2(D)->n_;
base.cc:226:51: note: type of def: 3.
base.cc:226:51: note: === vect_analyze_data_refs_alignment ===
base.cc:226:51: note: === vect_analyze_slp ===
base.cc:226:51: note: Failed to SLP the basic block.
base.cc:226:51: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:226:67: note: ===vect_slp_analyze_bb===
base.cc:226:67: note: === vect_analyze_data_refs ===
base.cc:226:67: note: not vectorized: not enough data-refs in basic block.
base.cc:226:6: note: ===vect_slp_analyze_bb===
base.cc:226:6: note: === vect_analyze_data_refs ===
base.cc:226:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_algobase.h:701:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_algobase.h:701:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_algobase.h:701:2: note: not vectorized: no vectype for stmt: *__first_16 = x;
 scalar_type: struct Cplex
/usr/include/c++/5/bits/stl_algobase.h:701:2: note: not vectorized: not enough data-refs in basic block.
base.cc:226:6: note: ===vect_slp_analyze_bb===
base.cc:226:6: note: === vect_analyze_data_refs ===
base.cc:226:6: note: not vectorized: not enough data-refs in basic block.
base.cc:228:66: note: ===vect_slp_analyze_bb===
base.cc:228:66: note: === vect_analyze_data_refs ===
base.cc:228:66: note: got vectype for stmt: _3 = this_2(D)->n_;
vector(4) long int
base.cc:228:66: note: got vectype for stmt: _6 = this_2(D)->data_;
vector(4) long unsigned int
base.cc:228:66: note: === vect_analyze_data_ref_accesses ===
base.cc:228:66: note: not consecutive access _3 = this_2(D)->n_;

base.cc:228:66: note: not consecutive access _6 = this_2(D)->data_;

base.cc:228:66: note: === vect_pattern_recog ===
base.cc:228:66: note: vect_is_simple_use: operand _4
base.cc:228:66: note: def_stmt: _4 = (long unsigned int) _3;
base.cc:228:66: note: type of def: 3.
base.cc:228:66: note: vect_is_simple_use: operand _3
base.cc:228:66: note: def_stmt: _3 = this_2(D)->n_;
base.cc:228:66: note: type of def: 3.
base.cc:228:66: note: === vect_analyze_data_refs_alignment ===
base.cc:228:66: note: === vect_analyze_slp ===
base.cc:228:66: note: Failed to SLP the basic block.
base.cc:228:66: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:228:66: note: ***** Re-trying analysis with vector size 16
base.cc:228:66: note: === vect_analyze_data_refs ===
base.cc:228:66: note: got vectype for stmt: _3 = this_2(D)->n_;
vector(2) long int
base.cc:228:66: note: got vectype for stmt: _6 = this_2(D)->data_;
vector(2) long unsigned int
base.cc:228:66: note: === vect_analyze_data_ref_accesses ===
base.cc:228:66: note: not consecutive access _3 = this_2(D)->n_;

base.cc:228:66: note: not consecutive access _6 = this_2(D)->data_;

base.cc:228:66: note: === vect_pattern_recog ===
base.cc:228:66: note: vect_is_simple_use: operand _4
base.cc:228:66: note: def_stmt: _4 = (long unsigned int) _3;
base.cc:228:66: note: type of def: 3.
base.cc:228:66: note: vect_is_simple_use: operand _3
base.cc:228:66: note: def_stmt: _3 = this_2(D)->n_;
base.cc:228:66: note: type of def: 3.
base.cc:228:66: note: === vect_analyze_data_refs_alignment ===
base.cc:228:66: note: === vect_analyze_slp ===
base.cc:228:66: note: Failed to SLP the basic block.
base.cc:228:66: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at base.cc:287
base.cc:287:21: note: ===== analyze_loop_nest =====
base.cc:287:21: note: === vect_analyze_loop_form ===
base.cc:287:21: note: === get_loop_niters ===
base.cc:287:21: note: Symbolic number of iterations is (unsigned long) rows_5(D)
base.cc:287:21: note: === vect_analyze_data_refs ===
base.cc:287:21: note: not vectorized: loop contains function calls or data references that cannot be analyzed
base.cc:287:21: note: bad data references.

Analyzing loop at /usr/include/c++/5/bits/stl_uninitialized.h:518
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: not vectorized: control flow in loop.
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: bad loop form.
base.cc:285:1: note: vectorized 0 loops in function.
base.cc:286:43: note: ===vect_slp_analyze_bb===
base.cc:286:43: note: === vect_analyze_data_refs ===
base.cc:286:43: note: got vectype for stmt: this_4(D)->rows_ = rows_5(D);
vector(4) long int
base.cc:286:43: note: got vectype for stmt: this_4(D)->cols_ = cols_7(D);
vector(4) long int
base.cc:286:43: note: got vectype for stmt: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start = 0B;
vector(4) long unsigned int
base.cc:286:43: note: got vectype for stmt: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_finish = 0B;
vector(4) long unsigned int
base.cc:286:43: note: got vectype for stmt: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_end_of_storage = 0B;
vector(4) long unsigned int
base.cc:286:43: note: === vect_analyze_data_ref_accesses ===
base.cc:286:43: note: Detected interleaving this_4(D)->rows_ and this_4(D)->cols_
base.cc:286:43: note: Detected interleaving MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start and MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_finish
base.cc:286:43: note: Detected interleaving MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start and MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_end_of_storage
base.cc:286:43: note: Detected interleaving of size 2
base.cc:286:43: note: Detected interleaving of size 3
base.cc:286:43: note: === vect_pattern_recog ===
base.cc:286:43: note: === vect_analyze_data_refs_alignment ===
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: this_4(D)->rows_
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: this_4(D)->cols_
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_finish
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_end_of_storage
base.cc:286:43: note: === vect_analyze_slp ===
base.cc:286:43: note: Build SLP failed: unrolling required in basic block SLP
base.cc:286:43: note: Build SLP failed: unrolling required in basic block SLP
base.cc:286:43: note: Failed to SLP the basic block.
base.cc:286:43: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:286:43: note: ***** Re-trying analysis with vector size 16
base.cc:286:43: note: === vect_analyze_data_refs ===
base.cc:286:43: note: got vectype for stmt: this_4(D)->rows_ = rows_5(D);
vector(2) long int
base.cc:286:43: note: got vectype for stmt: this_4(D)->cols_ = cols_7(D);
vector(2) long int
base.cc:286:43: note: got vectype for stmt: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start = 0B;
vector(2) long unsigned int
base.cc:286:43: note: got vectype for stmt: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_finish = 0B;
vector(2) long unsigned int
base.cc:286:43: note: got vectype for stmt: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_end_of_storage = 0B;
vector(2) long unsigned int
base.cc:286:43: note: === vect_analyze_data_ref_accesses ===
base.cc:286:43: note: Detected interleaving this_4(D)->rows_ and this_4(D)->cols_
base.cc:286:43: note: Detected interleaving MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start and MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_finish
base.cc:286:43: note: Detected interleaving MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start and MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_end_of_storage
base.cc:286:43: note: Detected interleaving of size 2
base.cc:286:43: note: Detected interleaving of size 3
base.cc:286:43: note: === vect_pattern_recog ===
base.cc:286:43: note: === vect_analyze_data_refs_alignment ===
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: this_4(D)->rows_
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: this_4(D)->cols_
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_start
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_finish
base.cc:286:43: note: vect_compute_data_ref_alignment:
base.cc:286:43: note: can't force alignment of ref: MEM[(struct _Vector_impl *)this_4(D) + 16B]._M_end_of_storage
base.cc:286:43: note: === vect_analyze_slp ===
base.cc:286:43: note: Build SLP for this_4(D)->rows_ = rows_5(D);

base.cc:286:43: note: Build SLP for this_4(D)->cols_ = cols_7(D);

base.cc:286:43: note: vect_is_simple_use: operand rows_5(D)
base.cc:286:43: note: def_stmt: GIMPLE_NOP
base.cc:286:43: note: vect_is_simple_use: operand cols_7(D)
base.cc:286:43: note: def_stmt: GIMPLE_NOP
base.cc:286:43: note: vect_model_store_cost: unaligned supported by hardware.
base.cc:286:43: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
base.cc:286:43: note: vect_is_simple_use: operand rows_5(D)
base.cc:286:43: note: def_stmt: GIMPLE_NOP
node 
	stmt 0 this_4(D)->rows_ = rows_5(D);

	stmt 1 this_4(D)->cols_ = cols_7(D);

base.cc:286:43: note: Build SLP failed: unrolling required in basic block SLP
base.cc:286:43: note: === vect_slp_analyze_data_ref_dependences ===
base.cc:286:43: note: Vectorizing an unaligned access.
base.cc:286:43: note: ==> examining statement: this_4(D)->rows_ = rows_5(D);
base.cc:286:43: note: get vectype for scalar type:  Int
base.cc:286:43: note: vectype:  vector(2) long int
base.cc:286:43: note: vect_is_simple_use: operand rows_5(D)
base.cc:286:43: note: def_stmt: GIMPLE_NOP
base.cc:286:43: note: vect_is_simple_use: operand cols_7(D)
base.cc:286:43: note: def_stmt: GIMPLE_NOP
base.cc:286:43: note: ==> examining statement: this_4(D)->cols_ = cols_7(D);
base.cc:286:43: note: get vectype for scalar type:  Int
base.cc:286:43: note: vectype:  vector(2) long int
base.cc:286:43: note: vect_is_simple_use: operand cols_7(D)
base.cc:286:43: note: def_stmt: GIMPLE_NOP
base.cc:286:43: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 2
base.cc:286:43: note: not vectorized: vectorization is not profitable.
/usr/include/c++/5/ext/new_allocator.h:101:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:101:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:101:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:102:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:102:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:102:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:104:41: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:104:41: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:104:41: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_construct.h:75:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_construct.h:75:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_construct.h:75:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_construct.h:75:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_construct.h:75:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_construct.h:75:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_uninitialized.h:518:8: note: not vectorized: not enough data-refs in basic block.
base.cc:285:1: note: ===vect_slp_analyze_bb===
base.cc:285:1: note: === vect_analyze_data_refs ===
base.cc:285:1: note: not vectorized: not enough data-refs in basic block.
base.cc:285:1: note: ===vect_slp_analyze_bb===
base.cc:285:1: note: === vect_analyze_data_refs ===
base.cc:285:1: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: got vectype for stmt: MEM[(struct CplexArray * *)this_4(D) + 24B] = __first_14;
vector(4) long unsigned int
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: got vectype for stmt: MEM[(struct CplexArray * *)this_4(D) + 24B] = __first_14;
vector(2) long unsigned int
/usr/include/c++/5/bits/stl_vector.h:1310:2: note: not vectorized: not enough data-refs in basic block.
base.cc:290:1: note: ===vect_slp_analyze_bb===
base.cc:290:1: note: === vect_analyze_data_refs ===
base.cc:290:1: note: not vectorized: not enough data-refs in basic block.
base.cc:285:1: note: ===vect_slp_analyze_bb===
base.cc:285:1: note: === vect_analyze_data_refs ===
base.cc:285:1: note: not vectorized: not enough data-refs in basic block.
base.cc:288:12: note: ===vect_slp_analyze_bb===
base.cc:288:12: note: === vect_analyze_data_refs ===
base.cc:288:12: note: got vectype for stmt: _18 = MEM[(struct CplexArray * *)this_4(D) + 16B];
vector(4) long unsigned int
base.cc:288:12: note: not vectorized: not enough data-refs in basic block.
base.cc:288:12: note: ***** Re-trying analysis with vector size 16
base.cc:288:12: note: === vect_analyze_data_refs ===
base.cc:288:12: note: got vectype for stmt: _18 = MEM[(struct CplexArray * *)this_4(D) + 16B];
vector(2) long unsigned int
base.cc:288:12: note: not vectorized: not enough data-refs in basic block.
base.cc:285:1: note: ===vect_slp_analyze_bb===
base.cc:285:1: note: === vect_analyze_data_refs ===
base.cc:285:1: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_vector.h:187:59: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/stl_vector.h:187:59: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_vector.h:187:59: note: got vectype for stmt: MEM[(struct _Vector_base *)this_4(D) + 16B]._M_impl._M_end_of_storage = _58;
vector(4) long unsigned int
/usr/include/c++/5/bits/stl_vector.h:187:59: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/stl_vector.h:187:59: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/stl_vector.h:187:59: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/stl_vector.h:187:59: note: got vectype for stmt: MEM[(struct _Vector_base *)this_4(D) + 16B]._M_impl._M_end_of_storage = _58;
vector(2) long unsigned int
/usr/include/c++/5/bits/stl_vector.h:187:59: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:293
base.cc:293:21: note: ===== analyze_loop_nest =====
base.cc:293:21: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:293:21: note: === get_loop_niters ===
base.cc:293:21: note: not vectorized: number of iterations cannot be computed.
base.cc:293:21: note: bad loop form.
base.cc:292:6: note: vectorized 0 loops in function.
base.cc:293:23: note: ===vect_slp_analyze_bb===
base.cc:293:23: note: === vect_analyze_data_refs ===
base.cc:293:23: note: got vectype for stmt: _14 = this_4(D)->rows_;
vector(4) long int
base.cc:293:23: note: not vectorized: not enough data-refs in basic block.
base.cc:293:23: note: ***** Re-trying analysis with vector size 16
base.cc:293:23: note: === vect_analyze_data_refs ===
base.cc:293:23: note: got vectype for stmt: _14 = this_4(D)->rows_;
vector(2) long int
base.cc:293:23: note: not vectorized: not enough data-refs in basic block.
base.cc:296:1: note: ===vect_slp_analyze_bb===
base.cc:296:1: note: === vect_analyze_data_refs ===
base.cc:296:1: note: not vectorized: not enough data-refs in basic block.
base.cc:292:6: note: ===vect_slp_analyze_bb===
base.cc:292:6: note: === vect_analyze_data_refs ===
base.cc:292:6: note: not vectorized: not enough data-refs in basic block.
base.cc:294:12: note: ===vect_slp_analyze_bb===
base.cc:294:12: note: === vect_analyze_data_refs ===
base.cc:294:12: note: got vectype for stmt: _9 = MEM[(struct CplexArray * *)this_4(D) + 16B];
vector(4) long unsigned int
base.cc:294:12: note: not vectorized: not enough data-refs in basic block.
base.cc:294:12: note: ***** Re-trying analysis with vector size 16
base.cc:294:12: note: === vect_analyze_data_refs ===
base.cc:294:12: note: got vectype for stmt: _9 = MEM[(struct CplexArray * *)this_4(D) + 16B];
vector(2) long unsigned int
base.cc:294:12: note: not vectorized: not enough data-refs in basic block.
base.cc:292:6: note: ===vect_slp_analyze_bb===
base.cc:292:6: note: === vect_analyze_data_refs ===
base.cc:292:6: note: not vectorized: not enough data-refs in basic block.
base.cc:298:33: note: ===vect_slp_analyze_bb===
base.cc:298:33: note: === vect_analyze_data_refs ===
base.cc:298:33: note: got vectype for stmt: this_4(D)->n_ = n_5(D);
vector(4) long int
base.cc:298:33: note: got vectype for stmt: this_4(D)->data_ = 0B;
vector(4) long unsigned int
base.cc:298:33: note: === vect_analyze_data_ref_accesses ===
base.cc:298:33: note: not consecutive access this_4(D)->n_ = n_5(D);

base.cc:298:33: note: not consecutive access this_4(D)->data_ = 0B;

base.cc:298:33: note: === vect_pattern_recog ===
base.cc:298:33: note: vect_is_simple_use: operand n.40_8
base.cc:298:33: note: def_stmt: n.40_8 = (long unsigned int) n_5(D);
base.cc:298:33: note: type of def: 3.
base.cc:298:33: note: vect_is_simple_use: operand n_5(D)
base.cc:298:33: note: def_stmt: GIMPLE_NOP
base.cc:298:33: note: vect_is_simple_use: operand _10
base.cc:298:33: note: def_stmt: _10 = m_9 + 63;
base.cc:298:33: note: type of def: 3.
base.cc:298:33: note: vect_is_simple_use: operand _11
base.cc:298:33: note: def_stmt: _11 = _10 >> 6;
base.cc:298:33: note: type of def: 3.
base.cc:298:33: note: === vect_analyze_data_refs_alignment ===
base.cc:298:33: note: === vect_analyze_slp ===
base.cc:298:33: note: Failed to SLP the basic block.
base.cc:298:33: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:298:33: note: ***** Re-trying analysis with vector size 16
base.cc:298:33: note: === vect_analyze_data_refs ===
base.cc:298:33: note: got vectype for stmt: this_4(D)->n_ = n_5(D);
vector(2) long int
base.cc:298:33: note: got vectype for stmt: this_4(D)->data_ = 0B;
vector(2) long unsigned int
base.cc:298:33: note: === vect_analyze_data_ref_accesses ===
base.cc:298:33: note: not consecutive access this_4(D)->n_ = n_5(D);

base.cc:298:33: note: not consecutive access this_4(D)->data_ = 0B;

base.cc:298:33: note: === vect_pattern_recog ===
base.cc:298:33: note: vect_is_simple_use: operand n.40_8
base.cc:298:33: note: def_stmt: n.40_8 = (long unsigned int) n_5(D);
base.cc:298:33: note: type of def: 3.
base.cc:298:33: note: vect_is_simple_use: operand n_5(D)
base.cc:298:33: note: def_stmt: GIMPLE_NOP
base.cc:298:33: note: vect_is_simple_use: operand _10
base.cc:298:33: note: def_stmt: _10 = m_9 + 63;
base.cc:298:33: note: type of def: 3.
base.cc:298:33: note: vect_is_simple_use: operand _11
base.cc:298:33: note: def_stmt: _11 = _10 >> 6;
base.cc:298:33: note: type of def: 3.
base.cc:298:33: note: === vect_analyze_data_refs_alignment ===
base.cc:298:33: note: === vect_analyze_slp ===
base.cc:298:33: note: Failed to SLP the basic block.
base.cc:298:33: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:302:3: note: ===vect_slp_analyze_bb===
base.cc:302:3: note: === vect_analyze_data_refs ===
base.cc:302:3: note: not vectorized: not enough data-refs in basic block.
base.cc:303:1: note: ===vect_slp_analyze_bb===
base.cc:303:1: note: === vect_analyze_data_refs ===
base.cc:303:1: note: not vectorized: not enough data-refs in basic block.
base.cc:305:32: note: ===vect_slp_analyze_bb===
base.cc:305:32: note: === vect_analyze_data_refs ===
base.cc:305:32: note: got vectype for stmt: _3 = this_2(D)->data_;
vector(4) long unsigned int
base.cc:305:32: note: not vectorized: not enough data-refs in basic block.
base.cc:305:32: note: ***** Re-trying analysis with vector size 16
base.cc:305:32: note: === vect_analyze_data_refs ===
base.cc:305:32: note: got vectype for stmt: _3 = this_2(D)->data_;
vector(2) long unsigned int
base.cc:305:32: note: not vectorized: not enough data-refs in basic block.
base.cc:307:39: note: ===vect_slp_analyze_bb===
base.cc:307:39: note: === vect_analyze_data_refs ===
base.cc:307:39: note: got vectype for stmt: this_4(D)->n_ = n_5(D);
vector(4) long int
base.cc:307:39: note: got vectype for stmt: this_4(D)->data_ = 0B;
vector(4) long unsigned int
base.cc:307:39: note: === vect_analyze_data_ref_accesses ===
base.cc:307:39: note: not consecutive access this_4(D)->n_ = n_5(D);

base.cc:307:39: note: not consecutive access this_4(D)->data_ = 0B;

base.cc:307:39: note: === vect_pattern_recog ===
base.cc:307:39: note: vect_is_simple_use: operand n.43_8
base.cc:307:39: note: def_stmt: n.43_8 = (long unsigned int) n_5(D);
base.cc:307:39: note: type of def: 3.
base.cc:307:39: note: vect_is_simple_use: operand n_5(D)
base.cc:307:39: note: def_stmt: GIMPLE_NOP
base.cc:307:39: note: vect_is_simple_use: operand _10
base.cc:307:39: note: def_stmt: _10 = m_9 + 63;
base.cc:307:39: note: type of def: 3.
base.cc:307:39: note: vect_is_simple_use: operand _11
base.cc:307:39: note: def_stmt: _11 = _10 >> 6;
base.cc:307:39: note: type of def: 3.
base.cc:307:39: note: === vect_analyze_data_refs_alignment ===
base.cc:307:39: note: === vect_analyze_slp ===
base.cc:307:39: note: Failed to SLP the basic block.
base.cc:307:39: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:307:39: note: ***** Re-trying analysis with vector size 16
base.cc:307:39: note: === vect_analyze_data_refs ===
base.cc:307:39: note: got vectype for stmt: this_4(D)->n_ = n_5(D);
vector(2) long int
base.cc:307:39: note: got vectype for stmt: this_4(D)->data_ = 0B;
vector(2) long unsigned int
base.cc:307:39: note: === vect_analyze_data_ref_accesses ===
base.cc:307:39: note: not consecutive access this_4(D)->n_ = n_5(D);

base.cc:307:39: note: not consecutive access this_4(D)->data_ = 0B;

base.cc:307:39: note: === vect_pattern_recog ===
base.cc:307:39: note: vect_is_simple_use: operand n.43_8
base.cc:307:39: note: def_stmt: n.43_8 = (long unsigned int) n_5(D);
base.cc:307:39: note: type of def: 3.
base.cc:307:39: note: vect_is_simple_use: operand n_5(D)
base.cc:307:39: note: def_stmt: GIMPLE_NOP
base.cc:307:39: note: vect_is_simple_use: operand _10
base.cc:307:39: note: def_stmt: _10 = m_9 + 63;
base.cc:307:39: note: type of def: 3.
base.cc:307:39: note: vect_is_simple_use: operand _11
base.cc:307:39: note: def_stmt: _11 = _10 >> 6;
base.cc:307:39: note: type of def: 3.
base.cc:307:39: note: === vect_analyze_data_refs_alignment ===
base.cc:307:39: note: === vect_analyze_slp ===
base.cc:307:39: note: Failed to SLP the basic block.
base.cc:307:39: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:311:3: note: ===vect_slp_analyze_bb===
base.cc:311:3: note: === vect_analyze_data_refs ===
base.cc:311:3: note: not vectorized: not enough data-refs in basic block.
base.cc:312:1: note: ===vect_slp_analyze_bb===
base.cc:312:1: note: === vect_analyze_data_refs ===
base.cc:312:1: note: not vectorized: not enough data-refs in basic block.
base.cc:314:38: note: ===vect_slp_analyze_bb===
base.cc:314:38: note: === vect_analyze_data_refs ===
base.cc:314:38: note: got vectype for stmt: _3 = this_2(D)->data_;
vector(4) long unsigned int
base.cc:314:38: note: not vectorized: not enough data-refs in basic block.
base.cc:314:38: note: ***** Re-trying analysis with vector size 16
base.cc:314:38: note: === vect_analyze_data_refs ===
base.cc:314:38: note: got vectype for stmt: _3 = this_2(D)->data_;
vector(2) long unsigned int
base.cc:314:38: note: not vectorized: not enough data-refs in basic block.
base.cc:317:48: note: ===vect_slp_analyze_bb===
base.cc:317:48: note: === vect_analyze_data_refs ===
base.cc:317:48: note: got vectype for stmt: this_2(D)->n_ = n_3(D);
vector(4) long int
base.cc:317:48: note: got vectype for stmt: this_2(D)->sign_ = sign_5(D);
vector(32) char
base.cc:317:48: note: === vect_analyze_data_ref_accesses ===
base.cc:317:48: note: not consecutive access this_2(D)->n_ = n_3(D);

base.cc:317:48: note: not consecutive access this_2(D)->sign_ = sign_5(D);

base.cc:317:48: note: === vect_pattern_recog ===
base.cc:317:48: note: === vect_analyze_data_refs_alignment ===
base.cc:317:48: note: === vect_analyze_slp ===
base.cc:317:48: note: Failed to SLP the basic block.
base.cc:317:48: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:317:48: note: ***** Re-trying analysis with vector size 16
base.cc:317:48: note: === vect_analyze_data_refs ===
base.cc:317:48: note: got vectype for stmt: this_2(D)->n_ = n_3(D);
vector(2) long int
base.cc:317:48: note: got vectype for stmt: this_2(D)->sign_ = sign_5(D);
vector(16) char
base.cc:317:48: note: === vect_analyze_data_ref_accesses ===
base.cc:317:48: note: not consecutive access this_2(D)->n_ = n_3(D);

base.cc:317:48: note: not consecutive access this_2(D)->sign_ = sign_5(D);

base.cc:317:48: note: === vect_pattern_recog ===
base.cc:317:48: note: === vect_analyze_data_refs_alignment ===
base.cc:317:48: note: === vect_analyze_slp ===
base.cc:317:48: note: Failed to SLP the basic block.
base.cc:317:48: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:323:40: note: ===vect_slp_analyze_bb===
base.cc:323:40: note: === vect_analyze_data_refs ===
base.cc:323:40: note: got vectype for stmt: _3 = this_2(D)->plan_;
vector(4) long unsigned int
base.cc:323:40: note: not vectorized: not enough data-refs in basic block.
base.cc:323:40: note: ***** Re-trying analysis with vector size 16
base.cc:323:40: note: === vect_analyze_data_refs ===
base.cc:323:40: note: got vectype for stmt: _3 = this_2(D)->plan_;
vector(2) long unsigned int
base.cc:323:40: note: not vectorized: not enough data-refs in basic block.
base.cc:326:19: note: ===vect_slp_analyze_bb===
base.cc:326:19: note: === vect_analyze_data_refs ===
base.cc:326:19: note: got vectype for stmt: _7 = MEM[(struct Cplex * *)v_2(D) + 8B];
vector(4) long unsigned int
base.cc:326:19: note: got vectype for stmt: _8 = MEM[(struct Cplex * *)u_3(D) + 8B];
vector(4) long unsigned int
base.cc:326:19: note: got vectype for stmt: _5 = this_4(D)->plan_;
vector(4) long unsigned int
base.cc:326:19: note: === vect_analyze_data_ref_accesses ===
base.cc:326:19: note: not consecutive access _8 = MEM[(struct Cplex * *)u_3(D) + 8B];

base.cc:326:19: note: not consecutive access _7 = MEM[(struct Cplex * *)v_2(D) + 8B];

base.cc:326:19: note: not consecutive access _5 = this_4(D)->plan_;

base.cc:326:19: note: === vect_pattern_recog ===
base.cc:326:19: note: === vect_analyze_data_refs_alignment ===
base.cc:326:19: note: === vect_analyze_slp ===
base.cc:326:19: note: Failed to SLP the basic block.
base.cc:326:19: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:326:19: note: ***** Re-trying analysis with vector size 16
base.cc:326:19: note: === vect_analyze_data_refs ===
base.cc:326:19: note: got vectype for stmt: _7 = MEM[(struct Cplex * *)v_2(D) + 8B];
vector(2) long unsigned int
base.cc:326:19: note: got vectype for stmt: _8 = MEM[(struct Cplex * *)u_3(D) + 8B];
vector(2) long unsigned int
base.cc:326:19: note: got vectype for stmt: _5 = this_4(D)->plan_;
vector(2) long unsigned int
base.cc:326:19: note: === vect_analyze_data_ref_accesses ===
base.cc:326:19: note: not consecutive access _8 = MEM[(struct Cplex * *)u_3(D) + 8B];

base.cc:326:19: note: not consecutive access _7 = MEM[(struct Cplex * *)v_2(D) + 8B];

base.cc:326:19: note: not consecutive access _5 = this_4(D)->plan_;

base.cc:326:19: note: === vect_pattern_recog ===
base.cc:326:19: note: === vect_analyze_data_refs_alignment ===
base.cc:326:19: note: === vect_analyze_slp ===
base.cc:326:19: note: Failed to SLP the basic block.
base.cc:326:19: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at base.cc:38
base.cc:38:12: note: ===== analyze_loop_nest =====
base.cc:38:12: note: === vect_analyze_loop_form ===
base.cc:38:12: note: not vectorized: control flow in loop.
base.cc:38:12: note: bad loop form.
base.cc:337:1: note: vectorized 0 loops in function.
base.cc:338:14: note: ===vect_slp_analyze_bb===
base.cc:338:14: note: === vect_analyze_data_refs ===
base.cc:338:14: note: got vectype for stmt: this_2(D)->a = a_3(D);
vector(4) long int
base.cc:338:14: note: got vectype for stmt: this_2(D)->b = b_5(D);
vector(4) long int
base.cc:338:14: note: got vectype for stmt: this_2(D)->c = c_7(D);
vector(4) long int
base.cc:338:14: note: === vect_analyze_data_ref_accesses ===
base.cc:338:14: note: Detected interleaving this_2(D)->a and this_2(D)->b
base.cc:338:14: note: Detected interleaving this_2(D)->a and this_2(D)->c
base.cc:338:14: note: Detected interleaving of size 3
base.cc:338:14: note: === vect_pattern_recog ===
base.cc:338:14: note: === vect_analyze_data_refs_alignment ===
base.cc:338:14: note: vect_compute_data_ref_alignment:
base.cc:338:14: note: can't force alignment of ref: this_2(D)->a
base.cc:338:14: note: vect_compute_data_ref_alignment:
base.cc:338:14: note: can't force alignment of ref: this_2(D)->b
base.cc:338:14: note: vect_compute_data_ref_alignment:
base.cc:338:14: note: can't force alignment of ref: this_2(D)->c
base.cc:338:14: note: === vect_analyze_slp ===
base.cc:338:14: note: Build SLP failed: unrolling required in basic block SLP
base.cc:338:14: note: Failed to SLP the basic block.
base.cc:338:14: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:338:14: note: ***** Re-trying analysis with vector size 16
base.cc:338:14: note: === vect_analyze_data_refs ===
base.cc:338:14: note: got vectype for stmt: this_2(D)->a = a_3(D);
vector(2) long int
base.cc:338:14: note: got vectype for stmt: this_2(D)->b = b_5(D);
vector(2) long int
base.cc:338:14: note: got vectype for stmt: this_2(D)->c = c_7(D);
vector(2) long int
base.cc:338:14: note: === vect_analyze_data_ref_accesses ===
base.cc:338:14: note: Detected interleaving this_2(D)->a and this_2(D)->b
base.cc:338:14: note: Detected interleaving this_2(D)->a and this_2(D)->c
base.cc:338:14: note: Detected interleaving of size 3
base.cc:338:14: note: === vect_pattern_recog ===
base.cc:338:14: note: === vect_analyze_data_refs_alignment ===
base.cc:338:14: note: vect_compute_data_ref_alignment:
base.cc:338:14: note: can't force alignment of ref: this_2(D)->a
base.cc:338:14: note: vect_compute_data_ref_alignment:
base.cc:338:14: note: can't force alignment of ref: this_2(D)->b
base.cc:338:14: note: vect_compute_data_ref_alignment:
base.cc:338:14: note: can't force alignment of ref: this_2(D)->c
base.cc:338:14: note: === vect_analyze_slp ===
base.cc:338:14: note: Build SLP failed: unrolling required in basic block SLP
base.cc:338:14: note: Failed to SLP the basic block.
base.cc:338:14: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:337:1: note: ===vect_slp_analyze_bb===
base.cc:337:1: note: === vect_analyze_data_refs ===
base.cc:337:1: note: not vectorized: not enough data-refs in basic block.
base.cc:39:11: note: ===vect_slp_analyze_bb===
base.cc:39:11: note: === vect_analyze_data_refs ===
base.cc:39:11: note: not vectorized: not enough data-refs in basic block.
base.cc:40:14: note: ===vect_slp_analyze_bb===
base.cc:40:14: note: === vect_analyze_data_refs ===
base.cc:40:14: note: not vectorized: not enough data-refs in basic block.
base.cc:42:12: note: ===vect_slp_analyze_bb===
base.cc:42:12: note: === vect_analyze_data_refs ===
base.cc:42:12: note: not vectorized: not enough data-refs in basic block.
base.cc:337:1: note: ===vect_slp_analyze_bb===
base.cc:337:1: note: === vect_analyze_data_refs ===
base.cc:337:1: note: not vectorized: not enough data-refs in basic block.
base.cc:337:1: note: ===vect_slp_analyze_bb===
base.cc:337:1: note: === vect_analyze_data_refs ===
base.cc:337:1: note: not vectorized: not enough data-refs in basic block.
base.cc:341:29: note: ===vect_slp_analyze_bb===
base.cc:341:29: note: === vect_analyze_data_refs ===
base.cc:341:29: note: got vectype for stmt: this_2(D)->a_inv = r_28;
vector(4) long int
base.cc:341:29: note: not vectorized: not enough data-refs in basic block.
base.cc:341:29: note: ***** Re-trying analysis with vector size 16
base.cc:341:29: note: === vect_analyze_data_refs ===
base.cc:341:29: note: got vectype for stmt: this_2(D)->a_inv = r_28;
vector(2) long int
base.cc:341:29: note: not vectorized: not enough data-refs in basic block.
/usr/include/glog/logging.h:669:44: note: ===vect_slp_analyze_bb===
/usr/include/glog/logging.h:669:44: note: === vect_analyze_data_refs ===
/usr/include/glog/logging.h:669:44: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:249
base.cc:249:3: note: ===== analyze_loop_nest =====
base.cc:249:3: note: === vect_analyze_loop_form ===
base.cc:249:3: note: ===== analyze_loop_nest_1 =====
base.cc:249:3: note: === vect_analyze_loop_form ===
base.cc:249:3: note: === get_loop_niters ===
base.cc:249:3: note: Symbolic number of iterations is (unsigned long) n_6(D)
base.cc:249:3: note: not vectorized: control flow in loop.
base.cc:249:3: note: bad loop form.

Analyzing loop at base.cc:252
base.cc:252:34: note: ===== analyze_loop_nest =====
base.cc:252:34: note: === vect_analyze_loop_form ===
base.cc:252:34: note: === get_loop_niters ===
base.cc:252:34: note: Symbolic number of iterations is (unsigned long) n_6(D)
base.cc:252:34: note: === vect_analyze_data_refs ===
base.cc:252:34: note: got vectype for stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
const vector(4) long int
base.cc:252:34: note: got vectype for stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
vector(4) double
base.cc:252:34: note: got vectype for stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
vector(4) double
base.cc:252:34: note: got vectype for stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
vector(4) double
base.cc:252:34: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;
vector(4) double
base.cc:252:34: note: got vectype for stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
vector(4) double
base.cc:252:34: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;
vector(4) double
base.cc:252:34: note: === vect_analyze_scalar_cycles ===
base.cc:252:34: note: Analyze phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: Access function of PHI: {0, +, 1}_2
base.cc:252:34: note: step: 1,  init: 0
base.cc:252:34: note: Detected induction.
base.cc:252:34: note: Analyze phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: === vect_pattern_recog ===
base.cc:252:34: note: vect_is_simple_use: operand _23
base.cc:252:34: note: def_stmt: _23 = (double) _22;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand reciptmp_74
base.cc:252:34: note: def_stmt: reciptmp_74 = 1.0e+0 / pretmp_78;
base.cc:252:34: note: type of def: 2.
base.cc:252:34: note: vect_is_simple_use: operand __t$real_33
base.cc:252:34: note: def_stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand __t$imag_31
base.cc:252:34: note: def_stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand t.23_35
base.cc:252:34: note: def_stmt: t.23_35 = (long unsigned int) t_66;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand t_66
base.cc:252:34: note: def_stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: type of def: 4.
base.cc:252:34: note: === vect_analyze_data_ref_accesses ===
base.cc:252:34: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]> and IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>
base.cc:252:34: note: Detected interleaving of size 2
base.cc:252:34: note: Detected interleaving of size 2
base.cc:252:34: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:252:34: note: init: phi relevant? t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: init: phi relevant? .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>
base.cc:252:34: note: init: stmt relevant? _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: init: stmt relevant? _23 = (double) _22;
base.cc:252:34: note: init: stmt relevant? _24 = (double) t_66;
base.cc:252:34: note: init: stmt relevant? _25 = _23 * _24;
base.cc:252:34: note: init: stmt relevant? _26 = (long int) _25;
base.cc:252:34: note: init: stmt relevant? _34 = _26 % n_6(D);
base.cc:252:34: note: init: stmt relevant? _27 = (double) _34;
base.cc:252:34: note: init: stmt relevant? freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: init: stmt relevant? __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: init: stmt relevant? __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: init: stmt relevant? _1 = __t$real_33 * __r$_M_value$real_41;
base.cc:252:34: note: init: stmt relevant? _4 = __r$_M_value$imag_3 * __t$imag_31;
base.cc:252:34: note: init: stmt relevant? _2 = __t$imag_31 * __r$_M_value$real_41;
base.cc:252:34: note: init: stmt relevant? _47 = __r$_M_value$imag_3 * __t$real_33;
base.cc:252:34: note: init: stmt relevant? _40 = _1 - _4;
base.cc:252:34: note: init: stmt relevant? _19 = _2 + _47;
base.cc:252:34: note: init: stmt relevant? t.23_35 = (long unsigned int) t_66;
base.cc:252:34: note: init: stmt relevant? _36 = t.23_35 * 16;
base.cc:252:34: note: init: stmt relevant? _37 = data_21 + _36;
base.cc:252:34: note: init: stmt relevant? _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: init: stmt relevant? _52 = _40 + _51;
base.cc:252:34: note: init: stmt relevant? REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: init: stmt relevant? _55 = _19 + _54;
base.cc:252:34: note: init: stmt relevant? IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? t_39 = t_66 + 1;
base.cc:252:34: note: init: stmt relevant? if (n_6(D) > t_39)
base.cc:252:34: note: worklist: examine stmt: IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;
base.cc:252:34: note: vect_is_simple_use: operand _55
base.cc:252:34: note: def_stmt: _55 = _19 + _54;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _55 = _19 + _54;
base.cc:252:34: note: vect_is_simple_use: operand _19
base.cc:252:34: note: def_stmt: _19 = _2 + _47;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _54
base.cc:252:34: note: def_stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: worklist: examine stmt: _19 = _2 + _47;
base.cc:252:34: note: vect_is_simple_use: operand _2
base.cc:252:34: note: def_stmt: _2 = __t$imag_31 * __r$_M_value$real_41;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _47
base.cc:252:34: note: def_stmt: _47 = __r$_M_value$imag_3 * __t$real_33;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _47 = __r$_M_value$imag_3 * __t$real_33;
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand __t$real_33
base.cc:252:34: note: def_stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: worklist: examine stmt: _2 = __t$imag_31 * __r$_M_value$real_41;
base.cc:252:34: note: vect_is_simple_use: operand __t$imag_31
base.cc:252:34: note: def_stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$real_41
base.cc:252:34: note: def_stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: worklist: examine stmt: REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;
base.cc:252:34: note: vect_is_simple_use: operand _52
base.cc:252:34: note: def_stmt: _52 = _40 + _51;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _52 = _40 + _51;
base.cc:252:34: note: vect_is_simple_use: operand _40
base.cc:252:34: note: def_stmt: _40 = _1 - _4;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _51
base.cc:252:34: note: def_stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: worklist: examine stmt: _40 = _1 - _4;
base.cc:252:34: note: vect_is_simple_use: operand _1
base.cc:252:34: note: def_stmt: _1 = __t$real_33 * __r$_M_value$real_41;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _4
base.cc:252:34: note: def_stmt: _4 = __r$_M_value$imag_3 * __t$imag_31;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _4 = __r$_M_value$imag_3 * __t$imag_31;
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: vect_is_simple_use: operand __t$imag_31
base.cc:252:34: note: def_stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: _1 = __t$real_33 * __r$_M_value$real_41;
base.cc:252:34: note: vect_is_simple_use: operand __t$real_33
base.cc:252:34: note: def_stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$real_41
base.cc:252:34: note: def_stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: vect_is_simple_use: operand freq_29
base.cc:252:34: note: def_stmt: freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: vect_is_simple_use: operand reciptmp_74
base.cc:252:34: note: def_stmt: reciptmp_74 = 1.0e+0 / pretmp_78;
base.cc:252:34: note: type of def: 2.
base.cc:252:34: note: def_stmt is out of loop.
base.cc:252:34: note: vect_is_simple_use: operand _27
base.cc:252:34: note: def_stmt: _27 = (double) _34;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _27 = (double) _34;
base.cc:252:34: note: vect_is_simple_use: operand _34
base.cc:252:34: note: def_stmt: _34 = _26 % n_6(D);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _34 = _26 % n_6(D);
base.cc:252:34: note: vect_is_simple_use: operand _26
base.cc:252:34: note: def_stmt: _26 = (long int) _25;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand n_6(D)
base.cc:252:34: note: def_stmt: GIMPLE_NOP
base.cc:252:34: note: worklist: examine stmt: _26 = (long int) _25;
base.cc:252:34: note: vect_is_simple_use: operand _25
base.cc:252:34: note: def_stmt: _25 = _23 * _24;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _25 = _23 * _24;
base.cc:252:34: note: vect_is_simple_use: operand _23
base.cc:252:34: note: def_stmt: _23 = (double) _22;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _24
base.cc:252:34: note: def_stmt: _24 = (double) t_66;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _24 = (double) t_66;
base.cc:252:34: note: vect_is_simple_use: operand t_66
base.cc:252:34: note: def_stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: type of def: 4.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: vect_is_simple_use: operand 0
base.cc:252:34: note: vect_is_simple_use: operand t_39
base.cc:252:34: note: def_stmt: t_39 = t_66 + 1;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: t_39 = t_66 + 1;
base.cc:252:34: note: vect_is_simple_use: operand t_66
base.cc:252:34: note: def_stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: type of def: 4.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: _23 = (double) _22;
base.cc:252:34: note: vect_is_simple_use: operand _22
base.cc:252:34: note: def_stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: worklist: examine stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: vect_is_simple_use: operand freq_29
base.cc:252:34: note: def_stmt: freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: === vect_analyze_data_ref_dependences ===
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: dependence distance == 0 between REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: dependence distance == 0 between IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: === vect_determine_vectorization_factor ===
base.cc:252:34: note: ==> examining phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: get vectype for scalar type:  Int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: ==> examining statement: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;

base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _23 = (double) _22;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _24 = (double) t_66;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _25 = _23 * _24;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _26 = (long int) _25;

base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _34 = _26 % n_6(D);

base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _27 = (double) _34;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: freq_29 = reciptmp_74 * _27;

base.cc:252:34: note: get vectype for scalar type:  const double
base.cc:252:34: note: vectype: const vector(4) double
base.cc:252:34: note: get vectype for scalar type:  const double
base.cc:252:34: note: vectype: const vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: __t$imag_31 = mps::SinTwoPi (freq_29);

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: __t$real_33 = mps::CosTwoPi (freq_29);

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _1 = __t$real_33 * __r$_M_value$real_41;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _4 = __r$_M_value$imag_3 * __t$imag_31;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _2 = __t$imag_31 * __r$_M_value$real_41;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _47 = __r$_M_value$imag_3 * __t$real_33;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _40 = _1 - _4;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _19 = _2 + _47;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: t.23_35 = (long unsigned int) t_66;

base.cc:252:34: note: skip.
base.cc:252:34: note: ==> examining statement: _36 = t.23_35 * 16;

base.cc:252:34: note: skip.
base.cc:252:34: note: ==> examining statement: _37 = data_21 + _36;

base.cc:252:34: note: skip.
base.cc:252:34: note: ==> examining statement: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _52 = _40 + _51;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: _55 = _19 + _54;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(4) double
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: t_39 = t_66 + 1;

base.cc:252:34: note: get vectype for scalar type:  Int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: get vectype for scalar type:  Int
base.cc:252:34: note: vectype: vector(4) long int
base.cc:252:34: note: nunits = 4
base.cc:252:34: note: ==> examining statement: if (n_6(D) > t_39)

base.cc:252:34: note: skip.
base.cc:252:34: note: vectorization factor = 4
base.cc:252:34: note: === vect_analyze_data_refs_alignment ===
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: accesses have the same alignment.
dependence distance modulo vf == 0 between REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: accesses have the same alignment.
dependence distance modulo vf == 0 between IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: can't force alignment of ref: MEM[(const struct pair &)SR.247_71 + 8].first
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 0 bytes of ref REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 0 bytes of ref REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 8 bytes of ref IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 8 bytes of ref IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: === vect_prune_runtime_alias_test_list ===
base.cc:252:34: note: === vect_enhance_data_refs_alignment ===
base.cc:252:34: note: vect_can_advance_ivs_p:
base.cc:252:34: note: Analyze phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: Analyze phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: virtual phi. skip.
base.cc:252:34: note: Vectorizing an unaligned access.
base.cc:252:34: note: Vectorizing an unaligned access.
base.cc:252:34: note: Vectorizing an unaligned access.
base.cc:252:34: note: === vect_analyze_slp ===
base.cc:252:34: note: Build SLP for REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;

base.cc:252:34: note: Build SLP for IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;

base.cc:252:34: note: vect_is_simple_use: operand _52
base.cc:252:34: note: def_stmt: _52 = _40 + _51;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _55
base.cc:252:34: note: def_stmt: _55 = _19 + _54;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: Build SLP for _52 = _40 + _51;

base.cc:252:34: note: Build SLP for _55 = _19 + _54;

base.cc:252:34: note: vect_is_simple_use: operand _40
base.cc:252:34: note: def_stmt: _40 = _1 - _4;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _51
base.cc:252:34: note: def_stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _19
base.cc:252:34: note: def_stmt: _19 = _2 + _47;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _54
base.cc:252:34: note: def_stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: Build SLP for _40 = _1 - _4;

base.cc:252:34: note: Build SLP for _19 = _2 + _47;

base.cc:252:34: note: Build SLP failed: different operation in stmt _19 = _2 + _47;

base.cc:252:34: note: Re-trying with swapped operands of stmts 1 
base.cc:252:34: note: Build SLP for _40 = _1 - _4;

base.cc:252:34: note: Build SLP for _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: Build SLP failed: different operation in stmt _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: === vect_make_slp_decision ===
base.cc:252:34: note: === vect_detect_hybrid_slp ===
base.cc:252:34: note: === vect_analyze_loop_operations ===
base.cc:252:34: note: examining phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: === vectorizable_induction ===
base.cc:252:34: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
base.cc:252:34: note: examining phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: ==> examining statement: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: vect_is_simple_use: operand MEM[(const struct pair &)SR.247_71 + 8].first
base.cc:252:34: note: not ssa-name.
base.cc:252:34: note: use not simple.
base.cc:252:34: note: vect_is_simple_use: operand MEM[(const struct pair &)SR.247_71 + 8].first
base.cc:252:34: note: not ssa-name.
base.cc:252:34: note: use not simple.
base.cc:252:34: note: vect_model_load_cost: unaligned supported by hardware.
base.cc:252:34: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
base.cc:252:34: note: ==> examining statement: _23 = (double) _22;
base.cc:252:34: note: vect_is_simple_use: operand _22
base.cc:252:34: note: def_stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: conversion not supported by target.
base.cc:252:34: note: vect_is_simple_use: operand _22
base.cc:252:34: note: def_stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: no optab.
base.cc:252:34: note: not vectorized: relevant stmt not supported: _23 = (double) _22;
base.cc:252:34: note: bad operation or unsupported loop bound.
base.cc:252:34: note: ***** Re-trying analysis with vector size 16
base.cc:252:34: note: === vect_analyze_loop_form ===
base.cc:252:34: note: === get_loop_niters ===
base.cc:252:34: note: Symbolic number of iterations is (unsigned long) n_6(D)
base.cc:252:34: note: === vect_analyze_data_refs ===
base.cc:252:34: note: got vectype for stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
const vector(2) long int
base.cc:252:34: note: got vectype for stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
vector(2) double
base.cc:252:34: note: got vectype for stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
vector(2) double
base.cc:252:34: note: got vectype for stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
vector(2) double
base.cc:252:34: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;
vector(2) double
base.cc:252:34: note: got vectype for stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
vector(2) double
base.cc:252:34: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;
vector(2) double
base.cc:252:34: note: === vect_analyze_scalar_cycles ===
base.cc:252:34: note: Analyze phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: Access function of PHI: {0, +, 1}_2
base.cc:252:34: note: step: 1,  init: 0
base.cc:252:34: note: Detected induction.
base.cc:252:34: note: Analyze phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: === vect_pattern_recog ===
base.cc:252:34: note: vect_is_simple_use: operand _23
base.cc:252:34: note: def_stmt: _23 = (double) _22;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand reciptmp_74
base.cc:252:34: note: def_stmt: reciptmp_74 = 1.0e+0 / pretmp_78;
base.cc:252:34: note: type of def: 2.
base.cc:252:34: note: vect_is_simple_use: operand __t$real_33
base.cc:252:34: note: def_stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand __t$imag_31
base.cc:252:34: note: def_stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand t.23_35
base.cc:252:34: note: def_stmt: t.23_35 = (long unsigned int) t_66;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand t_66
base.cc:252:34: note: def_stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: type of def: 4.
base.cc:252:34: note: === vect_analyze_data_ref_accesses ===
base.cc:252:34: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]> and IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>
base.cc:252:34: note: Detected interleaving of size 2
base.cc:252:34: note: Detected interleaving of size 2
base.cc:252:34: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:252:34: note: init: phi relevant? t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: init: phi relevant? .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>
base.cc:252:34: note: init: stmt relevant? _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: init: stmt relevant? _23 = (double) _22;
base.cc:252:34: note: init: stmt relevant? _24 = (double) t_66;
base.cc:252:34: note: init: stmt relevant? _25 = _23 * _24;
base.cc:252:34: note: init: stmt relevant? _26 = (long int) _25;
base.cc:252:34: note: init: stmt relevant? _34 = _26 % n_6(D);
base.cc:252:34: note: init: stmt relevant? _27 = (double) _34;
base.cc:252:34: note: init: stmt relevant? freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: init: stmt relevant? __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: init: stmt relevant? __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: init: stmt relevant? _1 = __t$real_33 * __r$_M_value$real_41;
base.cc:252:34: note: init: stmt relevant? _4 = __r$_M_value$imag_3 * __t$imag_31;
base.cc:252:34: note: init: stmt relevant? _2 = __t$imag_31 * __r$_M_value$real_41;
base.cc:252:34: note: init: stmt relevant? _47 = __r$_M_value$imag_3 * __t$real_33;
base.cc:252:34: note: init: stmt relevant? _40 = _1 - _4;
base.cc:252:34: note: init: stmt relevant? _19 = _2 + _47;
base.cc:252:34: note: init: stmt relevant? t.23_35 = (long unsigned int) t_66;
base.cc:252:34: note: init: stmt relevant? _36 = t.23_35 * 16;
base.cc:252:34: note: init: stmt relevant? _37 = data_21 + _36;
base.cc:252:34: note: init: stmt relevant? _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: init: stmt relevant? _52 = _40 + _51;
base.cc:252:34: note: init: stmt relevant? REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: init: stmt relevant? _55 = _19 + _54;
base.cc:252:34: note: init: stmt relevant? IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;
base.cc:252:34: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: init: stmt relevant? t_39 = t_66 + 1;
base.cc:252:34: note: init: stmt relevant? if (n_6(D) > t_39)
base.cc:252:34: note: worklist: examine stmt: IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;
base.cc:252:34: note: vect_is_simple_use: operand _55
base.cc:252:34: note: def_stmt: _55 = _19 + _54;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _55 = _19 + _54;
base.cc:252:34: note: vect_is_simple_use: operand _19
base.cc:252:34: note: def_stmt: _19 = _2 + _47;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _54
base.cc:252:34: note: def_stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: worklist: examine stmt: _19 = _2 + _47;
base.cc:252:34: note: vect_is_simple_use: operand _2
base.cc:252:34: note: def_stmt: _2 = __t$imag_31 * __r$_M_value$real_41;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _47
base.cc:252:34: note: def_stmt: _47 = __r$_M_value$imag_3 * __t$real_33;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _47 = __r$_M_value$imag_3 * __t$real_33;
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand __t$real_33
base.cc:252:34: note: def_stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: worklist: examine stmt: _2 = __t$imag_31 * __r$_M_value$real_41;
base.cc:252:34: note: vect_is_simple_use: operand __t$imag_31
base.cc:252:34: note: def_stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$real_41
base.cc:252:34: note: def_stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: worklist: examine stmt: REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;
base.cc:252:34: note: vect_is_simple_use: operand _52
base.cc:252:34: note: def_stmt: _52 = _40 + _51;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _52 = _40 + _51;
base.cc:252:34: note: vect_is_simple_use: operand _40
base.cc:252:34: note: def_stmt: _40 = _1 - _4;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _51
base.cc:252:34: note: def_stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: worklist: examine stmt: _40 = _1 - _4;
base.cc:252:34: note: vect_is_simple_use: operand _1
base.cc:252:34: note: def_stmt: _1 = __t$real_33 * __r$_M_value$real_41;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _4
base.cc:252:34: note: def_stmt: _4 = __r$_M_value$imag_3 * __t$imag_31;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _4 = __r$_M_value$imag_3 * __t$imag_31;
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$imag_3
base.cc:252:34: note: def_stmt: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: vect_is_simple_use: operand __t$imag_31
base.cc:252:34: note: def_stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: _1 = __t$real_33 * __r$_M_value$real_41;
base.cc:252:34: note: vect_is_simple_use: operand __t$real_33
base.cc:252:34: note: def_stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: vect_is_simple_use: operand __r$_M_value$real_41
base.cc:252:34: note: def_stmt: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: __t$real_33 = mps::CosTwoPi (freq_29);
base.cc:252:34: note: vect_is_simple_use: operand freq_29
base.cc:252:34: note: def_stmt: freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: vect_is_simple_use: operand reciptmp_74
base.cc:252:34: note: def_stmt: reciptmp_74 = 1.0e+0 / pretmp_78;
base.cc:252:34: note: type of def: 2.
base.cc:252:34: note: def_stmt is out of loop.
base.cc:252:34: note: vect_is_simple_use: operand _27
base.cc:252:34: note: def_stmt: _27 = (double) _34;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _27 = (double) _34;
base.cc:252:34: note: vect_is_simple_use: operand _34
base.cc:252:34: note: def_stmt: _34 = _26 % n_6(D);
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _34 = _26 % n_6(D);
base.cc:252:34: note: vect_is_simple_use: operand _26
base.cc:252:34: note: def_stmt: _26 = (long int) _25;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand n_6(D)
base.cc:252:34: note: def_stmt: GIMPLE_NOP
base.cc:252:34: note: worklist: examine stmt: _26 = (long int) _25;
base.cc:252:34: note: vect_is_simple_use: operand _25
base.cc:252:34: note: def_stmt: _25 = _23 * _24;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _25 = _23 * _24;
base.cc:252:34: note: vect_is_simple_use: operand _23
base.cc:252:34: note: def_stmt: _23 = (double) _22;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: vect_is_simple_use: operand _24
base.cc:252:34: note: def_stmt: _24 = (double) t_66;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _24 = (double) t_66;
base.cc:252:34: note: vect_is_simple_use: operand t_66
base.cc:252:34: note: def_stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: type of def: 4.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: vect_is_simple_use: operand 0
base.cc:252:34: note: vect_is_simple_use: operand t_39
base.cc:252:34: note: def_stmt: t_39 = t_66 + 1;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: t_39 = t_66 + 1;
base.cc:252:34: note: vect_is_simple_use: operand t_66
base.cc:252:34: note: def_stmt: t_66 = PHI <0(11), t_39(14)>
base.cc:252:34: note: type of def: 4.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: worklist: examine stmt: _23 = (double) _22;
base.cc:252:34: note: vect_is_simple_use: operand _22
base.cc:252:34: note: def_stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: worklist: examine stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: worklist: examine stmt: __t$imag_31 = mps::SinTwoPi (freq_29);
base.cc:252:34: note: vect_is_simple_use: operand freq_29
base.cc:252:34: note: def_stmt: freq_29 = reciptmp_74 * _27;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: mark relevant 4, live 0.
base.cc:252:34: note: already marked relevant/live.
base.cc:252:34: note: === vect_analyze_data_ref_dependences ===
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: dependence distance == 0 between REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: dependence distance == 0 between IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: === vect_determine_vectorization_factor ===
base.cc:252:34: note: ==> examining phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: get vectype for scalar type:  Int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: ==> examining statement: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;

base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _23 = (double) _22;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _24 = (double) t_66;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _25 = _23 * _24;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _26 = (long int) _25;

base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _34 = _26 % n_6(D);

base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: get vectype for scalar type:  long int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _27 = (double) _34;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: freq_29 = reciptmp_74 * _27;

base.cc:252:34: note: get vectype for scalar type:  const double
base.cc:252:34: note: vectype: const vector(2) double
base.cc:252:34: note: get vectype for scalar type:  const double
base.cc:252:34: note: vectype: const vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: __t$imag_31 = mps::SinTwoPi (freq_29);

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: __t$real_33 = mps::CosTwoPi (freq_29);

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: __r$_M_value$real_41 = REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: __r$_M_value$imag_3 = IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _1 = __t$real_33 * __r$_M_value$real_41;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _4 = __r$_M_value$imag_3 * __t$imag_31;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _2 = __t$imag_31 * __r$_M_value$real_41;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _47 = __r$_M_value$imag_3 * __t$real_33;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _40 = _1 - _4;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _19 = _2 + _47;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: t.23_35 = (long unsigned int) t_66;

base.cc:252:34: note: skip.
base.cc:252:34: note: ==> examining statement: _36 = t.23_35 * 16;

base.cc:252:34: note: skip.
base.cc:252:34: note: ==> examining statement: _37 = data_21 + _36;

base.cc:252:34: note: skip.
base.cc:252:34: note: ==> examining statement: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _52 = _40 + _51;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: _55 = _19 + _54;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;

base.cc:252:34: note: get vectype for scalar type:  double
base.cc:252:34: note: vectype: vector(2) double
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: t_39 = t_66 + 1;

base.cc:252:34: note: get vectype for scalar type:  Int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: get vectype for scalar type:  Int
base.cc:252:34: note: vectype: vector(2) long int
base.cc:252:34: note: nunits = 2
base.cc:252:34: note: ==> examining statement: if (n_6(D) > t_39)

base.cc:252:34: note: skip.
base.cc:252:34: note: vectorization factor = 2
base.cc:252:34: note: === vect_analyze_data_refs_alignment ===
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: accesses have the same alignment.
dependence distance modulo vf == 0 between REALPART_EXPR <MEM[(struct complex *)_37]._M_value> and REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: dependence distance  = 0.
base.cc:252:34: note: accesses have the same alignment.
dependence distance modulo vf == 0 between IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: can't force alignment of ref: MEM[(const struct pair &)SR.247_71 + 8].first
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)SR.247_71 + 16]>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 0 bytes of ref REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 0 bytes of ref REALPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 8 bytes of ref IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: vect_compute_data_ref_alignment:
base.cc:252:34: note: misalign = 8 bytes of ref IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>
base.cc:252:34: note: === vect_prune_runtime_alias_test_list ===
base.cc:252:34: note: === vect_enhance_data_refs_alignment ===
base.cc:252:34: note: vect_can_advance_ivs_p:
base.cc:252:34: note: Analyze phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: Analyze phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: virtual phi. skip.
base.cc:252:34: note: Vectorizing an unaligned access.
base.cc:252:34: note: Vectorizing an unaligned access.
base.cc:252:34: note: Vectorizing an unaligned access.
base.cc:252:34: note: === vect_analyze_slp ===
base.cc:252:34: note: Build SLP for REALPART_EXPR <MEM[(struct complex *)_37]._M_value> = _52;

base.cc:252:34: note: Build SLP for IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value> = _55;

base.cc:252:34: note: vect_is_simple_use: operand _52
base.cc:252:34: note: def_stmt: _52 = _40 + _51;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _55
base.cc:252:34: note: def_stmt: _55 = _19 + _54;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: Build SLP for _52 = _40 + _51;

base.cc:252:34: note: Build SLP for _55 = _19 + _54;

base.cc:252:34: note: vect_is_simple_use: operand _40
base.cc:252:34: note: def_stmt: _40 = _1 - _4;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _51
base.cc:252:34: note: def_stmt: _51 = REALPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _19
base.cc:252:34: note: def_stmt: _19 = _2 + _47;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: vect_is_simple_use: operand _54
base.cc:252:34: note: def_stmt: _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: Build SLP for _40 = _1 - _4;

base.cc:252:34: note: Build SLP for _19 = _2 + _47;

base.cc:252:34: note: Build SLP failed: different operation in stmt _19 = _2 + _47;

base.cc:252:34: note: Re-trying with swapped operands of stmts 1 
base.cc:252:34: note: Build SLP for _40 = _1 - _4;

base.cc:252:34: note: Build SLP for _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: Build SLP failed: different operation in stmt _54 = IMAGPART_EXPR <MEM[(struct complex *)_37]._M_value>;

base.cc:252:34: note: === vect_make_slp_decision ===
base.cc:252:34: note: === vect_detect_hybrid_slp ===
base.cc:252:34: note: === vect_analyze_loop_operations ===
base.cc:252:34: note: examining phi: t_66 = PHI <0(11), t_39(14)>

base.cc:252:34: note: === vectorizable_induction ===
base.cc:252:34: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
base.cc:252:34: note: examining phi: .MEM_69 = PHI <.MEM_67(11), .MEM_63(14)>

base.cc:252:34: note: ==> examining statement: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: vect_is_simple_use: operand MEM[(const struct pair &)SR.247_71 + 8].first
base.cc:252:34: note: not ssa-name.
base.cc:252:34: note: use not simple.
base.cc:252:34: note: vect_is_simple_use: operand MEM[(const struct pair &)SR.247_71 + 8].first
base.cc:252:34: note: not ssa-name.
base.cc:252:34: note: use not simple.
base.cc:252:34: note: vect_model_load_cost: unaligned supported by hardware.
base.cc:252:34: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
base.cc:252:34: note: ==> examining statement: _23 = (double) _22;
base.cc:252:34: note: vect_is_simple_use: operand _22
base.cc:252:34: note: def_stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: conversion not supported by target.
base.cc:252:34: note: vect_is_simple_use: operand _22
base.cc:252:34: note: def_stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
base.cc:252:34: note: type of def: 3.
base.cc:252:34: note: no optab.
base.cc:252:34: note: not vectorized: relevant stmt not supported: _23 = (double) _22;
base.cc:252:34: note: bad operation or unsupported loop bound.
base.cc:244:6: note: vectorized 0 loops in function.
base.cc:245:3: note: ===vect_slp_analyze_bb===
base.cc:245:3: note: === vect_analyze_data_refs ===
base.cc:245:3: note: got vectype for stmt: D.107081 = n_6(D);
const vector(4) long int
base.cc:245:3: note: got vectype for stmt: _45 = MEM[(long int *)out_9(D)];
const vector(4) long int
base.cc:245:3: note: got vectype for stmt: D.107080 = _45;
const vector(4) long int
base.cc:245:3: note: === vect_analyze_data_ref_accesses ===
base.cc:245:3: note: not consecutive access D.107080 = _45;

base.cc:245:3: note: not consecutive access D.107081 = n_6(D);

base.cc:245:3: note: not consecutive access _45 = MEM[(long int *)out_9(D)];

base.cc:245:3: note: === vect_pattern_recog ===
base.cc:245:3: note: === vect_analyze_data_refs_alignment ===
base.cc:245:3: note: === vect_analyze_slp ===
base.cc:245:3: note: Failed to SLP the basic block.
base.cc:245:3: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:245:3: note: ***** Re-trying analysis with vector size 16
base.cc:245:3: note: === vect_analyze_data_refs ===
base.cc:245:3: note: got vectype for stmt: D.107081 = n_6(D);
const vector(2) long int
base.cc:245:3: note: got vectype for stmt: _45 = MEM[(long int *)out_9(D)];
const vector(2) long int
base.cc:245:3: note: got vectype for stmt: D.107080 = _45;
const vector(2) long int
base.cc:245:3: note: === vect_analyze_data_ref_accesses ===
base.cc:245:3: note: not consecutive access D.107080 = _45;

base.cc:245:3: note: not consecutive access D.107081 = n_6(D);

base.cc:245:3: note: not consecutive access _45 = MEM[(long int *)out_9(D)];

base.cc:245:3: note: === vect_pattern_recog ===
base.cc:245:3: note: === vect_analyze_data_refs_alignment ===
base.cc:245:3: note: === vect_analyze_slp ===
base.cc:245:3: note: Failed to SLP the basic block.
base.cc:245:3: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/glog/logging.h:694:1: note: ===vect_slp_analyze_bb===
/usr/include/glog/logging.h:694:1: note: === vect_analyze_data_refs ===
/usr/include/glog/logging.h:694:1: note: not vectorized: not enough data-refs in basic block.
base.cc:245:3: note: ===vect_slp_analyze_bb===
base.cc:245:3: note: === vect_analyze_data_refs ===
base.cc:245:3: note: not vectorized: not enough data-refs in basic block.
base.cc:244:6: note: ===vect_slp_analyze_bb===
base.cc:244:6: note: === vect_analyze_data_refs ===
base.cc:244:6: note: not vectorized: not enough data-refs in basic block.
base.cc:256:1: note: ===vect_slp_analyze_bb===
base.cc:256:1: note: === vect_analyze_data_refs ===
base.cc:256:1: note: not vectorized: not enough data-refs in basic block.
base.cc:244:6: note: ===vect_slp_analyze_bb===
base.cc:244:6: note: === vect_analyze_data_refs ===
base.cc:244:6: note: not vectorized: not enough data-refs in basic block.
base.cc:250:9: note: ===vect_slp_analyze_bb===
base.cc:250:9: note: === vect_analyze_data_refs ===
base.cc:250:9: note: not vectorized: not enough data-refs in basic block.
base.cc:249:3: note: ===vect_slp_analyze_bb===
base.cc:249:3: note: === vect_analyze_data_refs ===
base.cc:249:3: note: got vectype for stmt: SR.247_58 = MEM[(struct _Hash_node_base * *)SR.247_71];
vector(4) long unsigned int
base.cc:249:3: note: not vectorized: not enough data-refs in basic block.
base.cc:249:3: note: ***** Re-trying analysis with vector size 16
base.cc:249:3: note: === vect_analyze_data_refs ===
base.cc:249:3: note: got vectype for stmt: SR.247_58 = MEM[(struct _Hash_node_base * *)SR.247_71];
vector(2) long unsigned int
base.cc:249:3: note: not vectorized: not enough data-refs in basic block.
base.cc:244:6: note: ===vect_slp_analyze_bb===
base.cc:244:6: note: === vect_analyze_data_refs ===
base.cc:244:6: note: not vectorized: not enough data-refs in basic block.
base.cc:244:6: note: ===vect_slp_analyze_bb===
base.cc:244:6: note: === vect_analyze_data_refs ===
base.cc:244:6: note: not vectorized: not enough data-refs in basic block.
base.cc:252:34: note: ===vect_slp_analyze_bb===
base.cc:252:34: note: === vect_analyze_data_refs ===
base.cc:252:34: note: got vectype for stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
const vector(4) long int
base.cc:252:34: note: not vectorized: not enough data-refs in basic block.
base.cc:252:34: note: ***** Re-trying analysis with vector size 16
base.cc:252:34: note: === vect_analyze_data_refs ===
base.cc:252:34: note: got vectype for stmt: _22 = MEM[(const struct pair &)SR.247_71 + 8].first;
const vector(2) long int
base.cc:252:34: note: not vectorized: not enough data-refs in basic block.
base.cc:244:6: note: ===vect_slp_analyze_bb===
base.cc:244:6: note: === vect_analyze_data_refs ===
base.cc:244:6: note: not vectorized: not enough data-refs in basic block.
base.cc:245:3: note: ===vect_slp_analyze_bb===
base.cc:245:3: note: === vect_analyze_data_refs ===
base.cc:245:3: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/random.tcc:412
/usr/include/c++/5/bits/random.tcc:412:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: _36 = this_3(D)->_M_x[__k_75];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: _39 = this_3(D)->_M_x[__k_38];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: _43 = this_3(D)->_M_x[_42];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: this_3(D)->_M_x[__k_75] = _48;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Access function of PHI: {227, +, 1}_1
/usr/include/c++/5/bits/random.tcc:412:7: note: step: 1,  init: 227
/usr/include/c++/5/bits/random.tcc:412:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Access function of PHI: {396, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:412:7: note: step: 18446744073709551615,  init: 396
/usr/include/c++/5/bits/random.tcc:412:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:412:7: note: init: phi relevant? __k_75 = PHI <227(7), __k_38(9)>
/usr/include/c++/5/bits/random.tcc:412:7: note: init: phi relevant? .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>
/usr/include/c++/5/bits/random.tcc:412:7: note: init: phi relevant? ivtmp_125 = PHI <396(7), ivtmp_117(9)>
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? __k_38 = __k_75 + 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _42 = __k_75 + 18446744073709551389;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? this_3(D)->_M_x[__k_75] = _48;
/usr/include/c++/5/bits/random.tcc:412:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? ivtmp_117 = ivtmp_125 - 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? if (ivtmp_117 == 0)
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: this_3(D)->_M_x[__k_75] = _48;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _48
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _45
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand iftmp.2_47
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _37
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _43
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _44
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance == 0 between this_3(D)->_M_x[__k_75] and this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance negative.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 227.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance >= VF.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_determine_vectorization_factor ===
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _36 = this_3(D)->_M_x[__k_75];

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _37 = _36 & 18446744071562067968;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __k_38 = __k_75 + 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _39 = this_3(D)->_M_x[__k_38];

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _40 = _39 & 2147483647;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __y_41 = _37 | _40;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _42 = __k_75 + 18446744073709551389;

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _43 = this_3(D)->_M_x[_42];

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _44 = __y_41 >> 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _45 = _43 ^ _44;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _46 = __y_41 & 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _48 = _45 ^ iftmp.2_47;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: this_3(D)->_M_x[__k_75] = _48;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: ivtmp_117 = ivtmp_125 - 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: if (ivtmp_117 == 0)

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: vectorization factor = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 227.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: accesses have the same alignment.
dependence distance modulo vf == 0 between this_3(D)->_M_x[__k_75] and this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 228.
/usr/include/c++/5/bits/random.tcc:412:7: note: accesses have the same alignment.
dependence distance modulo vf == 0 between this_3(D)->_M_x[__k_38] and this_3(D)->_M_x[_42]
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 227.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_38]
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[_42]
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_prune_runtime_alias_test_list ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_enhance_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_can_advance_ivs_p:
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Alignment of access forced using peeling.
/usr/include/c++/5/bits/random.tcc:412:7: note: Peeling for alignment will be applied.
/usr/include/c++/5/bits/random.tcc:412:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:412:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_make_slp_decision ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_detect_hybrid_slp ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_loop_operations ===
/usr/include/c++/5/bits/random.tcc:412:7: note: examining phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: examining phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: examining phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: aligned.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __k_38 = __k_75 + 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_38]
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _37
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _42 = __k_75 + 18446744073709551389;
/usr/include/c++/5/bits/random.tcc:412:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand this_3(D)->_M_x[_42]
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: op not supported by target.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: not vectorized: relevant stmt not supported: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: bad operation or unsupported loop bound.
/usr/include/c++/5/bits/random.tcc:412:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: _36 = this_3(D)->_M_x[__k_75];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: _39 = this_3(D)->_M_x[__k_38];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: _43 = this_3(D)->_M_x[_42];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: got vectype for stmt: this_3(D)->_M_x[__k_75] = _48;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Access function of PHI: {227, +, 1}_1
/usr/include/c++/5/bits/random.tcc:412:7: note: step: 1,  init: 227
/usr/include/c++/5/bits/random.tcc:412:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Access function of PHI: {396, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:412:7: note: step: 18446744073709551615,  init: 396
/usr/include/c++/5/bits/random.tcc:412:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:412:7: note: init: phi relevant? __k_75 = PHI <227(7), __k_38(9)>
/usr/include/c++/5/bits/random.tcc:412:7: note: init: phi relevant? .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>
/usr/include/c++/5/bits/random.tcc:412:7: note: init: phi relevant? ivtmp_125 = PHI <396(7), ivtmp_117(9)>
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? __k_38 = __k_75 + 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _42 = __k_75 + 18446744073709551389;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? this_3(D)->_M_x[__k_75] = _48;
/usr/include/c++/5/bits/random.tcc:412:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? ivtmp_117 = ivtmp_125 - 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: init: stmt relevant? if (ivtmp_117 == 0)
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: this_3(D)->_M_x[__k_75] = _48;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _48
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _45
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand iftmp.2_47
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _37
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _43
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _44
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:412:7: note: worklist: examine stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance == 0 between this_3(D)->_M_x[__k_75] and this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance negative.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 227.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance >= VF.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_determine_vectorization_factor ===
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _36 = this_3(D)->_M_x[__k_75];

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _37 = _36 & 18446744071562067968;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __k_38 = __k_75 + 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _39 = this_3(D)->_M_x[__k_38];

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _40 = _39 & 2147483647;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __y_41 = _37 | _40;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _42 = __k_75 + 18446744073709551389;

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _43 = this_3(D)->_M_x[_42];

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _44 = __y_41 >> 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _45 = _43 ^ _44;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _46 = __y_41 & 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _48 = _45 ^ iftmp.2_47;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: this_3(D)->_M_x[__k_75] = _48;

/usr/include/c++/5/bits/random.tcc:412:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:412:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: ivtmp_117 = ivtmp_125 - 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: if (ivtmp_117 == 0)

/usr/include/c++/5/bits/random.tcc:412:7: note: skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: vectorization factor = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 227.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: accesses have the same alignment.
dependence distance modulo vf == 0 between this_3(D)->_M_x[__k_75] and this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 228.
/usr/include/c++/5/bits/random.tcc:412:7: note: accesses have the same alignment.
dependence distance modulo vf == 0 between this_3(D)->_M_x[__k_38] and this_3(D)->_M_x[_42]
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:412:7: note: dependence distance  = 227.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_38]
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[_42]
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:412:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_prune_runtime_alias_test_list ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_enhance_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_can_advance_ivs_p:
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:412:7: note: Alignment of access forced using peeling.
/usr/include/c++/5/bits/random.tcc:412:7: note: Peeling for alignment will be applied.
/usr/include/c++/5/bits/random.tcc:412:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:412:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_make_slp_decision ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_detect_hybrid_slp ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_analyze_loop_operations ===
/usr/include/c++/5/bits/random.tcc:412:7: note: examining phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: examining phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: examining phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_75]
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: aligned.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __k_38 = __k_75 + 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_38]
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _37
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _42 = __k_75 + 18446744073709551389;
/usr/include/c++/5/bits/random.tcc:412:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand this_3(D)->_M_x[_42]
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: vector/scalar shift/rotate found.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_shift ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _43
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _44
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46 != 0
/usr/include/c++/5/bits/random.tcc:412:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:412:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _45
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand iftmp.2_47
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: this_3(D)->_M_x[__k_75] = _48;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _48
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_store_cost: aligned.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: ivtmp_117 = ivtmp_125 - 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:412:7: note: ==> examining statement: if (ivtmp_117 == 0)
/usr/include/c++/5/bits/random.tcc:412:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:412:7: note: vectorization_factor = 2, niters = 396
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_update_slp_costs_according_to_vf ===
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
/usr/include/c++/5/bits/random.tcc:412:7: note: Cost model analysis: 
  Vector inside of loop cost: 13
  Vector prologue cost: 20
  Vector epilogue cost: 16
  Scalar iteration cost: 12
  Scalar outside cost: 0
  Vector outside cost: 36
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 5
/usr/include/c++/5/bits/random.tcc:412:7: note:   Runtime profitability threshold = 4
/usr/include/c++/5/bits/random.tcc:412:7: note:   Static estimate profitability threshold = 4
/usr/include/c++/5/bits/random.tcc:412:7: note: epilog loop required
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_can_advance_ivs_p:
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: __k_75 = PHI <227(7), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: .MEM_76 = PHI <.MEM_62(7), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: Analyze phi: ivtmp_125 = PHI <396(7), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: loop vectorized
/usr/include/c++/5/bits/random.tcc:412:7: note: === vec_transform_loop ===
/usr/include/c++/5/bits/random.tcc:412:7: note: loop peeled for vectorization to enhance alignment
/usr/include/c++/5/bits/random.tcc:412:7: note: created vectp_this.596_115
/usr/include/c++/5/bits/random.tcc:412:7: note: niters for prolog loop: (long unsigned int) -(((unsigned long) vectp_this.596_115 & 15) >> 3) & 1

loop at /usr/include/c++/5/bits/random.tcc:414: if (ivtmp_81 >= prolog_loop_niters.597_114)

Setting upper bound of nb iterations for prologue loop to 0
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_update_inits_of_dr ===
/usr/include/c++/5/bits/random.tcc:412:7: note: === vect_do_peeling_for_loop_bound ===
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_update_ivs_after_vectorizer: phi: __k_75 = PHI <__k_90(26), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: vect_update_ivs_after_vectorizer: phi: .MEM_76 = PHI <.MEM_88(26), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_update_ivs_after_vectorizer: phi: ivtmp_125 = PHI <ivtmp_87(26), ivtmp_117(9)>

Setting upper bound of nb iterations for epilogue loop to 0
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing phi: __k_75 = PHI <__k_90(30), __k_38(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing phi: .MEM_76 = PHI <.MEM_88(30), .MEM_63(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing phi: ivtmp_125 = PHI <ivtmp_87(30), ivtmp_117(9)>

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _36 = this_3(D)->_M_x[__k_75];

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform load. ncopies = 1
/usr/include/c++/5/bits/random.tcc:412:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:412:7: note: created vectp_this.604_138
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__36.605_143 = MEM[(long unsigned int *)vectp_this.603_141];
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _37 = _36 & 18446744071562067968;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _36
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _36
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _36
  def_stmt =  _36 = this_3(D)->_M_x[__k_75];
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: 18446744071562067968
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:412:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: created new init_stmt: vect_cst_.607_144 = { 18446744071562067968, 18446744071562067968 };
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__37.606_145 = vect__36.605_143 & vect_cst_.607_144;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: __k_38 = __k_75 + 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _39 = this_3(D)->_M_x[__k_38];

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform load. ncopies = 1
/usr/include/c++/5/bits/random.tcc:412:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:412:7: note: created vectp_this.609_146
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__39.610_151 = MEM[(long unsigned int *)vectp_this.608_149];
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _40 = _39 & 2147483647;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _39
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _39
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _39
  def_stmt =  _39 = this_3(D)->_M_x[__k_38];
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: 2147483647
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:412:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: created new init_stmt: vect_cst_.612_152 = { 2147483647, 2147483647 };
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__40.611_153 = vect__39.610_151 & vect_cst_.612_152;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: __y_41 = _37 | _40;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _37
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _37
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _37
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _37
  def_stmt =  _37 = _36 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _40
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _40
  def_stmt =  _40 = _39 & 2147483647;
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect___y_41.613_154 = vect__37.606_145 | vect__40.611_153;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _42 = __k_75 + 18446744073709551389;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _43 = this_3(D)->_M_x[_42];

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform load. ncopies = 1
/usr/include/c++/5/bits/random.tcc:412:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:412:7: note: created vectp_this.615_155
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__43.616_159 = MEM[(long unsigned int *)vectp_this.614_157];
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _44 = __y_41 >> 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: vector/scalar shift/rotate found.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: operand 1 using scalar mode.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  __y_41
  def_stmt =  __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__44.617_160 = vect___y_41.613_154 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _45 = _43 ^ _44;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _43
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _44
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _43
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _43
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _43
  def_stmt =  _43 = this_3(D)->_M_x[_42];
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _44
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _44
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _44
  def_stmt =  _44 = __y_41 >> 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__45.618_161 = vect__43.616_159 ^ vect__44.617_160;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _46 = __y_41 & 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand __y_41
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  __y_41
  def_stmt =  __y_41 = _37 | _40;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: 1
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:412:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: created new init_stmt: vect_cst_.620_162 = { 1, 1 };
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__46.619_163 = vect___y_41.613_154 & vect_cst_.620_162;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _46
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _46
  def_stmt =  _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _46
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _46 = __y_41 & 1;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: 0
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: created new init_stmt: vect_cst_.622_164 = { 0, 0 };
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: 2567483615
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 2567483615
/usr/include/c++/5/bits/random.tcc:412:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: created new init_stmt: vect_cst_.623_165 = { 2567483615, 2567483615 };
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 2567483615
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: 0
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:412:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:412:7: note: created new init_stmt: vect_cst_.624_166 = { 0, 0 };
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect_iftmp.621_167 = VEC_COND_EXPR <vect__46.619_163 != vect_cst_.622_164, vect_cst_.623_165, vect_cst_.624_166>;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: _48 = _45 ^ iftmp.2_47;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _45
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand iftmp.2_47
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _45
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _45
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _45
  def_stmt =  _45 = _43 ^ _44;
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: iftmp.2_47
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand iftmp.2_47
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  iftmp.2_47
  def_stmt =  iftmp.2_47 = _46 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: vect__48.625_168 = vect__45.618_161 ^ vect_iftmp.621_167;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: this_3(D)->_M_x[__k_75] = _48;

/usr/include/c++/5/bits/random.tcc:412:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _48
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: transform store. ncopies = 1
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_get_vec_def_for_operand: _48
/usr/include/c++/5/bits/random.tcc:412:7: note: vect_is_simple_use: operand _48
/usr/include/c++/5/bits/random.tcc:412:7: note: def_stmt: _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:412:7: note: def =  _48
  def_stmt =  _48 = _45 ^ iftmp.2_47;
/usr/include/c++/5/bits/random.tcc:412:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:412:7: note: created vectp_this.627_169
/usr/include/c++/5/bits/random.tcc:412:7: note: add new stmt: MEM[(long unsigned int *)vectp_this.626_172] = vect__48.625_168;
/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: ivtmp_117 = ivtmp_125 - 1;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: vectp_this.603_142 = vectp_this.603_141 + 16;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: vectp_this.608_150 = vectp_this.608_149 + 16;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: vectp_this.614_158 = vectp_this.614_157 + 16;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: vectp_this.626_173 = vectp_this.626_172 + 16;

/usr/include/c++/5/bits/random.tcc:412:7: note: ------>vectorizing statement: if (ivtmp_117 == 0)


loop at /usr/include/c++/5/bits/random.tcc:414: if (ivtmp_175 >= bnd.599_79)

/usr/include/c++/5/bits/random.tcc:412:7: note: LOOP VECTORIZED


Analyzing loop at /usr/include/c++/5/bits/random.tcc:404
/usr/include/c++/5/bits/random.tcc:404:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: _22 = this_3(D)->_M_x[__k_69];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: _25 = this_3(D)->_M_x[__k_24];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: _29 = this_3(D)->_M_x[_28];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: this_3(D)->_M_x[__k_69] = _34;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Access function of PHI: {0, +, 1}_2
/usr/include/c++/5/bits/random.tcc:404:7: note: step: 1,  init: 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Access function of PHI: {227, +, 18446744073709551615}_2
/usr/include/c++/5/bits/random.tcc:404:7: note: step: 18446744073709551615,  init: 227
/usr/include/c++/5/bits/random.tcc:404:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:404:7: note: init: phi relevant? .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>
/usr/include/c++/5/bits/random.tcc:404:7: note: init: phi relevant? __k_69 = PHI <0(4), __k_24(6)>
/usr/include/c++/5/bits/random.tcc:404:7: note: init: phi relevant? ivtmp_116 = PHI <227(4), ivtmp_128(6)>
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? __k_24 = __k_69 + 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _28 = __k_69 + 397;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? this_3(D)->_M_x[__k_69] = _34;
/usr/include/c++/5/bits/random.tcc:404:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? ivtmp_128 = ivtmp_116 - 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? if (ivtmp_128 == 0)
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: this_3(D)->_M_x[__k_69] = _34;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _34
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _31
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand iftmp.1_33
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _23
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _26
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _29
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _30
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance == 0 between this_3(D)->_M_x[__k_69] and this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance negative.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_determine_vectorization_factor ===
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _22 = this_3(D)->_M_x[__k_69];

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _23 = _22 & 18446744071562067968;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __k_24 = __k_69 + 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _25 = this_3(D)->_M_x[__k_24];

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _26 = _25 & 2147483647;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __y_27 = _23 | _26;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _28 = __k_69 + 397;

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _29 = this_3(D)->_M_x[_28];

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _30 = __y_27 >> 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _31 = _29 ^ _30;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _32 = __y_27 & 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _34 = _31 ^ iftmp.1_33;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: this_3(D)->_M_x[__k_69] = _34;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: ivtmp_128 = ivtmp_116 - 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: if (ivtmp_128 == 0)

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: vectorization factor = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: accesses have the same alignment.
dependence distance modulo vf == 0 between this_3(D)->_M_x[__k_69] and this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_24]
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[_28]
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_prune_runtime_alias_test_list ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_enhance_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_can_advance_ivs_p:
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Alignment of access forced using peeling.
/usr/include/c++/5/bits/random.tcc:404:7: note: Peeling for alignment will be applied.
/usr/include/c++/5/bits/random.tcc:404:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:404:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_make_slp_decision ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_detect_hybrid_slp ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_loop_operations ===
/usr/include/c++/5/bits/random.tcc:404:7: note: examining phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: examining phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: examining phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: aligned.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __k_24 = __k_69 + 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_24]
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _23
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _26
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _28 = __k_69 + 397;
/usr/include/c++/5/bits/random.tcc:404:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand this_3(D)->_M_x[_28]
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: op not supported by target.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: not vectorized: relevant stmt not supported: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: bad operation or unsupported loop bound.
/usr/include/c++/5/bits/random.tcc:404:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: _22 = this_3(D)->_M_x[__k_69];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: _25 = this_3(D)->_M_x[__k_24];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: _29 = this_3(D)->_M_x[_28];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: got vectype for stmt: this_3(D)->_M_x[__k_69] = _34;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Access function of PHI: {0, +, 1}_2
/usr/include/c++/5/bits/random.tcc:404:7: note: step: 1,  init: 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Access function of PHI: {227, +, 18446744073709551615}_2
/usr/include/c++/5/bits/random.tcc:404:7: note: step: 18446744073709551615,  init: 227
/usr/include/c++/5/bits/random.tcc:404:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:404:7: note: init: phi relevant? .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>
/usr/include/c++/5/bits/random.tcc:404:7: note: init: phi relevant? __k_69 = PHI <0(4), __k_24(6)>
/usr/include/c++/5/bits/random.tcc:404:7: note: init: phi relevant? ivtmp_116 = PHI <227(4), ivtmp_128(6)>
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? __k_24 = __k_69 + 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _28 = __k_69 + 397;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? this_3(D)->_M_x[__k_69] = _34;
/usr/include/c++/5/bits/random.tcc:404:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? ivtmp_128 = ivtmp_116 - 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: init: stmt relevant? if (ivtmp_128 == 0)
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: this_3(D)->_M_x[__k_69] = _34;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _34
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _31
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand iftmp.1_33
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _23
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _26
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _29
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _30
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:404:7: note: worklist: examine stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance == 0 between this_3(D)->_M_x[__k_69] and this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance negative.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_determine_vectorization_factor ===
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _22 = this_3(D)->_M_x[__k_69];

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _23 = _22 & 18446744071562067968;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __k_24 = __k_69 + 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _25 = this_3(D)->_M_x[__k_24];

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _26 = _25 & 2147483647;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __y_27 = _23 | _26;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _28 = __k_69 + 397;

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _29 = this_3(D)->_M_x[_28];

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _30 = __y_27 >> 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _31 = _29 ^ _30;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _32 = __y_27 & 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _34 = _31 ^ iftmp.1_33;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: this_3(D)->_M_x[__k_69] = _34;

/usr/include/c++/5/bits/random.tcc:404:7: note: get vectype for scalar type:  long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: vectype: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:404:7: note: nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: ivtmp_128 = ivtmp_116 - 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: if (ivtmp_128 == 0)

/usr/include/c++/5/bits/random.tcc:404:7: note: skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: vectorization factor = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: accesses have the same alignment.
dependence distance modulo vf == 0 between this_3(D)->_M_x[__k_69] and this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_24]
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[_28]
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:404:7: note: can't force alignment of ref: this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_prune_runtime_alias_test_list ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_enhance_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Unknown misalignment, is_packed = 0
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_can_advance_ivs_p:
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Setting misalignment to -1.
/usr/include/c++/5/bits/random.tcc:404:7: note: Alignment of access forced using peeling.
/usr/include/c++/5/bits/random.tcc:404:7: note: Peeling for alignment will be applied.
/usr/include/c++/5/bits/random.tcc:404:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:404:7: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_make_slp_decision ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_detect_hybrid_slp ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_analyze_loop_operations ===
/usr/include/c++/5/bits/random.tcc:404:7: note: examining phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: examining phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: examining phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_69]
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: aligned.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __k_24 = __k_69 + 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand this_3(D)->_M_x[__k_24]
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _23
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _26
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _28 = __k_69 + 397;
/usr/include/c++/5/bits/random.tcc:404:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: num. args = 4 (not unary/binary/ternary op).
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand this_3(D)->_M_x[_28]
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: vector/scalar shift/rotate found.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_shift ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _29
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _30
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32 != 0
/usr/include/c++/5/bits/random.tcc:404:7: note: not ssa-name.
/usr/include/c++/5/bits/random.tcc:404:7: note: use not simple.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _31
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand iftmp.1_33
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: === vectorizable_operation ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: this_3(D)->_M_x[__k_69] = _34;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _34
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_store_cost: aligned.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: ivtmp_128 = ivtmp_116 - 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:404:7: note: ==> examining statement: if (ivtmp_128 == 0)
/usr/include/c++/5/bits/random.tcc:404:7: note: irrelevant.
/usr/include/c++/5/bits/random.tcc:404:7: note: vectorization_factor = 2, niters = 227
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_update_slp_costs_according_to_vf ===
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
/usr/include/c++/5/bits/random.tcc:404:7: note: Cost model analysis: 
  Vector inside of loop cost: 13
  Vector prologue cost: 20
  Vector epilogue cost: 16
  Scalar iteration cost: 12
  Scalar outside cost: 0
  Vector outside cost: 36
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 5
/usr/include/c++/5/bits/random.tcc:404:7: note:   Runtime profitability threshold = 4
/usr/include/c++/5/bits/random.tcc:404:7: note:   Static estimate profitability threshold = 4
/usr/include/c++/5/bits/random.tcc:404:7: note: epilog loop required
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_can_advance_ivs_p:
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: .MEM_73 = PHI <.MEM_2(D)(4), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: __k_69 = PHI <0(4), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: Analyze phi: ivtmp_116 = PHI <227(4), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: loop vectorized
/usr/include/c++/5/bits/random.tcc:404:7: note: === vec_transform_loop ===
/usr/include/c++/5/bits/random.tcc:404:7: note: loop peeled for vectorization to enhance alignment
/usr/include/c++/5/bits/random.tcc:404:7: note: created vectp_this.628_176
/usr/include/c++/5/bits/random.tcc:404:7: note: niters for prolog loop: (long unsigned int) -(((unsigned long) vectp_this.628_176 & 15) >> 3) & 1

loop at /usr/include/c++/5/bits/random.tcc:406: if (ivtmp_210 >= prolog_loop_niters.629_177)

Setting upper bound of nb iterations for prologue loop to 0
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_update_inits_of_dr ===
/usr/include/c++/5/bits/random.tcc:404:7: note: === vect_do_peeling_for_loop_bound ===
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_update_ivs_after_vectorizer: phi: .MEM_73 = PHI <.MEM_201(43), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: virtual phi. skip.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_update_ivs_after_vectorizer: phi: __k_69 = PHI <__k_202(43), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: vect_update_ivs_after_vectorizer: phi: ivtmp_116 = PHI <ivtmp_204(43), ivtmp_128(6)>

Setting upper bound of nb iterations for epilogue loop to 0
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing phi: .MEM_73 = PHI <.MEM_201(47), .MEM_62(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing phi: __k_69 = PHI <__k_202(47), __k_24(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing phi: ivtmp_116 = PHI <ivtmp_204(47), ivtmp_128(6)>

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _22 = this_3(D)->_M_x[__k_69];

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform load. ncopies = 1
/usr/include/c++/5/bits/random.tcc:404:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:404:7: note: created vectp_this.636_244
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__22.637_248 = MEM[(long unsigned int *)vectp_this.635_246];
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _23 = _22 & 18446744071562067968;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _22
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _22
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _22
  def_stmt =  _22 = this_3(D)->_M_x[__k_69];
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: 18446744071562067968
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 18446744071562067968
/usr/include/c++/5/bits/random.tcc:404:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: created new init_stmt: vect_cst_.639_249 = { 18446744071562067968, 18446744071562067968 };
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__23.638_250 = vect__22.637_248 & vect_cst_.639_249;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: __k_24 = __k_69 + 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _25 = this_3(D)->_M_x[__k_24];

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform load. ncopies = 1
/usr/include/c++/5/bits/random.tcc:404:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:404:7: note: created vectp_this.641_251
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__25.642_256 = MEM[(long unsigned int *)vectp_this.640_254];
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _26 = _25 & 2147483647;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _25
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _25
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _25
  def_stmt =  _25 = this_3(D)->_M_x[__k_24];
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: 2147483647
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 2147483647
/usr/include/c++/5/bits/random.tcc:404:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: created new init_stmt: vect_cst_.644_257 = { 2147483647, 2147483647 };
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__26.643_258 = vect__25.642_256 & vect_cst_.644_257;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: __y_27 = _23 | _26;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _23
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _26
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _23
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _23
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _23
  def_stmt =  _23 = _22 & 18446744071562067968;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _26
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _26
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _26
  def_stmt =  _26 = _25 & 2147483647;
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect___y_27.645_259 = vect__23.638_250 | vect__26.643_258;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _28 = __k_69 + 397;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _29 = this_3(D)->_M_x[_28];

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform load. ncopies = 1
/usr/include/c++/5/bits/random.tcc:404:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:404:7: note: created vectp_this.647_260
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__29.648_265 = MEM[(long unsigned int *)vectp_this.646_263];
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _30 = __y_27 >> 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: vector/scalar shift/rotate found.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: operand 1 using scalar mode.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  __y_27
  def_stmt =  __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__30.649_266 = vect___y_27.645_259 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _31 = _29 ^ _30;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _29
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _30
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _29
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _29
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _29
  def_stmt =  _29 = this_3(D)->_M_x[_28];
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _30
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _30
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _30
  def_stmt =  _30 = __y_27 >> 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__31.650_267 = vect__29.648_265 ^ vect__30.649_266;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _32 = __y_27 & 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand __y_27
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  __y_27
  def_stmt =  __y_27 = _23 | _26;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: 1
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:404:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: created new init_stmt: vect_cst_.652_268 = { 1, 1 };
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__32.651_269 = vect___y_27.645_259 & vect_cst_.652_268;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _32
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _32
  def_stmt =  _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _32
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _32 = __y_27 & 1;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: 0
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: created new init_stmt: vect_cst_.654_270 = { 0, 0 };
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: 2567483615
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 2567483615
/usr/include/c++/5/bits/random.tcc:404:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: created new init_stmt: vect_cst_.655_271 = { 2567483615, 2567483615 };
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 2567483615
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: 0
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:404:7: note: Create vector_cst. nunits = 2
/usr/include/c++/5/bits/random.tcc:404:7: note: created new init_stmt: vect_cst_.656_272 = { 0, 0 };
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect_iftmp.653_273 = VEC_COND_EXPR <vect__32.651_269 != vect_cst_.654_270, vect_cst_.655_271, vect_cst_.656_272>;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: _34 = _31 ^ iftmp.1_33;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _31
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand iftmp.1_33
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform binary/unary operation.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _31
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _31
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _31
  def_stmt =  _31 = _29 ^ _30;
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: iftmp.1_33
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand iftmp.1_33
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  iftmp.1_33
  def_stmt =  iftmp.1_33 = _32 != 0 ? 2567483615 : 0;
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: vect__34.657_274 = vect__31.650_267 ^ vect_iftmp.653_273;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: this_3(D)->_M_x[__k_69] = _34;

/usr/include/c++/5/bits/random.tcc:404:7: note: transform statement.
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _34
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: transform store. ncopies = 1
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_get_vec_def_for_operand: _34
/usr/include/c++/5/bits/random.tcc:404:7: note: vect_is_simple_use: operand _34
/usr/include/c++/5/bits/random.tcc:404:7: note: def_stmt: _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:404:7: note: def =  _34
  def_stmt =  _34 = _31 ^ iftmp.1_33;
/usr/include/c++/5/bits/random.tcc:404:7: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a record based array ref: *this_3(D)
/usr/include/c++/5/bits/random.tcc:404:7: note: created vectp_this.659_275
/usr/include/c++/5/bits/random.tcc:404:7: note: add new stmt: MEM[(long unsigned int *)vectp_this.658_277] = vect__34.657_274;
/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: ivtmp_128 = ivtmp_116 - 1;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: vectp_this.635_247 = vectp_this.635_246 + 16;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: vectp_this.640_255 = vectp_this.640_254 + 16;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: vectp_this.646_264 = vectp_this.646_263 + 16;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: vectp_this.658_278 = vectp_this.658_277 + 16;

/usr/include/c++/5/bits/random.tcc:404:7: note: ------>vectorizing statement: if (ivtmp_128 == 0)


loop at /usr/include/c++/5/bits/random.tcc:406: if (ivtmp_280 >= bnd.631_212)

/usr/include/c++/5/bits/random.tcc:404:7: note: LOOP VECTORIZED

/usr/include/c++/5/bits/random.tcc:453:5: note: vectorized 2 loops in function.
/usr/include/c++/5/bits/random.tcc:458:16: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:458:16: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:458:16: note: got vectype for stmt: _4 = this_3(D)->_M_p;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:458:16: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:458:16: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:458:16: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:458:16: note: got vectype for stmt: _4 = this_3(D)->_M_p;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:458:16: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: got vectype for stmt: pretmp_121 = this_3(D)->_M_x[_4];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: got vectype for stmt: pretmp_121 = this_3(D)->_M_x[_4];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _186 = this_3(D)->_M_x[__k_282];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _189 = this_3(D)->_M_x[__k_188];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _193 = this_3(D)->_M_x[_192];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: this_3(D)->_M_x[__k_282] = _198;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_282] and this_3(D)->_M_x[__k_188]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_282] and this_3(D)->_M_x[_192]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:406:26: note: not consecutive access this_3(D)->_M_x[__k_282] = _198;

/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _186
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _186 = this_3(D)->_M_x[__k_282];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _189
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _189 = this_3(D)->_M_x[__k_188];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_282]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_188]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[_192]
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _186 = this_3(D)->_M_x[__k_282];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _189 = this_3(D)->_M_x[__k_188];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _193 = this_3(D)->_M_x[_192];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: this_3(D)->_M_x[__k_282] = _198;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_282] and this_3(D)->_M_x[__k_188]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_282] and this_3(D)->_M_x[_192]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:406:26: note: not consecutive access this_3(D)->_M_x[__k_282] = _198;

/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _186
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _186 = this_3(D)->_M_x[__k_282];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _189
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _189 = this_3(D)->_M_x[__k_188];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_282]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_188]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[_192]
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:406:26: note: not vectorized: no vectype for stmt: vect__22.637_248 = MEM[(long unsigned int *)vectp_this.635_246];
 scalar_type: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _219 = this_3(D)->_M_x[__k_235];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _222 = this_3(D)->_M_x[__k_221];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _226 = this_3(D)->_M_x[_225];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: this_3(D)->_M_x[__k_235] = _231;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_235] and this_3(D)->_M_x[__k_221]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_235] and this_3(D)->_M_x[_225]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:406:26: note: not consecutive access this_3(D)->_M_x[__k_235] = _231;

/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _219
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _219 = this_3(D)->_M_x[__k_235];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _222
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _222 = this_3(D)->_M_x[__k_221];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_235]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_221]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[_225]
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _219 = this_3(D)->_M_x[__k_235];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _222 = this_3(D)->_M_x[__k_221];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: _226 = this_3(D)->_M_x[_225];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: got vectype for stmt: this_3(D)->_M_x[__k_235] = _231;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_235] and this_3(D)->_M_x[__k_221]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving this_3(D)->_M_x[__k_235] and this_3(D)->_M_x[_225]
/usr/include/c++/5/bits/random.tcc:406:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:406:26: note: not consecutive access this_3(D)->_M_x[__k_235] = _231;

/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _219
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _219 = this_3(D)->_M_x[__k_235];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_is_simple_use: operand _222
/usr/include/c++/5/bits/random.tcc:406:26: note: def_stmt: _222 = this_3(D)->_M_x[__k_221];
/usr/include/c++/5/bits/random.tcc:406:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_235]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_221]
/usr/include/c++/5/bits/random.tcc:406:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:406:26: note: Unknown alignment for access: this_3(D)->_M_x[_225]
/usr/include/c++/5/bits/random.tcc:406:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:406:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:406:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _105 = this_3(D)->_M_x[__k_207];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _102 = this_3(D)->_M_x[__k_103];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _98 = this_3(D)->_M_x[_99];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: this_3(D)->_M_x[__k_207] = _93;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_99] and this_3(D)->_M_x[__k_207]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_99] and this_3(D)->_M_x[__k_103]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:414:26: note: not consecutive access this_3(D)->_M_x[__k_207] = _93;

/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _105
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _105 = this_3(D)->_M_x[__k_207];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _102
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _102 = this_3(D)->_M_x[__k_103];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_207]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_103]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[_99]
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _105 = this_3(D)->_M_x[__k_207];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _102 = this_3(D)->_M_x[__k_103];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _98 = this_3(D)->_M_x[_99];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: this_3(D)->_M_x[__k_207] = _93;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_99] and this_3(D)->_M_x[__k_207]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_99] and this_3(D)->_M_x[__k_103]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:414:26: note: not consecutive access this_3(D)->_M_x[__k_207] = _93;

/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _105
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _105 = this_3(D)->_M_x[__k_207];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _102
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _102 = this_3(D)->_M_x[__k_103];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_207]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_103]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[_99]
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:414:26: note: not vectorized: no vectype for stmt: vect__36.605_143 = MEM[(long unsigned int *)vectp_this.603_141];
 scalar_type: vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _68 = this_3(D)->_M_x[__k_9];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _61 = this_3(D)->_M_x[__k_66];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _5 = this_3(D)->_M_x[_21];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: this_3(D)->_M_x[__k_9] = _118;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_21] and this_3(D)->_M_x[__k_9]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_21] and this_3(D)->_M_x[__k_66]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:414:26: note: not consecutive access this_3(D)->_M_x[__k_9] = _118;

/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _68
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _68 = this_3(D)->_M_x[__k_9];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _61
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _61 = this_3(D)->_M_x[__k_66];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_9]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_66]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[_21]
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _68 = this_3(D)->_M_x[__k_9];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _61 = this_3(D)->_M_x[__k_66];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: _5 = this_3(D)->_M_x[_21];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: got vectype for stmt: this_3(D)->_M_x[__k_9] = _118;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_21] and this_3(D)->_M_x[__k_9]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving this_3(D)->_M_x[_21] and this_3(D)->_M_x[__k_66]
/usr/include/c++/5/bits/random.tcc:414:26: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:414:26: note: not consecutive access this_3(D)->_M_x[__k_9] = _118;

/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _68
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _68 = this_3(D)->_M_x[__k_9];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_is_simple_use: operand _61
/usr/include/c++/5/bits/random.tcc:414:26: note: def_stmt: _61 = this_3(D)->_M_x[__k_66];
/usr/include/c++/5/bits/random.tcc:414:26: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_9]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[__k_66]
/usr/include/c++/5/bits/random.tcc:414:26: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:414:26: note: Unknown alignment for access: this_3(D)->_M_x[_21]
/usr/include/c++/5/bits/random.tcc:414:26: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:414:26: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:414:26: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:420:29: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:420:29: note: got vectype for stmt: _49 = this_3(D)->_M_x[623];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:420:29: note: got vectype for stmt: _51 = this_3(D)->_M_x[0];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:420:29: note: got vectype for stmt: _54 = this_3(D)->_M_x[396];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:420:29: note: Detected interleaving this_3(D)->_M_x[0] and this_3(D)->_M_x[396]
/usr/include/c++/5/bits/random.tcc:420:29: note: Detected interleaving this_3(D)->_M_x[0] and this_3(D)->_M_x[623]
/usr/include/c++/5/bits/random.tcc:420:29: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_is_simple_use: operand _49
/usr/include/c++/5/bits/random.tcc:420:29: note: def_stmt: _49 = this_3(D)->_M_x[623];
/usr/include/c++/5/bits/random.tcc:420:29: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:420:29: note: can't force alignment of ref: this_3(D)->_M_x[623]
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:420:29: note: can't force alignment of ref: this_3(D)->_M_x[0]
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:420:29: note: can't force alignment of ref: this_3(D)->_M_x[396]
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:420:29: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:420:29: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:420:29: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:420:29: note: got vectype for stmt: _49 = this_3(D)->_M_x[623];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:420:29: note: got vectype for stmt: _51 = this_3(D)->_M_x[0];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:420:29: note: got vectype for stmt: _54 = this_3(D)->_M_x[396];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:420:29: note: Detected interleaving this_3(D)->_M_x[0] and this_3(D)->_M_x[396]
/usr/include/c++/5/bits/random.tcc:420:29: note: Detected interleaving this_3(D)->_M_x[0] and this_3(D)->_M_x[623]
/usr/include/c++/5/bits/random.tcc:420:29: note: Detected interleaving of size 3
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_is_simple_use: operand _49
/usr/include/c++/5/bits/random.tcc:420:29: note: def_stmt: _49 = this_3(D)->_M_x[623];
/usr/include/c++/5/bits/random.tcc:420:29: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:420:29: note: can't force alignment of ref: this_3(D)->_M_x[623]
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:420:29: note: can't force alignment of ref: this_3(D)->_M_x[0]
/usr/include/c++/5/bits/random.tcc:420:29: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:420:29: note: can't force alignment of ref: this_3(D)->_M_x[396]
/usr/include/c++/5/bits/random.tcc:420:29: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:420:29: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:420:29: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:453:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:453:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:453:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:422:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:422:7: note: got vectype for stmt: this_3(D)->_M_x[623] = _59;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:422:7: note: got vectype for stmt: this_3(D)->_M_p = 0;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:422:7: note: Detected interleaving this_3(D)->_M_x[623] and this_3(D)->_M_p
/usr/include/c++/5/bits/random.tcc:422:7: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:422:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:422:7: note: can't force alignment of ref: this_3(D)->_M_x[623]
/usr/include/c++/5/bits/random.tcc:422:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:422:7: note: can't force alignment of ref: this_3(D)->_M_p
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:422:7: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/c++/5/bits/random.tcc:422:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:422:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:422:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:422:7: note: got vectype for stmt: this_3(D)->_M_x[623] = _59;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:422:7: note: got vectype for stmt: this_3(D)->_M_p = 0;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:422:7: note: Detected interleaving this_3(D)->_M_x[623] and this_3(D)->_M_p
/usr/include/c++/5/bits/random.tcc:422:7: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:422:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:422:7: note: can't force alignment of ref: this_3(D)->_M_x[623]
/usr/include/c++/5/bits/random.tcc:422:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:422:7: note: can't force alignment of ref: this_3(D)->_M_p
/usr/include/c++/5/bits/random.tcc:422:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:422:7: note: Build SLP for this_3(D)->_M_x[623] = _59;

/usr/include/c++/5/bits/random.tcc:422:7: note: Build SLP for this_3(D)->_M_p = 0;

/usr/include/c++/5/bits/random.tcc:422:7: note: Build SLP failed: different operation in stmt this_3(D)->_M_p = 0;

/usr/include/c++/5/bits/random.tcc:422:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:422:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:462:29: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:462:29: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:462:29: note: got vectype for stmt: this_3(D)->_M_p = prephitmp_120;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:462:29: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:462:29: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:462:29: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:462:29: note: got vectype for stmt: this_3(D)->_M_p = prephitmp_120;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:462:29: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/random.tcc:1798
/usr/include/c++/5/bits/random.tcc:1798:6: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/random.tcc:1798:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:1798:6: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:1798:6: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/random.tcc:1798:6: note: bad loop form.
base.cc:62:8: note: vectorized 0 loops in function.
/usr/include/c++/5/bits/random.tcc:1790:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:1790:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1790:2: note: got vectype for stmt: _4 = nd._M_saved_available;
vector(32) unsigned char
/usr/include/c++/5/bits/random.tcc:1790:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:1790:2: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:1790:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1790:2: note: got vectype for stmt: _4 = nd._M_saved_available;
vector(16) unsigned char
/usr/include/c++/5/bits/random.tcc:1790:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:1792:6: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: got vectype for stmt: nd._M_saved_available = 0;
vector(32) unsigned char
/usr/include/c++/5/bits/random.tcc:1792:6: note: got vectype for stmt: __ret_5 = nd._M_saved;
vector(4) double
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: not consecutive access __ret_5 = nd._M_saved;

/usr/include/c++/5/bits/random.tcc:1792:6: note: not consecutive access nd._M_saved_available = 0;

/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:1792:6: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:1792:6: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: got vectype for stmt: nd._M_saved_available = 0;
vector(16) unsigned char
/usr/include/c++/5/bits/random.tcc:1792:6: note: got vectype for stmt: __ret_5 = nd._M_saved;
vector(2) double
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: not consecutive access __ret_5 = nd._M_saved;

/usr/include/c++/5/bits/random.tcc:1792:6: note: not consecutive access nd._M_saved_available = 0;

/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:1792:6: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:1792:6: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:62:8: note: ===vect_slp_analyze_bb===
base.cc:62:8: note: === vect_analyze_data_refs ===
base.cc:62:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:3328:29: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:3328:29: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:3328:29: note: not vectorized: not enough data-refs in basic block.
base.cc:62:8: note: ===vect_slp_analyze_bb===
base.cc:62:8: note: === vect_analyze_data_refs ===
base.cc:62:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:1806:56: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: got vectype for stmt: nd._M_saved = _22;
vector(4) double
/usr/include/c++/5/bits/random.tcc:1806:56: note: got vectype for stmt: nd._M_saved_available = 1;
vector(32) unsigned char
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: not consecutive access nd._M_saved = _22;

/usr/include/c++/5/bits/random.tcc:1806:56: note: not consecutive access nd._M_saved_available = 1;

/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: vect_is_simple_use: operand _18
/usr/include/c++/5/bits/random.tcc:1806:56: note: def_stmt: _18 = log (__r2_69);
/usr/include/c++/5/bits/random.tcc:1806:56: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:1806:56: note: vect_is_simple_use: operand __x_101
/usr/include/c++/5/bits/random.tcc:1806:56: note: def_stmt: __x_101 = PHI <__x_8(5)>
/usr/include/c++/5/bits/random.tcc:1806:56: note: type of def: 2.
/usr/include/c++/5/bits/random.tcc:1806:56: note: vect_is_simple_use: operand __y_100
/usr/include/c++/5/bits/random.tcc:1806:56: note: def_stmt: __y_100 = PHI <__y_11(5)>
/usr/include/c++/5/bits/random.tcc:1806:56: note: type of def: 2.
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:1806:56: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:1806:56: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: got vectype for stmt: nd._M_saved = _22;
vector(2) double
/usr/include/c++/5/bits/random.tcc:1806:56: note: got vectype for stmt: nd._M_saved_available = 1;
vector(16) unsigned char
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: not consecutive access nd._M_saved = _22;

/usr/include/c++/5/bits/random.tcc:1806:56: note: not consecutive access nd._M_saved_available = 1;

/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: vect_is_simple_use: operand _18
/usr/include/c++/5/bits/random.tcc:1806:56: note: def_stmt: _18 = log (__r2_69);
/usr/include/c++/5/bits/random.tcc:1806:56: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:1806:56: note: vect_is_simple_use: operand __x_101
/usr/include/c++/5/bits/random.tcc:1806:56: note: def_stmt: __x_101 = PHI <__x_8(5)>
/usr/include/c++/5/bits/random.tcc:1806:56: note: type of def: 2.
/usr/include/c++/5/bits/random.tcc:1806:56: note: vect_is_simple_use: operand __y_100
/usr/include/c++/5/bits/random.tcc:1806:56: note: def_stmt: __y_100 = PHI <__y_11(5)>
/usr/include/c++/5/bits/random.tcc:1806:56: note: type of def: 2.
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:1806:56: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:1806:56: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:1812:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: got vectype for stmt: _24 = MEM[(double *)&nd + 8B];
const vector(4) double
/usr/include/c++/5/bits/random.tcc:1812:2: note: got vectype for stmt: _27 = MEM[(double *)&nd];
const vector(4) double
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: Detected interleaving MEM[(double *)&nd] and MEM[(double *)&nd + 8B]
/usr/include/c++/5/bits/random.tcc:1812:2: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: vect_is_simple_use: operand _24
/usr/include/c++/5/bits/random.tcc:1812:2: note: def_stmt: _24 = MEM[(double *)&nd + 8B];
/usr/include/c++/5/bits/random.tcc:1812:2: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:1812:2: note: misalign = 8 bytes of ref MEM[(double *)&nd + 8B]
/usr/include/c++/5/bits/random.tcc:1812:2: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:1812:2: note: misalign = 0 bytes of ref MEM[(double *)&nd]
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:1812:2: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:1812:2: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: got vectype for stmt: _24 = MEM[(double *)&nd + 8B];
const vector(2) double
/usr/include/c++/5/bits/random.tcc:1812:2: note: got vectype for stmt: _27 = MEM[(double *)&nd];
const vector(2) double
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: Detected interleaving MEM[(double *)&nd] and MEM[(double *)&nd + 8B]
/usr/include/c++/5/bits/random.tcc:1812:2: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: vect_is_simple_use: operand _24
/usr/include/c++/5/bits/random.tcc:1812:2: note: def_stmt: _24 = MEM[(double *)&nd + 8B];
/usr/include/c++/5/bits/random.tcc:1812:2: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:1812:2: note: misalign = 8 bytes of ref MEM[(double *)&nd + 8B]
/usr/include/c++/5/bits/random.tcc:1812:2: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:1812:2: note: misalign = 0 bytes of ref MEM[(double *)&nd]
/usr/include/c++/5/bits/random.tcc:1812:2: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:1812:2: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:1812:2: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at base.cc:280
base.cc:280:3: note: ===== analyze_loop_nest =====
base.cc:280:3: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:280:3: note: === get_loop_niters ===
base.cc:280:3: note: not vectorized: number of iterations cannot be computed.
base.cc:280:3: note: bad loop form.

Analyzing loop at base.cc:278
base.cc:278:13: note: ===== analyze_loop_nest =====
base.cc:278:13: note: === vect_analyze_loop_form ===
base.cc:278:13: note: === get_loop_niters ===
base.cc:278:13: note: Symbolic number of iterations is (unsigned long) MAX_EXPR <n_13(D), 1>
base.cc:278:13: note: === vect_analyze_data_refs ===
base.cc:278:13: note: got vectype for stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
vector(4) double
base.cc:278:13: note: got vectype for stmt: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
vector(4) double
base.cc:278:13: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;
vector(4) double
base.cc:278:13: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;
vector(4) double
base.cc:278:13: note: === vect_analyze_scalar_cycles ===
base.cc:278:13: note: Analyze phi: i_117 = PHI <0(22), i_61(24)>

base.cc:278:13: note: Access function of PHI: {0, +, 1}_5
base.cc:278:13: note: step: 1,  init: 0
base.cc:278:13: note: Detected induction.
base.cc:278:13: note: Analyze phi: .MEM_125 = PHI <.MEM_146(22), .MEM_105(24)>

base.cc:278:13: note: === vect_pattern_recog ===
base.cc:278:13: note: vect_is_simple_use: operand i.28_58
base.cc:278:13: note: def_stmt: i.28_58 = (long unsigned int) i_117;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand i_117
base.cc:278:13: note: def_stmt: i_117 = PHI <0(22), i_61(24)>
base.cc:278:13: note: type of def: 4.
base.cc:278:13: note: vect_is_simple_use: operand _68
base.cc:278:13: note: def_stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _11
base.cc:278:13: note: def_stmt: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: === vect_analyze_data_ref_accesses ===
base.cc:278:13: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_60]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_60]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: Detected interleaving of size 2
base.cc:278:13: note: Detected interleaving of size 2
base.cc:278:13: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:278:13: note: init: phi relevant? i_117 = PHI <0(22), i_61(24)>
base.cc:278:13: note: init: phi relevant? .MEM_125 = PHI <.MEM_146(22), .MEM_105(24)>
base.cc:278:13: note: init: stmt relevant? i.28_58 = (long unsigned int) i_117;
base.cc:278:13: note: init: stmt relevant? _59 = i.28_58 * 16;
base.cc:278:13: note: init: stmt relevant? _60 = data_144 + _59;
base.cc:278:13: note: init: stmt relevant? _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: init: stmt relevant? _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: init: stmt relevant? _77 = _68 * factor_143;
base.cc:278:13: note: init: stmt relevant? _79 = _11 * factor_143;
base.cc:278:13: note: init: stmt relevant? REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;
base.cc:278:13: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:278:13: note: mark relevant 4, live 0.
base.cc:278:13: note: init: stmt relevant? IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;
base.cc:278:13: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:278:13: note: mark relevant 4, live 0.
base.cc:278:13: note: init: stmt relevant? i_61 = i_117 + 1;
base.cc:278:13: note: init: stmt relevant? if (n_13(D) > i_61)
base.cc:278:13: note: worklist: examine stmt: IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;
base.cc:278:13: note: vect_is_simple_use: operand _79
base.cc:278:13: note: def_stmt: _79 = _11 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: mark relevant 4, live 0.
base.cc:278:13: note: worklist: examine stmt: _79 = _11 * factor_143;
base.cc:278:13: note: vect_is_simple_use: operand _11
base.cc:278:13: note: def_stmt: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: mark relevant 4, live 0.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: def_stmt is out of loop.
base.cc:278:13: note: worklist: examine stmt: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: worklist: examine stmt: REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;
base.cc:278:13: note: vect_is_simple_use: operand _77
base.cc:278:13: note: def_stmt: _77 = _68 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: mark relevant 4, live 0.
base.cc:278:13: note: worklist: examine stmt: _77 = _68 * factor_143;
base.cc:278:13: note: vect_is_simple_use: operand _68
base.cc:278:13: note: def_stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: mark relevant 4, live 0.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: def_stmt is out of loop.
base.cc:278:13: note: worklist: examine stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: === vect_analyze_data_ref_dependences ===
base.cc:278:13: note: dependence distance  = 0.
base.cc:278:13: note: dependence distance == 0 between REALPART_EXPR <MEM[(struct complex *)_60]._M_value> and REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: dependence distance  = 0.
base.cc:278:13: note: dependence distance == 0 between IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: === vect_determine_vectorization_factor ===
base.cc:278:13: note: ==> examining phi: i_117 = PHI <0(22), i_61(24)>

base.cc:278:13: note: ==> examining phi: .MEM_125 = PHI <.MEM_146(22), .MEM_105(24)>

base.cc:278:13: note: ==> examining statement: i.28_58 = (long unsigned int) i_117;

base.cc:278:13: note: skip.
base.cc:278:13: note: ==> examining statement: _59 = i.28_58 * 16;

base.cc:278:13: note: skip.
base.cc:278:13: note: ==> examining statement: _60 = data_144 + _59;

base.cc:278:13: note: skip.
base.cc:278:13: note: ==> examining statement: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: nunits = 4
base.cc:278:13: note: ==> examining statement: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: nunits = 4
base.cc:278:13: note: ==> examining statement: _77 = _68 * factor_143;

base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: nunits = 4
base.cc:278:13: note: ==> examining statement: _79 = _11 * factor_143;

base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: nunits = 4
base.cc:278:13: note: ==> examining statement: REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;

base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: nunits = 4
base.cc:278:13: note: ==> examining statement: IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;

base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype: vector(4) double
base.cc:278:13: note: nunits = 4
base.cc:278:13: note: ==> examining statement: i_61 = i_117 + 1;

base.cc:278:13: note: skip.
base.cc:278:13: note: ==> examining statement: if (n_13(D) > i_61)

base.cc:278:13: note: skip.
base.cc:278:13: note: vectorization factor = 4
base.cc:278:13: note: === vect_analyze_data_refs_alignment ===
base.cc:278:13: note: dependence distance  = 0.
base.cc:278:13: note: accesses have the same alignment.
dependence distance modulo vf == 0 between REALPART_EXPR <MEM[(struct complex *)_60]._M_value> and REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: dependence distance  = 0.
base.cc:278:13: note: accesses have the same alignment.
dependence distance modulo vf == 0 between IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: misalign = 0 bytes of ref REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: misalign = 8 bytes of ref IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: misalign = 0 bytes of ref REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: misalign = 8 bytes of ref IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: === vect_prune_runtime_alias_test_list ===
base.cc:278:13: note: === vect_enhance_data_refs_alignment ===
base.cc:278:13: note: vect_can_advance_ivs_p:
base.cc:278:13: note: Analyze phi: i_117 = PHI <0(22), i_61(24)>

base.cc:278:13: note: Analyze phi: .MEM_125 = PHI <.MEM_146(22), .MEM_105(24)>

base.cc:278:13: note: virtual phi. skip.
base.cc:278:13: note: === vect_analyze_slp ===
base.cc:278:13: note: Build SLP for REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;

base.cc:278:13: note: Build SLP for IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;

base.cc:278:13: note: vect_is_simple_use: operand _77
base.cc:278:13: note: def_stmt: _77 = _68 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _79
base.cc:278:13: note: def_stmt: _79 = _11 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: Build SLP for _77 = _68 * factor_143;

base.cc:278:13: note: Build SLP for _79 = _11 * factor_143;

base.cc:278:13: note: vect_is_simple_use: operand _68
base.cc:278:13: note: def_stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: vect_is_simple_use: operand _11
base.cc:278:13: note: def_stmt: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: Build SLP for _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: Build SLP for _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: vect_model_load_cost: aligned.
base.cc:278:13: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:278:13: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: vect_is_simple_use: operand _68
base.cc:278:13: note: def_stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: vect_model_store_cost: aligned.
base.cc:278:13: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:278:13: note: vect_is_simple_use: operand _77
base.cc:278:13: note: def_stmt: _77 = _68 * factor_143;
base.cc:278:13: note: type of def: 3.
node 
	stmt 0 REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;

	stmt 1 IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;

node 
	stmt 0 _77 = _68 * factor_143;

	stmt 1 _79 = _11 * factor_143;

node 
	stmt 0 _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;

	stmt 1 _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: === vect_make_slp_decision ===
base.cc:278:13: note: Decided to SLP 1 instances. Unrolling factor 2
base.cc:278:13: note: === vect_detect_hybrid_slp ===
base.cc:278:13: note: === vect_analyze_loop_operations ===
base.cc:278:13: note: Updating vectorization factor to 2
base.cc:278:13: note: examining phi: i_117 = PHI <0(22), i_61(24)>

base.cc:278:13: note: examining phi: .MEM_125 = PHI <.MEM_146(22), .MEM_105(24)>

base.cc:278:13: note: ==> examining statement: i.28_58 = (long unsigned int) i_117;
base.cc:278:13: note: irrelevant.
base.cc:278:13: note: ==> examining statement: _59 = i.28_58 * 16;
base.cc:278:13: note: irrelevant.
base.cc:278:13: note: ==> examining statement: _60 = data_144 + _59;
base.cc:278:13: note: irrelevant.
base.cc:278:13: note: ==> examining statement: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: ==> examining statement: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: vect_is_simple_use: operand IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: vect_is_simple_use: operand IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: ==> examining statement: _77 = _68 * factor_143;
base.cc:278:13: note: vect_is_simple_use: operand _68
base.cc:278:13: note: def_stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: === vectorizable_operation ===
base.cc:278:13: note: ==> examining statement: _79 = _11 * factor_143;
base.cc:278:13: note: vect_is_simple_use: operand _11
base.cc:278:13: note: def_stmt: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: === vectorizable_operation ===
base.cc:278:13: note: ==> examining statement: REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;
base.cc:278:13: note: vect_is_simple_use: operand _77
base.cc:278:13: note: def_stmt: _77 = _68 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _79
base.cc:278:13: note: def_stmt: _79 = _11 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: ==> examining statement: IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value> = _79;
base.cc:278:13: note: vect_is_simple_use: operand _79
base.cc:278:13: note: def_stmt: _79 = _11 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: ==> examining statement: i_61 = i_117 + 1;
base.cc:278:13: note: irrelevant.
base.cc:278:13: note: ==> examining statement: if (n_13(D) > i_61)
base.cc:278:13: note: irrelevant.
base.cc:278:13: note: === vect_update_slp_costs_according_to_vf ===
base.cc:278:13: note: cost model disabled.
base.cc:278:13: note: epilog loop required
base.cc:278:13: note: vect_can_advance_ivs_p:
base.cc:278:13: note: Analyze phi: i_117 = PHI <0(22), i_61(24)>

base.cc:278:13: note: Analyze phi: .MEM_125 = PHI <.MEM_146(22), .MEM_105(24)>

base.cc:278:13: note: virtual phi. skip.
base.cc:278:13: note: loop vectorized
base.cc:278:13: note: === vec_transform_loop ===
base.cc:278:13: note: Profitability threshold is 1 loop iterations.
base.cc:278:13: note: === vect_do_peeling_for_loop_bound ===
base.cc:278:13: note: vect_update_ivs_after_vectorizer: phi: i_117 = PHI <0(42), i_61(24)>

base.cc:278:13: note: vect_update_ivs_after_vectorizer: phi: .MEM_125 = PHI <.MEM_146(42), .MEM_105(24)>

base.cc:278:13: note: virtual phi. skip.
Setting upper bound of nb iterations for epilogue loop to 0
base.cc:278:13: note: ------>vectorizing phi: i_117 = PHI <0(46), i_61(24)>

base.cc:278:13: note: ------>vectorizing phi: .MEM_125 = PHI <.MEM_146(46), .MEM_105(24)>

base.cc:278:13: note: ------>vectorizing statement: i.28_58 = (long unsigned int) i_117;

base.cc:278:13: note: ------>vectorizing statement: _59 = i.28_58 * 16;

base.cc:278:13: note: ------>vectorizing statement: _60 = data_144 + _59;

base.cc:278:13: note: ------>vectorizing statement: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: === scheduling SLP instances ===
base.cc:278:13: note: ------>vectorizing SLP node starting from: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: transform load. ncopies = 1
base.cc:278:13: note: create vector_type-pointer variable to type: vector(4) double  vectorizing a record based array ref: MEM[(struct complex *)data_144]
base.cc:278:13: note: created vectp_data.693_154
base.cc:278:13: note: add new stmt: vect__68.694_151 = MEM[(double *)vectp_data.692_153];
base.cc:278:13: note: ------>vectorizing SLP node starting from: _77 = _68 * factor_143;

base.cc:278:13: note: vect_is_simple_use: operand _68
base.cc:278:13: note: def_stmt: _68 = REALPART_EXPR <MEM[(struct complex *)_60]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(36), factor_134(34)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: transform binary/unary operation.
base.cc:278:13: note: created new init_stmt: vect_cst_.696_150 = {factor_143, factor_143, factor_143, factor_143};
base.cc:278:13: note: add new stmt: vect__77.695_149 = vect__68.694_151 * vect_cst_.696_150;
base.cc:278:13: note: ------>vectorizing SLP node starting from: REALPART_EXPR <MEM[(struct complex *)_60]._M_value> = _77;

base.cc:278:13: note: vect_is_simple_use: operand _77
base.cc:278:13: note: def_stmt: _77 = _68 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _79
base.cc:278:13: note: def_stmt: _79 = _11 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: transform store. ncopies = 1
base.cc:278:13: note: create vector_type-pointer variable to type: vector(4) double  vectorizing a record based array ref: MEM[(struct complex *)data_144]
base.cc:278:13: note: created vectp_data.698_148
base.cc:278:13: note: add new stmt: MEM[(double *)vectp_data.697_147] = vect__77.695_149;
base.cc:278:13: note: vectorizing stmts using SLP.
base.cc:278:13: note: ------>vectorizing statement: _11 = IMAGPART_EXPR <MEM[(struct complex *)_60]._M_value>;

base.cc:278:13: note: ------>vectorizing statement: vect__77.695_149 = vect__68.694_151 * vect_cst_.696_150;

base.cc:278:13: note: ------>vectorizing statement: _77 = _68 * factor_143;

base.cc:278:13: note: ------>vectorizing statement: _79 = _11 * factor_143;

base.cc:278:13: note: ------>vectorizing statement: MEM[(double *)vectp_data.697_147] = vect__77.695_149;

base.cc:278:13: note: ------>vectorizing statement: i_61 = i_117 + 1;

base.cc:278:13: note: ------>vectorizing statement: vectp_data.692_152 = vectp_data.692_153 + 32;

base.cc:278:13: note: ------>vectorizing statement: vectp_data.697_139 = vectp_data.697_147 + 32;

base.cc:278:13: note: ------>vectorizing statement: if (n_13(D) > i_61)


loop at base.cc:278: if (ivtmp_4 < bnd.689_185)

base.cc:278:13: note: LOOP VECTORIZED


Analyzing loop at base.cc:270
base.cc:270:3: note: ===== analyze_loop_nest =====
base.cc:270:3: note: === vect_analyze_loop_form ===
base.cc:270:3: note: === get_loop_niters ===
base.cc:270:3: note: not vectorized: number of iterations cannot be computed.
base.cc:270:3: note: bad loop form.

Analyzing loop at base.cc:265
base.cc:265:9: note: ===== analyze_loop_nest =====
base.cc:265:9: note: === vect_analyze_loop_form ===
base.cc:265:9: note: === get_loop_niters ===
base.cc:265:9: note: Symbolic number of iterations is _25 != 0 ? _25 : 1
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: got vectype for stmt: _43 = D.114345[_119];
vector(4) double
base.cc:265:9: note: === vect_analyze_scalar_cycles ===
base.cc:265:9: note: Analyze phi: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>

base.cc:265:9: note: Access function of PHI: {0.0, +, _43}_2
base.cc:265:9: note: step: _43,  init: 0.0
base.cc:265:9: note: step unknown.
base.cc:265:9: note: Analyze phi: _119 = PHI <0(14), _45(16)>

base.cc:265:9: note: Access function of PHI: {0, +, 1}_2
base.cc:265:9: note: step: 1,  init: 0
base.cc:265:9: note: Detected induction.
base.cc:265:9: note: Analyze phi: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>

base.cc:265:9: note: detected reduction: need to swap operands: noise_energy_44 = noise_energy_37 + _43;

base.cc:265:9: note: Detected reduction.
base.cc:265:9: note: === vect_pattern_recog ===
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: === vect_analyze_data_ref_accesses ===
base.cc:265:9: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:265:9: note: init: phi relevant? noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>
base.cc:265:9: note: init: phi relevant? _119 = PHI <0(14), _45(16)>
base.cc:265:9: note: init: stmt relevant? _43 = D.114345[_119];
base.cc:265:9: note: init: stmt relevant? noise_energy_44 = _43 + noise_energy_37;
base.cc:265:9: note: vec_stmt_relevant_p: used out of loop.
base.cc:265:9: note: mark relevant 0, live 1.
base.cc:265:9: note: init: stmt relevant? _45 = _119 + 1;
base.cc:265:9: note: init: stmt relevant? if (_25 > _45)
base.cc:265:9: note: worklist: examine stmt: noise_energy_44 = _43 + noise_energy_37;
base.cc:265:9: note: vect_is_simple_use: operand noise_energy_37
base.cc:265:9: note: def_stmt: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>
base.cc:265:9: note: type of def: 5.
base.cc:265:9: note: mark relevant 3, live 0.
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: mark relevant 3, live 0.
base.cc:265:9: note: worklist: examine stmt: _43 = D.114345[_119];
base.cc:265:9: note: worklist: examine stmt: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>
base.cc:265:9: note: vect_is_simple_use: operand 0.0
base.cc:265:9: note: vect_is_simple_use: operand noise_energy_44
base.cc:265:9: note: def_stmt: noise_energy_44 = _43 + noise_energy_37;
base.cc:265:9: note: type of def: 5.
base.cc:265:9: note: reduc-stmt defining reduc-phi in the same nest.
base.cc:265:9: note: === vect_analyze_data_ref_dependences ===
base.cc:265:9: note: === vect_determine_vectorization_factor ===
base.cc:265:9: note: ==> examining phi: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>

base.cc:265:9: note: get vectype for scalar type:  double
base.cc:265:9: note: vectype: vector(4) double
base.cc:265:9: note: nunits = 4
base.cc:265:9: note: ==> examining phi: _119 = PHI <0(14), _45(16)>

base.cc:265:9: note: ==> examining statement: _43 = D.114345[_119];

base.cc:265:9: note: get vectype for scalar type:  double
base.cc:265:9: note: vectype: vector(4) double
base.cc:265:9: note: nunits = 4
base.cc:265:9: note: ==> examining statement: noise_energy_44 = _43 + noise_energy_37;

base.cc:265:9: note: get vectype for scalar type:  double
base.cc:265:9: note: vectype: vector(4) double
base.cc:265:9: note: get vectype for scalar type:  double
base.cc:265:9: note: vectype: vector(4) double
base.cc:265:9: note: nunits = 4
base.cc:265:9: note: ==> examining statement: _45 = _119 + 1;

base.cc:265:9: note: skip.
base.cc:265:9: note: ==> examining statement: if (_25 > _45)

base.cc:265:9: note: skip.
base.cc:265:9: note: vectorization factor = 4
base.cc:265:9: note: === vect_analyze_data_refs_alignment ===
base.cc:265:9: note: vect_compute_data_ref_alignment:
base.cc:265:9: note: force alignment of D.114345[_119]
base.cc:265:9: note: misalign = 0 bytes of ref D.114345[_119]
base.cc:265:9: note: === vect_prune_runtime_alias_test_list ===
base.cc:265:9: note: === vect_enhance_data_refs_alignment ===
base.cc:265:9: note: vect_can_advance_ivs_p:
base.cc:265:9: note: Analyze phi: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>

base.cc:265:9: note: reduc phi. skip.
base.cc:265:9: note: Analyze phi: _119 = PHI <0(14), _45(16)>

base.cc:265:9: note: vect_model_load_cost: aligned.
base.cc:265:9: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
base.cc:265:9: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
base.cc:265:9: note: === vect_analyze_slp ===
base.cc:265:9: note: === vect_make_slp_decision ===
base.cc:265:9: note: === vect_detect_hybrid_slp ===
base.cc:265:9: note: === vect_analyze_loop_operations ===
base.cc:265:9: note: examining phi: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>

base.cc:265:9: note: examining phi: _119 = PHI <0(14), _45(16)>

base.cc:265:9: note: ==> examining statement: _43 = D.114345[_119];
base.cc:265:9: note: num. args = 4 (not unary/binary/ternary op).
base.cc:265:9: note: vect_is_simple_use: operand D.114345[_119]
base.cc:265:9: note: not ssa-name.
base.cc:265:9: note: use not simple.
base.cc:265:9: note: vect_model_load_cost: aligned.
base.cc:265:9: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:265:9: note: ==> examining statement: noise_energy_44 = _43 + noise_energy_37;
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: vect_is_simple_use: operand noise_energy_37
base.cc:265:9: note: def_stmt: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>
base.cc:265:9: note: type of def: 5.
base.cc:265:9: note: detected reduction: noise_energy_44 = _43 + noise_energy_37;

vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 2 .
base.cc:265:9: note: ==> examining statement: _45 = _119 + 1;
base.cc:265:9: note: irrelevant.
base.cc:265:9: note: ==> examining statement: if (_25 > _45)
base.cc:265:9: note: irrelevant.
base.cc:265:9: note: === vect_update_slp_costs_according_to_vf ===
base.cc:265:9: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
base.cc:265:9: note: Cost model analysis: 
  Vector inside of loop cost: 2
  Vector prologue cost: 7
  Vector epilogue cost: 6
  Scalar iteration cost: 2
  Scalar outside cost: 6
  Vector outside cost: 13
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 5
base.cc:265:9: note:   Runtime profitability threshold = 4
base.cc:265:9: note:   Static estimate profitability threshold = 4
base.cc:265:9: note: epilog loop required
base.cc:265:9: note: vect_can_advance_ivs_p:
base.cc:265:9: note: Analyze phi: noise_energy_37 = PHI <0.0(14), noise_energy_44(16)>

base.cc:265:9: note: reduc phi. skip.
base.cc:265:9: note: Analyze phi: _119 = PHI <0(14), _45(16)>

base.cc:265:9: note: loop vectorized
base.cc:265:9: note: === vec_transform_loop ===
base.cc:265:9: note: Profitability threshold is 4 loop iterations.
base.cc:265:9: note: === vect_do_peeling_for_loop_bound ===
base.cc:265:9: note: vect_update_ivs_after_vectorizer: phi: noise_energy_37 = PHI <0.0(51), noise_energy_44(16)>

base.cc:265:9: note: reduc phi. skip.
base.cc:265:9: note: vect_update_ivs_after_vectorizer: phi: _119 = PHI <0(51), _45(16)>

Setting upper bound of nb iterations for epilogue loop to 3
base.cc:265:9: note: ------>vectorizing phi: noise_energy_37 = PHI <0.0(55), noise_energy_44(16)>

base.cc:265:9: note: ------>vectorizing phi: _119 = PHI <0(55), _45(16)>

base.cc:265:9: note: ------>vectorizing statement: _43 = D.114345[_119];

base.cc:265:9: note: transform statement.
base.cc:265:9: note: transform load. ncopies = 1
base.cc:265:9: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: D.114345
base.cc:265:9: note: created vectp.704_91
base.cc:265:9: note: add new stmt: vect__43.705_57 = MEM[(double *)vectp.703_69];
base.cc:265:9: note: ------>vectorizing statement: noise_energy_44 = _43 + noise_energy_37;

base.cc:265:9: note: transform statement.
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: vect_is_simple_use: operand noise_energy_37
base.cc:265:9: note: def_stmt: noise_energy_37 = PHI <0.0(55), noise_energy_44(16)>
base.cc:265:9: note: type of def: 5.
base.cc:265:9: note: detected reduction: noise_energy_44 = _43 + noise_energy_37;

base.cc:265:9: note: transform reduction.
base.cc:265:9: note: vect_get_vec_def_for_operand: _43
base.cc:265:9: note: vect_is_simple_use: operand _43
base.cc:265:9: note: def_stmt: _43 = D.114345[_119];
base.cc:265:9: note: type of def: 3.
base.cc:265:9: note: def =  _43
  def_stmt =  _43 = D.114345[_119];
base.cc:265:9: note: add new stmt: vect_noise_energy_44.706_54 = vect__43.705_57 + vect_noise_energy_44.706_56;
base.cc:265:9: note: vect_is_simple_use: operand 0.0
base.cc:265:9: note: vect_get_vec_def_for_operand: noise_energy_37
base.cc:265:9: note: vect_is_simple_use: operand noise_energy_37
base.cc:265:9: note: def_stmt: noise_energy_37 = PHI <0.0(55), noise_energy_44(16)>
base.cc:265:9: note: type of def: 5.
base.cc:265:9: note: def =  noise_energy_37
  def_stmt =  noise_energy_37 = PHI <0.0(55), noise_energy_44(16)>
base.cc:265:9: note: transform reduction: created def-use cycle: vect_noise_energy_44.706_56 = PHI <{ 0.0, 0.0, 0.0, 0.0 }(55), vect_noise_energy_44.706_54(16)>

vect_noise_energy_44.706_54 = vect__43.705_57 + vect_noise_energy_44.706_56;

base.cc:265:9: note: Reduce using direct vector reduction.
base.cc:265:9: note: ------>vectorizing statement: _45 = _119 + 1;

base.cc:265:9: note: ------>vectorizing statement: vectp.703_64 = vectp.703_69 + 32;

base.cc:265:9: note: ------>vectorizing statement: if (_25 > _45)


loop at base.cc:265: if (ivtmp_42 < bnd.700_136)

base.cc:265:9: note: LOOP VECTORIZED


Analyzing loop at base.cc:267
base.cc:267:52: note: ===== analyze_loop_nest =====
base.cc:267:52: note: === vect_analyze_loop_form ===
base.cc:267:52: note: === get_loop_niters ===
base.cc:267:52: note: Symbolic number of iterations is (unsigned long) MAX_EXPR <n_13(D), 1>
base.cc:267:52: note: === vect_analyze_data_refs ===
base.cc:267:52: note: not vectorized: loop contains function calls or data references that cannot be analyzed
base.cc:267:52: note: bad data references.
base.cc:259:6: note: vectorized 2 loops in function.
base.cc:261:3: note: ===vect_slp_analyze_bb===
base.cc:261:3: note: === vect_analyze_data_refs ===
base.cc:261:3: note: got vectype for stmt: D.107235 = n_13(D);
const vector(4) long int
base.cc:261:3: note: got vectype for stmt: _73 = MEM[(long int *)out_15(D)];
const vector(4) long int
base.cc:261:3: note: got vectype for stmt: D.107234 = _73;
const vector(4) long int
base.cc:261:3: note: === vect_analyze_data_ref_accesses ===
base.cc:261:3: note: not consecutive access D.107234 = _73;

base.cc:261:3: note: not consecutive access D.107235 = n_13(D);

base.cc:261:3: note: not consecutive access _73 = MEM[(long int *)out_15(D)];

base.cc:261:3: note: === vect_pattern_recog ===
base.cc:261:3: note: === vect_analyze_data_refs_alignment ===
base.cc:261:3: note: === vect_analyze_slp ===
base.cc:261:3: note: Failed to SLP the basic block.
base.cc:261:3: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:261:3: note: ***** Re-trying analysis with vector size 16
base.cc:261:3: note: === vect_analyze_data_refs ===
base.cc:261:3: note: got vectype for stmt: D.107235 = n_13(D);
const vector(2) long int
base.cc:261:3: note: got vectype for stmt: _73 = MEM[(long int *)out_15(D)];
const vector(2) long int
base.cc:261:3: note: got vectype for stmt: D.107234 = _73;
const vector(2) long int
base.cc:261:3: note: === vect_analyze_data_ref_accesses ===
base.cc:261:3: note: not consecutive access D.107234 = _73;

base.cc:261:3: note: not consecutive access D.107235 = n_13(D);

base.cc:261:3: note: not consecutive access _73 = MEM[(long int *)out_15(D)];

base.cc:261:3: note: === vect_pattern_recog ===
base.cc:261:3: note: === vect_analyze_data_refs_alignment ===
base.cc:261:3: note: === vect_analyze_slp ===
base.cc:261:3: note: Failed to SLP the basic block.
base.cc:261:3: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/glog/logging.h:694:1: note: ===vect_slp_analyze_bb===
/usr/include/glog/logging.h:694:1: note: === vect_analyze_data_refs ===
/usr/include/glog/logging.h:694:1: note: not vectorized: not enough data-refs in basic block.
base.cc:261:3: note: ===vect_slp_analyze_bb===
base.cc:261:3: note: === vect_analyze_data_refs ===
base.cc:261:3: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: got vectype for stmt: _76 = MEM[(struct Cplex * *)out_15(D) + 8B];
vector(4) long unsigned int
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ***** Re-trying analysis with vector size 16
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: got vectype for stmt: _76 = MEM[(struct Cplex * *)out_15(D) + 8B];
vector(2) long unsigned int
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_160 = MEM[(double *)vectp.704_91];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_44 = MEM[(double *)vectp.703_119];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_77 = MEM[(double *)vectp.703_60];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_9 = MEM[(double *)vectp.703_176];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_195 = MEM[(double *)vectp.703_3];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_122 = MEM[(double *)vectp.703_179];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_198 = MEM[(double *)vectp.703_8];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: not vectorized: no vectype for stmt: vect__43.705_57 = MEM[(double *)vectp.703_69];
 scalar_type: vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ===vect_slp_analyze_bb===
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: got vectype for stmt: _115 = D.114345[_102];
vector(4) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:265:9: note: ***** Re-trying analysis with vector size 16
base.cc:265:9: note: === vect_analyze_data_refs ===
base.cc:265:9: note: got vectype for stmt: _115 = D.114345[_102];
vector(2) double
base.cc:265:9: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:270:3: note: ===vect_slp_analyze_bb===
base.cc:270:3: note: === vect_analyze_data_refs ===
base.cc:270:3: note: got vectype for stmt: SR.259_47 = MEM[(struct _Hash_node_base * *)mm_46(D) + 16B];
vector(4) long unsigned int
base.cc:270:3: note: not vectorized: not enough data-refs in basic block.
base.cc:270:3: note: ***** Re-trying analysis with vector size 16
base.cc:270:3: note: === vect_analyze_data_refs ===
base.cc:270:3: note: got vectype for stmt: SR.259_47 = MEM[(struct _Hash_node_base * *)mm_46(D) + 16B];
vector(2) long unsigned int
base.cc:270:3: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: got vectype for stmt: pretmp_181 = MEM[(struct Cplex * *)out_15(D) + 8B];
vector(4) long unsigned int
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ***** Re-trying analysis with vector size 16
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: got vectype for stmt: pretmp_181 = MEM[(struct Cplex * *)out_15(D) + 8B];
vector(2) long unsigned int
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:271:37: note: ===vect_slp_analyze_bb===
base.cc:271:37: note: === vect_analyze_data_refs ===
base.cc:271:37: note: got vectype for stmt: _50 = MEM[(const struct pair &)SR.259_129 + 8].first;
const vector(4) long int
base.cc:271:37: note: got vectype for stmt: _83 = REALPART_EXPR <MEM[(const struct complex &)_90]>;
vector(4) double
base.cc:271:37: note: got vectype for stmt: _85 = IMAGPART_EXPR <MEM[(const struct complex &)_90]>;
vector(4) double
base.cc:271:37: note: got vectype for stmt: SR.259_82 = MEM[(struct _Hash_node_base * *)SR.259_129];
vector(4) long unsigned int
base.cc:271:37: note: === vect_analyze_data_ref_accesses ===
base.cc:271:37: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_90]> and IMAGPART_EXPR <MEM[(const struct complex &)_90]>
base.cc:271:37: note: Detected interleaving of size 2
base.cc:271:37: note: not consecutive access SR.259_82 = MEM[(struct _Hash_node_base * *)SR.259_129];

base.cc:271:37: note: not consecutive access _50 = MEM[(const struct pair &)SR.259_129 + 8].first;

base.cc:271:37: note: === vect_pattern_recog ===
base.cc:271:37: note: vect_is_simple_use: operand i.33_88
base.cc:271:37: note: def_stmt: i.33_88 = (long unsigned int) _50;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: vect_is_simple_use: operand _50
base.cc:271:37: note: def_stmt: _50 = MEM[(const struct pair &)SR.259_129 + 8].first;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: vect_is_simple_use: operand _83
base.cc:271:37: note: def_stmt: _83 = REALPART_EXPR <MEM[(const struct complex &)_90]>;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: vect_is_simple_use: operand _85
base.cc:271:37: note: def_stmt: _85 = IMAGPART_EXPR <MEM[(const struct complex &)_90]>;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: === vect_analyze_data_refs_alignment ===
base.cc:271:37: note: vect_compute_data_ref_alignment:
base.cc:271:37: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_90]>
base.cc:271:37: note: vect_compute_data_ref_alignment:
base.cc:271:37: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_90]>
base.cc:271:37: note: === vect_analyze_slp ===
base.cc:271:37: note: Failed to SLP the basic block.
base.cc:271:37: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:271:37: note: ***** Re-trying analysis with vector size 16
base.cc:271:37: note: === vect_analyze_data_refs ===
base.cc:271:37: note: got vectype for stmt: _50 = MEM[(const struct pair &)SR.259_129 + 8].first;
const vector(2) long int
base.cc:271:37: note: got vectype for stmt: _83 = REALPART_EXPR <MEM[(const struct complex &)_90]>;
vector(2) double
base.cc:271:37: note: got vectype for stmt: _85 = IMAGPART_EXPR <MEM[(const struct complex &)_90]>;
vector(2) double
base.cc:271:37: note: got vectype for stmt: SR.259_82 = MEM[(struct _Hash_node_base * *)SR.259_129];
vector(2) long unsigned int
base.cc:271:37: note: === vect_analyze_data_ref_accesses ===
base.cc:271:37: note: Detected interleaving REALPART_EXPR <MEM[(const struct complex &)_90]> and IMAGPART_EXPR <MEM[(const struct complex &)_90]>
base.cc:271:37: note: Detected interleaving of size 2
base.cc:271:37: note: not consecutive access SR.259_82 = MEM[(struct _Hash_node_base * *)SR.259_129];

base.cc:271:37: note: not consecutive access _50 = MEM[(const struct pair &)SR.259_129 + 8].first;

base.cc:271:37: note: === vect_pattern_recog ===
base.cc:271:37: note: vect_is_simple_use: operand i.33_88
base.cc:271:37: note: def_stmt: i.33_88 = (long unsigned int) _50;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: vect_is_simple_use: operand _50
base.cc:271:37: note: def_stmt: _50 = MEM[(const struct pair &)SR.259_129 + 8].first;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: vect_is_simple_use: operand _83
base.cc:271:37: note: def_stmt: _83 = REALPART_EXPR <MEM[(const struct complex &)_90]>;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: vect_is_simple_use: operand _85
base.cc:271:37: note: def_stmt: _85 = IMAGPART_EXPR <MEM[(const struct complex &)_90]>;
base.cc:271:37: note: type of def: 3.
base.cc:271:37: note: === vect_analyze_data_refs_alignment ===
base.cc:271:37: note: vect_compute_data_ref_alignment:
base.cc:271:37: note: can't force alignment of ref: REALPART_EXPR <MEM[(const struct complex &)_90]>
base.cc:271:37: note: vect_compute_data_ref_alignment:
base.cc:271:37: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(const struct complex &)_90]>
base.cc:271:37: note: === vect_analyze_slp ===
base.cc:271:37: note: Failed to SLP the basic block.
base.cc:271:37: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/complex:1275:17: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/complex:1275:17: note: === vect_analyze_data_refs ===
/usr/include/c++/5/complex:1275:17: note: not vectorized: no vectype for stmt: vect__68.694_151 = MEM[(double *)vectp_data.692_153];
 scalar_type: vector(4) double
/usr/include/c++/5/complex:1275:17: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:278:13: note: ===vect_slp_analyze_bb===
base.cc:278:13: note: === vect_analyze_data_refs ===
base.cc:278:13: note: got vectype for stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
vector(4) double
base.cc:278:13: note: got vectype for stmt: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
vector(4) double
base.cc:278:13: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_169]._M_value> = _166;
vector(4) double
base.cc:278:13: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value> = _165;
vector(4) double
base.cc:278:13: note: === vect_analyze_data_ref_accesses ===
base.cc:278:13: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_169]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_169]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: Detected interleaving of size 2
base.cc:278:13: note: Detected interleaving of size 2
base.cc:278:13: note: === vect_pattern_recog ===
base.cc:278:13: note: vect_is_simple_use: operand i.28_173
base.cc:278:13: note: def_stmt: i.28_173 = (long unsigned int) i_161;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand i_161
base.cc:278:13: note: def_stmt: i_161 = PHI <tmp.691_155(31), 0(28)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: vect_is_simple_use: operand _168
base.cc:278:13: note: def_stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _167
base.cc:278:13: note: def_stmt: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: === vect_analyze_data_refs_alignment ===
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: === vect_analyze_slp ===
base.cc:278:13: note: Build SLP failed: unrolling required in basic block SLP
base.cc:278:13: note: Failed to SLP the basic block.
base.cc:278:13: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:278:13: note: ***** Re-trying analysis with vector size 16
base.cc:278:13: note: === vect_analyze_data_refs ===
base.cc:278:13: note: got vectype for stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
vector(2) double
base.cc:278:13: note: got vectype for stmt: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
vector(2) double
base.cc:278:13: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_169]._M_value> = _166;
vector(2) double
base.cc:278:13: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value> = _165;
vector(2) double
base.cc:278:13: note: === vect_analyze_data_ref_accesses ===
base.cc:278:13: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_169]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_169]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: Detected interleaving of size 2
base.cc:278:13: note: Detected interleaving of size 2
base.cc:278:13: note: === vect_pattern_recog ===
base.cc:278:13: note: vect_is_simple_use: operand i.28_173
base.cc:278:13: note: def_stmt: i.28_173 = (long unsigned int) i_161;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand i_161
base.cc:278:13: note: def_stmt: i_161 = PHI <tmp.691_155(31), 0(28)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: vect_is_simple_use: operand _168
base.cc:278:13: note: def_stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _167
base.cc:278:13: note: def_stmt: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: === vect_analyze_data_refs_alignment ===
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: vect_compute_data_ref_alignment:
base.cc:278:13: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: === vect_analyze_slp ===
base.cc:278:13: note: Build SLP for REALPART_EXPR <MEM[(struct complex *)_169]._M_value> = _166;

base.cc:278:13: note: Build SLP for IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value> = _165;

base.cc:278:13: note: vect_is_simple_use: operand _166
base.cc:278:13: note: def_stmt: _166 = _168 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _165
base.cc:278:13: note: def_stmt: _165 = _167 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: Build SLP for _166 = _168 * factor_143;

base.cc:278:13: note: Build SLP for _165 = _167 * factor_143;

base.cc:278:13: note: vect_is_simple_use: operand _168
base.cc:278:13: note: def_stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(44), factor_134(42)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: vect_is_simple_use: operand _167
base.cc:278:13: note: def_stmt: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(44), factor_134(42)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: Build SLP for _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;

base.cc:278:13: note: Build SLP for _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;

base.cc:278:13: note: vect_model_load_cost: unaligned supported by hardware.
base.cc:278:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
base.cc:278:13: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: vect_is_simple_use: operand _168
base.cc:278:13: note: def_stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(44), factor_134(42)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: vect_model_store_cost: unaligned supported by hardware.
base.cc:278:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
base.cc:278:13: note: vect_is_simple_use: operand _166
base.cc:278:13: note: def_stmt: _166 = _168 * factor_143;
base.cc:278:13: note: type of def: 3.
node 
	stmt 0 REALPART_EXPR <MEM[(struct complex *)_169]._M_value> = _166;

	stmt 1 IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value> = _165;

node 
	stmt 0 _166 = _168 * factor_143;

	stmt 1 _165 = _167 * factor_143;

node 
	stmt 0 _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;

	stmt 1 _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;

base.cc:278:13: note: === vect_slp_analyze_data_ref_dependences ===
base.cc:278:13: note: can't determine dependence between REALPART_EXPR <MEM[(struct complex *)_169]._M_value> and REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: can't determine dependence between IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: Vectorizing an unaligned access.
base.cc:278:13: note: Vectorizing an unaligned access.
base.cc:278:13: note: ==> examining statement: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype:  vector(2) double
base.cc:278:13: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: vect_is_simple_use: operand REALPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: ==> examining statement: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype:  vector(2) double
base.cc:278:13: note: vect_is_simple_use: operand IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: vect_is_simple_use: operand IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>
base.cc:278:13: note: not ssa-name.
base.cc:278:13: note: use not simple.
base.cc:278:13: note: ==> examining statement: _166 = _168 * factor_143;
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype:  vector(2) double
base.cc:278:13: note: vect_is_simple_use: operand _168
base.cc:278:13: note: def_stmt: _168 = REALPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(44), factor_134(42)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: === vectorizable_operation ===
base.cc:278:13: note: ==> examining statement: _165 = _167 * factor_143;
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype:  vector(2) double
base.cc:278:13: note: vect_is_simple_use: operand _167
base.cc:278:13: note: def_stmt: _167 = IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value>;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand factor_143
base.cc:278:13: note: def_stmt: factor_143 = PHI <factor_141(44), factor_134(42)>
base.cc:278:13: note: type of def: 2.
base.cc:278:13: note: === vectorizable_operation ===
base.cc:278:13: note: ==> examining statement: REALPART_EXPR <MEM[(struct complex *)_169]._M_value> = _166;
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype:  vector(2) double
base.cc:278:13: note: vect_is_simple_use: operand _166
base.cc:278:13: note: def_stmt: _166 = _168 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: vect_is_simple_use: operand _165
base.cc:278:13: note: def_stmt: _165 = _167 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: ==> examining statement: IMAGPART_EXPR <MEM[(struct complex *)_169]._M_value> = _165;
base.cc:278:13: note: get vectype for scalar type:  double
base.cc:278:13: note: vectype:  vector(2) double
base.cc:278:13: note: vect_is_simple_use: operand _165
base.cc:278:13: note: def_stmt: _165 = _167 * factor_143;
base.cc:278:13: note: type of def: 3.
base.cc:278:13: note: Cost model analysis: 
  Vector inside of basic block cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 6
base.cc:278:13: note: not vectorized: vectorization is not profitable.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:280:3: note: ===vect_slp_analyze_bb===
base.cc:280:3: note: === vect_analyze_data_refs ===
base.cc:280:3: note: not vectorized: not enough data-refs in basic block.
base.cc:283:1: note: ===vect_slp_analyze_bb===
base.cc:283:1: note: === vect_analyze_data_refs ===
base.cc:283:1: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: got vectype for stmt: pretmp_171 = MEM[(struct Cplex * *)out_15(D) + 8B];
vector(4) long unsigned int
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ***** Re-trying analysis with vector size 16
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: got vectype for stmt: pretmp_171 = MEM[(struct Cplex * *)out_15(D) + 8B];
vector(2) long unsigned int
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:281:15: note: ===vect_slp_analyze_bb===
base.cc:281:15: note: === vect_analyze_data_refs ===
base.cc:281:15: note: got vectype for stmt: _65 = MEM[(const struct pair &)SR.261_128 + 8].first;
const vector(4) long int
base.cc:281:15: note: not vectorized: no vectype for stmt: *_97 = MEM[(const struct pair &)SR.261_128 + 8].second;
 scalar_type: const struct complex
base.cc:281:15: note: not vectorized: not enough data-refs in basic block.
base.cc:281:15: note: ***** Re-trying analysis with vector size 16
base.cc:281:15: note: === vect_analyze_data_refs ===
base.cc:281:15: note: got vectype for stmt: _65 = MEM[(const struct pair &)SR.261_128 + 8].first;
const vector(2) long int
base.cc:281:15: note: not vectorized: no vectype for stmt: *_97 = MEM[(const struct pair &)SR.261_128 + 8].second;
 scalar_type: const struct complex
base.cc:281:15: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:261:3: note: ===vect_slp_analyze_bb===
base.cc:261:3: note: === vect_analyze_data_refs ===
base.cc:261:3: note: not vectorized: not enough data-refs in basic block.
base.cc:259:6: note: ===vect_slp_analyze_bb===
base.cc:259:6: note: === vect_analyze_data_refs ===
base.cc:259:6: note: not vectorized: not enough data-refs in basic block.
base.cc:274:42: note: ===vect_slp_analyze_bb===
base.cc:274:42: note: === vect_analyze_data_refs ===
base.cc:274:42: note: not vectorized: not enough data-refs in basic block.
base.cc:274:42: note: ===vect_slp_analyze_bb===
base.cc:274:42: note: === vect_analyze_data_refs ===
base.cc:274:42: note: not vectorized: not enough data-refs in basic block.
base.cc:274:55: note: ===vect_slp_analyze_bb===
base.cc:274:55: note: === vect_analyze_data_refs ===
base.cc:274:55: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/uniform_int_dist.h:241
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: === get_loop_niters ===
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: bad loop form.

Analyzing loop at /usr/include/c++/5/bits/uniform_int_dist.h:264
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: ===== analyze_loop_nest_1 =====
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: === get_loop_niters ===
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: bad inner-loop form.
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: not vectorized: Bad inner loop.
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: bad loop form.

Analyzing loop at /usr/include/c++/5/bits/uniform_int_dist.h:241
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: === get_loop_niters ===
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: bad loop form.
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: vectorized 0 loops in function.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _37 = MEM[(long int *)__param_6(D) + 8B];
const vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _38 = MEM[(long int *)__param_6(D)];
const vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving MEM[(long int *)__param_6(D)] and MEM[(long int *)__param_6(D) + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving of size 2
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: can't force alignment of ref: MEM[(long int *)__param_6(D) + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: can't force alignment of ref: MEM[(long int *)__param_6(D)]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _37 = MEM[(long int *)__param_6(D) + 8B];
const vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _38 = MEM[(long int *)__param_6(D)];
const vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving MEM[(long int *)__param_6(D)] and MEM[(long int *)__param_6(D) + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving of size 2
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: can't force alignment of ref: MEM[(long int *)__param_6(D) + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: can't force alignment of ref: MEM[(long int *)__param_6(D)]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:246:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:246:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:246:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:235:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:235:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:235:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:267:3: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:267:3: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:267:3: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:217:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: got vectype for stmt: _39 = MEM[(long int *)__param_6(D)];
const vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: got vectype for stmt: _39 = MEM[(long int *)__param_6(D)];
const vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/uniform_int_dist.h:241
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: === get_loop_niters ===
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/uniform_int_dist.h:241:6: note: bad loop form.

Analyzing loop at /usr/include/c++/5/bits/uniform_int_dist.h:264
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: === get_loop_niters ===
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/uniform_int_dist.h:264:6: note: bad loop form.
base.cc:61:5: note: vectorized 0 loops in function.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _4 = MEM[(long int *)&uid + 8B];
const vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _6 = MEM[(long int *)&uid];
const vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving MEM[(long int *)&uid] and MEM[(long int *)&uid + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving of size 2
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: force alignment of MEM[(long int *)&uid + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: misalign = 8 bytes of ref MEM[(long int *)&uid + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: force alignment of MEM[(long int *)&uid]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: misalign = 0 bytes of ref MEM[(long int *)&uid]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _4 = MEM[(long int *)&uid + 8B];
const vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: got vectype for stmt: _6 = MEM[(long int *)&uid];
const vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving MEM[(long int *)&uid] and MEM[(long int *)&uid + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Detected interleaving of size 2
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: misalign = 8 bytes of ref MEM[(long int *)&uid + 8B]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: misalign = 0 bytes of ref MEM[(long int *)&uid]
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:231:50: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:238:44: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:242:8: note: not vectorized: not enough data-refs in basic block.
base.cc:61:5: note: ===vect_slp_analyze_bb===
base.cc:61:5: note: === vect_analyze_data_refs ===
base.cc:61:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:244:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:246:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:246:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:246:7: note: not vectorized: not enough data-refs in basic block.
base.cc:61:5: note: ===vect_slp_analyze_bb===
base.cc:61:5: note: === vect_analyze_data_refs ===
base.cc:61:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: got vectype for stmt: D.117144._M_a = 0;
vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: got vectype for stmt: D.117144._M_b = pretmp_48;
vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Detected interleaving D.117144._M_a and D.117144._M_b
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Detected interleaving of size 2
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: force alignment of D.117144._M_a
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: misalign = 0 bytes of ref D.117144._M_a
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: force alignment of D.117144._M_b
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: misalign = 8 bytes of ref D.117144._M_b
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: got vectype for stmt: D.117144._M_a = 0;
vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: got vectype for stmt: D.117144._M_b = pretmp_48;
vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Detected interleaving D.117144._M_a and D.117144._M_b
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Detected interleaving of size 2
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: misalign = 0 bytes of ref D.117144._M_a
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: misalign = 8 bytes of ref D.117144._M_b
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Build SLP for D.117144._M_a = 0;

/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Build SLP for D.117144._M_b = pretmp_48;

/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Build SLP failed: different operation in stmt D.117144._M_b = pretmp_48;

/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:77:23: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:61:5: note: ===vect_slp_analyze_bb===
base.cc:61:5: note: === vect_analyze_data_refs ===
base.cc:61:5: note: not vectorized: not enough data-refs in basic block.
base.cc:61:5: note: ===vect_slp_analyze_bb===
base.cc:61:5: note: === vect_analyze_data_refs ===
base.cc:61:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:274:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: got vectype for stmt: _25 = MEM[(long int *)&uid];
const vector(4) long int
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: got vectype for stmt: _25 = MEM[(long int *)&uid];
const vector(2) long int
/usr/include/c++/5/bits/uniform_int_dist.h:276:27: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:38
base.cc:38:12: note: ===== analyze_loop_nest =====
base.cc:38:12: note: === vect_analyze_loop_form ===
base.cc:38:12: note: not vectorized: control flow in loop.
base.cc:38:12: note: bad loop form.
base.cc:330:1: note: vectorized 0 loops in function.
base.cc:331:17: note: ===vect_slp_analyze_bb===
base.cc:331:17: note: === vect_analyze_data_refs ===
base.cc:331:17: note: not vectorized: not enough data-refs in basic block.
base.cc:330:1: note: ===vect_slp_analyze_bb===
base.cc:330:1: note: === vect_analyze_data_refs ===
base.cc:330:1: note: not vectorized: not enough data-refs in basic block.
base.cc:39:11: note: ===vect_slp_analyze_bb===
base.cc:39:11: note: === vect_analyze_data_refs ===
base.cc:39:11: note: not vectorized: not enough data-refs in basic block.
base.cc:40:14: note: ===vect_slp_analyze_bb===
base.cc:40:14: note: === vect_analyze_data_refs ===
base.cc:40:14: note: not vectorized: not enough data-refs in basic block.
base.cc:42:12: note: ===vect_slp_analyze_bb===
base.cc:42:12: note: === vect_analyze_data_refs ===
base.cc:42:12: note: not vectorized: not enough data-refs in basic block.
base.cc:330:1: note: ===vect_slp_analyze_bb===
base.cc:330:1: note: === vect_analyze_data_refs ===
base.cc:330:1: note: not vectorized: not enough data-refs in basic block.
base.cc:330:1: note: ===vect_slp_analyze_bb===
base.cc:330:1: note: === vect_analyze_data_refs ===
base.cc:330:1: note: not vectorized: not enough data-refs in basic block.
base.cc:334:23: note: ===vect_slp_analyze_bb===
base.cc:334:23: note: === vect_analyze_data_refs ===
base.cc:334:23: note: got vectype for stmt: this_8(D)->a_inv = r_37;
vector(4) long int
base.cc:334:23: note: not vectorized: not enough data-refs in basic block.
base.cc:334:23: note: ***** Re-trying analysis with vector size 16
base.cc:334:23: note: === vect_analyze_data_refs ===
base.cc:334:23: note: got vectype for stmt: this_8(D)->a_inv = r_37;
vector(2) long int
base.cc:334:23: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/hashtable.h:1978
/usr/include/c++/5/bits/hashtable.h:1978:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/hashtable.h:1978:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/hashtable.h:1978:7: note: not vectorized: control flow in loop.
/usr/include/c++/5/bits/hashtable.h:1978:7: note: bad loop form.
/usr/include/c++/5/bits/hashtable.h:1586:5: note: vectorized 0 loops in function.
/usr/include/c++/5/bits/hashtable.h:1594:72: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: got vectype for stmt: _5 = this_3(D)->_M_element_count;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1594:72: note: got vectype for stmt: _6 = this_3(D)->_M_bucket_count;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: Detected interleaving this_3(D)->_M_bucket_count and this_3(D)->_M_element_count
/usr/include/c++/5/bits/hashtable.h:1594:72: note: Detected interleaving of size 2
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable.h:1594:72: note: can't force alignment of ref: this_3(D)->_M_element_count
/usr/include/c++/5/bits/hashtable.h:1594:72: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable.h:1594:72: note: can't force alignment of ref: this_3(D)->_M_bucket_count
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1594:72: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1594:72: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: got vectype for stmt: _5 = this_3(D)->_M_element_count;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1594:72: note: got vectype for stmt: _6 = this_3(D)->_M_bucket_count;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: Detected interleaving this_3(D)->_M_bucket_count and this_3(D)->_M_element_count
/usr/include/c++/5/bits/hashtable.h:1594:72: note: Detected interleaving of size 2
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable.h:1594:72: note: can't force alignment of ref: this_3(D)->_M_element_count
/usr/include/c++/5/bits/hashtable.h:1594:72: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable.h:1594:72: note: can't force alignment of ref: this_3(D)->_M_bucket_count
/usr/include/c++/5/bits/hashtable.h:1594:72: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1594:72: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1594:72: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1586:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: got vectype for stmt: pretmp_48 = this_3(D)->_M_buckets;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1586:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1586:5: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1586:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: got vectype for stmt: pretmp_48 = this_3(D)->_M_buckets;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1586:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1600:17: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1600:17: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1600:17: note: got vectype for stmt: _11 = __do_rehash.second;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1600:17: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1600:17: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1600:17: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1600:17: note: got vectype for stmt: _11 = __do_rehash.second;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1600:17: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:343:6: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:343:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:343:6: note: got vectype for stmt: this_3(D)->_M_single_bucket = 0B;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:343:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:343:6: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:343:6: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:343:6: note: got vectype for stmt: this_3(D)->_M_single_bucket = 0B;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:343:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:101:2: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:101:2: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:101:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:102:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:102:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:102:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:104:41: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:104:41: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:104:41: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1976:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: got vectype for stmt: __p_28 = MEM[(struct _Hash_node_base * *)this_3(D) + 16B];
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1976:7: note: got vectype for stmt: this_3(D)->_M_before_begin._M_nxt = 0B;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: not consecutive access __p_28 = MEM[(struct _Hash_node_base * *)this_3(D) + 16B];

/usr/include/c++/5/bits/hashtable.h:1976:7: note: not consecutive access this_3(D)->_M_before_begin._M_nxt = 0B;

/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1976:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1976:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: got vectype for stmt: __p_28 = MEM[(struct _Hash_node_base * *)this_3(D) + 16B];
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1976:7: note: got vectype for stmt: this_3(D)->_M_before_begin._M_nxt = 0B;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: not consecutive access __p_28 = MEM[(struct _Hash_node_base * *)this_3(D) + 16B];

/usr/include/c++/5/bits/hashtable.h:1976:7: note: not consecutive access this_3(D)->_M_before_begin._M_nxt = 0B;

/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1976:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1976:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1978:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1978:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1978:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1586:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1586:5: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1586:5: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: __p_30 = MEM[(struct _Hash_node_base * *)__p_99];
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _31 = MEM[(const type &)__p_99 + 8];
const vector(4) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _37 = *_36;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _37 = *_36;

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access __p_30 = MEM[(struct _Hash_node_base * *)__p_99];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _31 = MEM[(const type &)__p_99 + 8];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: vect_is_simple_use: operand __bbegin_bkt_33
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: def_stmt: __bbegin_bkt_33 = _32 % _11;
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: type of def: 3.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: __p_30 = MEM[(struct _Hash_node_base * *)__p_99];
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _31 = MEM[(const type &)__p_99 + 8];
const vector(2) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _37 = *_36;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _37 = *_36;

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access __p_30 = MEM[(struct _Hash_node_base * *)__p_99];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _31 = MEM[(const type &)__p_99 + 8];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: vect_is_simple_use: operand __bbegin_bkt_33
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: def_stmt: __bbegin_bkt_33 = _32 % _11;
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: type of def: 3.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1984:20: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: _38 = this_3(D)->_M_before_begin._M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: __p_99->D.104957.D.104918._M_nxt = _38;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: this_3(D)->_M_before_begin._M_nxt = __p_99;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: *_36 = _39;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: _40 = __p_99->D.104957.D.104918._M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access *_36 = _39;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access _40 = __p_99->D.104957.D.104918._M_nxt;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access __p_99->D.104957.D.104918._M_nxt = _38;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access _38 = this_3(D)->_M_before_begin._M_nxt;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access this_3(D)->_M_before_begin._M_nxt = __p_99;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1984:20: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1984:20: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: _38 = this_3(D)->_M_before_begin._M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: __p_99->D.104957.D.104918._M_nxt = _38;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: this_3(D)->_M_before_begin._M_nxt = __p_99;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: *_36 = _39;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: got vectype for stmt: _40 = __p_99->D.104957.D.104918._M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access *_36 = _39;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access _40 = __p_99->D.104957.D.104918._M_nxt;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access __p_99->D.104957.D.104918._M_nxt = _38;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access _38 = this_3(D)->_M_before_begin._M_nxt;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: not consecutive access this_3(D)->_M_before_begin._M_nxt = __p_99;

/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1984:20: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1984:20: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1988:16: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1988:16: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1988:16: note: got vectype for stmt: *_43 = __p_99;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1988:16: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1988:16: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1988:16: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1988:16: note: got vectype for stmt: *_43 = __p_99;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1988:16: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1993:20: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: _44 = _37->_M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: __p_99->D.104957.D.104918._M_nxt = _44;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: _45 = *_36;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: _45->_M_nxt = __p_99;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access _45 = *_36;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access _44 = _37->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access _45->_M_nxt = __p_99;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access __p_99->D.104957.D.104918._M_nxt = _44;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1993:20: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1993:20: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: _44 = _37->_M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: __p_99->D.104957.D.104918._M_nxt = _44;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: _45 = *_36;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: got vectype for stmt: _45->_M_nxt = __p_99;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access _45 = *_36;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access _44 = _37->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access _45->_M_nxt = __p_99;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: not consecutive access __p_99->D.104957.D.104918._M_nxt = _44;

/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1993:20: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1993:20: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:361:30: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:361:30: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:361:30: note: got vectype for stmt: _46 = this_3(D)->_M_buckets;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:361:30: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:361:30: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:361:30: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:361:30: note: got vectype for stmt: _46 = this_3(D)->_M_buckets;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:361:30: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:110:9: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:110:9: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:110:9: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:2000:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: got vectype for stmt: this_3(D)->_M_bucket_count = _11;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:2000:7: note: got vectype for stmt: this_3(D)->_M_buckets = _35;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: not consecutive access this_3(D)->_M_buckets = _35;

/usr/include/c++/5/bits/hashtable.h:2000:7: note: not consecutive access this_3(D)->_M_bucket_count = _11;

/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:2000:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:2000:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: got vectype for stmt: this_3(D)->_M_bucket_count = _11;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:2000:7: note: got vectype for stmt: this_3(D)->_M_buckets = _35;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: not consecutive access this_3(D)->_M_buckets = _35;

/usr/include/c++/5/bits/hashtable.h:2000:7: note: not consecutive access this_3(D)->_M_bucket_count = _11;

/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:2000:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:2000:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1452:21: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1452:21: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1452:21: note: got vectype for stmt: _57 = *_56;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1452:21: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1452:21: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1452:21: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1452:21: note: got vectype for stmt: _57 = *_56;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1452:21: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1456:19: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: _58 = _57->_M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: __node_13(D)->D.104957.D.104918._M_nxt = _58;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: _59 = *_56;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: _59->_M_nxt = __node_13(D);
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access _59 = *_56;

/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access _58 = _57->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access _59->_M_nxt = __node_13(D);

/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access __node_13(D)->D.104957.D.104918._M_nxt = _58;

/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1456:19: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1456:19: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: _58 = _57->_M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: __node_13(D)->D.104957.D.104918._M_nxt = _58;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: _59 = *_56;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: got vectype for stmt: _59->_M_nxt = __node_13(D);
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access _59 = *_56;

/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access _58 = _57->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access _59->_M_nxt = __node_13(D);

/usr/include/c++/5/bits/hashtable.h:1456:19: note: not consecutive access __node_13(D)->D.104957.D.104918._M_nxt = _58;

/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1456:19: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1456:19: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1464:19: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: got vectype for stmt: _60 = this_3(D)->_M_before_begin._M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1464:19: note: got vectype for stmt: __node_13(D)->D.104957.D.104918._M_nxt = _60;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1464:19: note: got vectype for stmt: this_3(D)->_M_before_begin._M_nxt = __node_13(D);
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: not consecutive access _60 = this_3(D)->_M_before_begin._M_nxt;

/usr/include/c++/5/bits/hashtable.h:1464:19: note: not consecutive access this_3(D)->_M_before_begin._M_nxt = __node_13(D);

/usr/include/c++/5/bits/hashtable.h:1464:19: note: not consecutive access __node_13(D)->D.104957.D.104918._M_nxt = _60;

/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1464:19: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1464:19: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: got vectype for stmt: _60 = this_3(D)->_M_before_begin._M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1464:19: note: got vectype for stmt: __node_13(D)->D.104957.D.104918._M_nxt = _60;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1464:19: note: got vectype for stmt: this_3(D)->_M_before_begin._M_nxt = __node_13(D);
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: not consecutive access _60 = this_3(D)->_M_before_begin._M_nxt;

/usr/include/c++/5/bits/hashtable.h:1464:19: note: not consecutive access this_3(D)->_M_before_begin._M_nxt = __node_13(D);

/usr/include/c++/5/bits/hashtable.h:1464:19: note: not consecutive access __node_13(D)->D.104957.D.104918._M_nxt = _60;

/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1464:19: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1464:19: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _61 = MEM[(struct _Hash_node_base * *)__node_13(D)];
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _62 = MEM[(long unsigned int *)this_3(D) + 8B];
const vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _63 = MEM[(const type &)_61 + 8];
const vector(4) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: *_67 = __node_13(D);
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access *_67 = __node_13(D);

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _63 = MEM[(const type &)_61 + 8];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _62 = MEM[(long unsigned int *)this_3(D) + 8B];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _61 = MEM[(struct _Hash_node_base * *)__node_13(D)];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: vect_is_simple_use: operand _65
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: def_stmt: _65 = _64 % _62;
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: type of def: 3.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _61 = MEM[(struct _Hash_node_base * *)__node_13(D)];
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _62 = MEM[(long unsigned int *)this_3(D) + 8B];
const vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _63 = MEM[(const type &)_61 + 8];
const vector(2) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: *_67 = __node_13(D);
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access *_67 = __node_13(D);

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _63 = MEM[(const type &)_61 + 8];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _62 = MEM[(long unsigned int *)this_3(D) + 8B];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not consecutive access _61 = MEM[(struct _Hash_node_base * *)__node_13(D)];

/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: vect_is_simple_use: operand _65
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: def_stmt: _65 = _64 % _62;
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: type of def: 3.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1470:14: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: got vectype for stmt: _68 = this_3(D)->_M_buckets;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1470:14: note: got vectype for stmt: *_69 = _70;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: not consecutive access *_69 = _70;

/usr/include/c++/5/bits/hashtable.h:1470:14: note: not consecutive access _68 = this_3(D)->_M_buckets;

/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1470:14: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1470:14: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: got vectype for stmt: _68 = this_3(D)->_M_buckets;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1470:14: note: got vectype for stmt: *_69 = _70;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: not consecutive access *_69 = _70;

/usr/include/c++/5/bits/hashtable.h:1470:14: note: not consecutive access _68 = this_3(D)->_M_buckets;

/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1470:14: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1470:14: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1608:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: got vectype for stmt: _17 = this_3(D)->_M_element_count;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1608:4: note: got vectype for stmt: this_3(D)->_M_element_count = _18;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1608:4: note: got vectype for stmt: MEM[(struct _Node_iterator *)&D.114107] = __node_13(D);
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: not consecutive access MEM[(struct _Node_iterator *)&D.114107] = __node_13(D);

/usr/include/c++/5/bits/hashtable.h:1608:4: note: not consecutive access _17 = this_3(D)->_M_element_count;

/usr/include/c++/5/bits/hashtable.h:1608:4: note: not consecutive access this_3(D)->_M_element_count = _18;

/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1608:4: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1608:4: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: got vectype for stmt: _17 = this_3(D)->_M_element_count;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1608:4: note: got vectype for stmt: this_3(D)->_M_element_count = _18;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1608:4: note: got vectype for stmt: MEM[(struct _Node_iterator *)&D.114107] = __node_13(D);
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: not consecutive access MEM[(struct _Node_iterator *)&D.114107] = __node_13(D);

/usr/include/c++/5/bits/hashtable.h:1608:4: note: not consecutive access _17 = this_3(D)->_M_element_count;

/usr/include/c++/5/bits/hashtable.h:1608:4: note: not consecutive access this_3(D)->_M_element_count = _18;

/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1608:4: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1608:4: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at base.cc:233
base.cc:233:3: note: ===== analyze_loop_nest =====
base.cc:233:3: note: === vect_analyze_loop_form ===
base.cc:233:3: note: not vectorized: multiple nested loops.
base.cc:233:3: note: bad loop form.

Analyzing loop at /usr/include/c++/5/bits/hashtable.h:1433
/usr/include/c++/5/bits/hashtable.h:1433:4: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/hashtable.h:1433:4: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/hashtable.h:1433:4: note: not vectorized: control flow in loop.
/usr/include/c++/5/bits/hashtable.h:1433:4: note: bad loop form.

Analyzing loop at /usr/include/c++/5/bits/hashtable.h:1433
/usr/include/c++/5/bits/hashtable.h:1433:4: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/hashtable.h:1433:4: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/hashtable.h:1433:4: note: not vectorized: control flow in loop.
/usr/include/c++/5/bits/hashtable.h:1433:4: note: bad loop form.

Analyzing loop at /usr/include/c++/5/bits/hashtable_policy.h:1982
/usr/include/c++/5/bits/hashtable_policy.h:1982:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/hashtable_policy.h:1982:7: note: === vect_analyze_loop_form ===
split exit edge.
/usr/include/c++/5/bits/hashtable_policy.h:1982:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/hashtable_policy.h:1982:7: note: not vectorized: number of iterations cannot be computed.
/usr/include/c++/5/bits/hashtable_policy.h:1982:7: note: bad loop form.
base.cc:230:6: note: vectorized 0 loops in function.
/usr/include/c++/5/bits/unordered_map.h:568:9: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/unordered_map.h:568:9: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/unordered_map.h:568:9: note: got vectype for stmt: __n_37 = MEM[(struct _Hash_node_base * *)mm_3(D) + 16B];
vector(4) long unsigned int
/usr/include/c++/5/bits/unordered_map.h:568:9: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/unordered_map.h:568:9: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/unordered_map.h:568:9: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/unordered_map.h:568:9: note: got vectype for stmt: __n_37 = MEM[(struct _Hash_node_base * *)mm_3(D) + 16B];
vector(2) long unsigned int
/usr/include/c++/5/bits/unordered_map.h:568:9: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1915:55: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: got vectype for stmt: _40 = MEM[(struct _Hashtable *)mm_3(D)]._M_bucket_count;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1915:55: note: got vectype for stmt: _42 = MEM[(struct _Hashtable *)mm_3(D)]._M_buckets;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: not consecutive access _42 = MEM[(struct _Hashtable *)mm_3(D)]._M_buckets;

/usr/include/c++/5/bits/hashtable.h:1915:55: note: not consecutive access _40 = MEM[(struct _Hashtable *)mm_3(D)]._M_bucket_count;

/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/hashtable.h:1915:55: note: def_stmt: _40 = MEM[(struct _Hashtable *)mm_3(D)]._M_bucket_count;
/usr/include/c++/5/bits/hashtable.h:1915:55: note: type of def: 3.
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1915:55: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1915:55: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: got vectype for stmt: _40 = MEM[(struct _Hashtable *)mm_3(D)]._M_bucket_count;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1915:55: note: got vectype for stmt: _42 = MEM[(struct _Hashtable *)mm_3(D)]._M_buckets;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: not consecutive access _42 = MEM[(struct _Hashtable *)mm_3(D)]._M_buckets;

/usr/include/c++/5/bits/hashtable.h:1915:55: note: not consecutive access _40 = MEM[(struct _Hashtable *)mm_3(D)]._M_bucket_count;

/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: vect_is_simple_use: operand _40
/usr/include/c++/5/bits/hashtable.h:1915:55: note: def_stmt: _40 = MEM[(struct _Hashtable *)mm_3(D)]._M_bucket_count;
/usr/include/c++/5/bits/hashtable.h:1915:55: note: type of def: 3.
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1915:55: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1915:55: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:230:6: note: ===vect_slp_analyze_bb===
base.cc:230:6: note: === vect_analyze_data_refs ===
base.cc:230:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:110:9: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:110:9: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:110:9: note: got vectype for stmt: __n_39 = MEM[(struct _Hash_node_base * *)__n_103];
vector(4) long unsigned int
/usr/include/c++/5/ext/new_allocator.h:110:9: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:110:9: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/ext/new_allocator.h:110:9: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:110:9: note: got vectype for stmt: __n_39 = MEM[(struct _Hash_node_base * *)__n_103];
vector(2) long unsigned int
/usr/include/c++/5/ext/new_allocator.h:110:9: note: not vectorized: not enough data-refs in basic block.
base.cc:230:6: note: ===vect_slp_analyze_bb===
base.cc:230:6: note: === vect_analyze_data_refs ===
base.cc:230:6: note: not vectorized: not enough data-refs in basic block.
base.cc:230:6: note: ===vect_slp_analyze_bb===
base.cc:230:6: note: === vect_analyze_data_refs ===
base.cc:230:6: note: got vectype for stmt: pretmp_29 = MEM[(long unsigned int *)mm_3(D) + 24B];
const vector(4) long unsigned int
base.cc:230:6: note: not vectorized: not enough data-refs in basic block.
base.cc:230:6: note: ***** Re-trying analysis with vector size 16
base.cc:230:6: note: === vect_analyze_data_refs ===
base.cc:230:6: note: got vectype for stmt: pretmp_29 = MEM[(long unsigned int *)mm_3(D) + 24B];
const vector(2) long unsigned int
base.cc:230:6: note: not vectorized: not enough data-refs in basic block.
base.cc:233:3: note: ===vect_slp_analyze_bb===
base.cc:233:3: note: === vect_analyze_data_refs ===
base.cc:233:3: note: not vectorized: not enough data-refs in basic block.
base.cc:234:27: note: ===vect_slp_analyze_bb===
base.cc:234:27: note: === vect_analyze_data_refs ===
base.cc:234:27: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: __prev_p_52 = __prev_p_51->_M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: pretmp_10 = MEM[(const long int &)__prev_p_52 + 8];
const vector(4) long int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access __prev_p_52 = __prev_p_51->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access pretmp_10 = MEM[(const long int &)__prev_p_52 + 8];

/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: __prev_p_52 = __prev_p_51->_M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: pretmp_10 = MEM[(const long int &)__prev_p_52 + 8];
const vector(2) long int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access __prev_p_52 = __prev_p_51->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access pretmp_10 = MEM[(const long int &)__prev_p_52 + 8];

/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1433:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1433:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1433:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1436:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1436:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1436:8: note: got vectype for stmt: __prev_p_56 = MEM[(struct __node_type *)__prev_p_54].D.104957.D.104918._M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1436:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1436:8: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1436:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1436:8: note: got vectype for stmt: __prev_p_56 = MEM[(struct __node_type *)__prev_p_54].D.104957.D.104918._M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1436:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _58 = MEM[(const type &)__prev_p_56 + 8];
const vector(4) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _58 = MEM[(const type &)__prev_p_56 + 8];
const vector(2) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: not enough data-refs in basic block.
base.cc:230:6: note: ===vect_slp_analyze_bb===
base.cc:230:6: note: === vect_analyze_data_refs ===
base.cc:230:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1308:40: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1308:40: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1308:40: note: not vectorized: not enough data-refs in basic block.
base.cc:238:46: note: ===vect_slp_analyze_bb===
base.cc:238:46: note: === vect_analyze_data_refs ===
base.cc:238:46: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: __prev_p_88 = __prev_p_87->_M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: pretmp_33 = MEM[(const long int &)__prev_p_88 + 8];
const vector(4) long int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access __prev_p_88 = __prev_p_87->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access pretmp_33 = MEM[(const long int &)__prev_p_88 + 8];

/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: __prev_p_88 = __prev_p_87->_M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: got vectype for stmt: pretmp_33 = MEM[(const long int &)__prev_p_88 + 8];
const vector(2) long int
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access __prev_p_88 = __prev_p_87->_M_nxt;

/usr/include/c++/5/bits/hashtable.h:1430:73: note: not consecutive access pretmp_33 = MEM[(const long int &)__prev_p_88 + 8];

/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable.h:1430:73: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable.h:1430:73: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable.h:1433:4: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1433:4: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1433:4: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1436:8: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable.h:1436:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1436:8: note: got vectype for stmt: __prev_p_92 = MEM[(struct __node_type *)__prev_p_90].D.104957.D.104918._M_nxt;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1436:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable.h:1436:8: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable.h:1436:8: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable.h:1436:8: note: got vectype for stmt: __prev_p_92 = MEM[(struct __node_type *)__prev_p_90].D.104957.D.104918._M_nxt;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable.h:1436:8: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _94 = MEM[(const type &)__prev_p_92 + 8];
const vector(4) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: got vectype for stmt: _94 = MEM[(const type &)__prev_p_92 + 8];
const vector(2) long int
/usr/include/c++/5/bits/hashtable_policy.h:1180:23: note: not vectorized: not enough data-refs in basic block.
base.cc:230:6: note: ===vect_slp_analyze_bb===
base.cc:230:6: note: === vect_analyze_data_refs ===
base.cc:230:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:595:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:595:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:595:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:104:60: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:104:60: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:104:60: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: MEM[(struct _Hash_node_base *)_46]._M_nxt = 0B;
vector(4) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: MEM[(struct pair *)_46 + 8B].first = _27;
const vector(4) long int
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;
vector(4) double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;
vector(4) double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value>
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: not consecutive access MEM[(struct _Hash_node_base *)_46]._M_nxt = 0B;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: not consecutive access MEM[(struct pair *)_46 + 8B].first = _27;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Detected interleaving of size 2
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: can't force alignment of ref: REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value>
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value>
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: MEM[(struct _Hash_node_base *)_46]._M_nxt = 0B;
vector(2) long unsigned int
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: MEM[(struct pair *)_46 + 8B].first = _27;
const vector(2) long int
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;
vector(2) double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: got vectype for stmt: IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;
vector(2) double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Detected interleaving REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> and IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value>
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: not consecutive access MEM[(struct _Hash_node_base *)_46]._M_nxt = 0B;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: not consecutive access MEM[(struct pair *)_46 + 8B].first = _27;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Detected interleaving of size 2
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: can't force alignment of ref: REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value>
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: can't force alignment of ref: IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value>
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Build SLP for REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Build SLP for IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_is_simple_use: operand 0.0
node 
	stmt 0 REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;

	stmt 1 IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;

/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: === vect_slp_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Vectorizing an unaligned access.
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: ==> examining statement: REALPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: get vectype for scalar type:  double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vectype:  vector(2) double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: ==> examining statement: IMAGPART_EXPR <MEM[(struct complex *)_46 + 16B]._M_value> = 0.0;
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: get vectype for scalar type:  double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vectype:  vector(2) double
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 2
/usr/include/c++/5/bits/hashtable_policy.h:231:41: note: not vectorized: vectorization is not profitable.
/usr/include/c++/5/bits/hashtable_policy.h:603:26: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/hashtable_policy.h:603:26: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/hashtable_policy.h:603:26: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/complex:1282:17: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/complex:1282:17: note: === vect_analyze_data_refs ===
/usr/include/c++/5/complex:1282:17: note: not vectorized: no vectype for stmt: MEM[(struct mapped_type *)_77] = coef$_M_value_38;
 scalar_type: _ComplexT
/usr/include/c++/5/complex:1282:17: note: not vectorized: not enough data-refs in basic block.
base.cc:242:1: note: ===vect_slp_analyze_bb===
base.cc:242:1: note: === vect_analyze_data_refs ===
base.cc:242:1: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/ext/new_allocator.h:104:60: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/ext/new_allocator.h:104:60: note: === vect_analyze_data_refs ===
/usr/include/c++/5/ext/new_allocator.h:104:60: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/c++/5/bits/random.tcc:334
/usr/include/c++/5/bits/random.tcc:334:7: note: ===== analyze_loop_nest =====
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: __x_5 = rng._M_x[_4];
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: rng._M_x[__i_26] = __res_11;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: .MEM_25 = PHI <.MEM_16(4), .MEM_15(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: __i_26 = PHI <__i_12(4), 1(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {1, +, 1}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 1,  init: 1
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: ivtmp_28 = PHI <ivtmp_29(4), 623(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {623, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 18446744073709551615,  init: 623
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_7
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? .MEM_25 = PHI <.MEM_16(4), .MEM_15(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? ivtmp_28 = PHI <ivtmp_29(4), 623(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _4 = __i_26 + 18446744073709551615;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _6 = __x_5 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_8 = __x_7 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __res_11 = __x_10 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? rng._M_x[__i_26] = __res_11;
/usr/include/c++/5/bits/random.tcc:334:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __i_12 = __i_26 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? ivtmp_29 = ivtmp_28 - 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? if (ivtmp_29 == 0)
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: rng._M_x[__i_26] = __res_11;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __res_11
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __res_11 = __x_10 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __res_11 = __x_10 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_8
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_8 = __x_7 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_26
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_12
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_12 = __i_26 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_12 = __i_26 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_26
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_8 = __x_7 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_7
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_5
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand _6
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: _6 = __x_5 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: _6 = __x_5 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_5
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:334:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:334:7: note: not vectorized, possible dependence between data-refs rng._M_x[_4] and rng._M_x[__i_26]
/usr/include/c++/5/bits/random.tcc:334:7: note: bad data dependence.
/usr/include/c++/5/bits/random.tcc:334:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_loop_form ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === get_loop_niters ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: __x_5 = rng._M_x[_4];
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: got vectype for stmt: rng._M_x[__i_26] = __res_11;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_scalar_cycles ===
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: .MEM_25 = PHI <.MEM_16(4), .MEM_15(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: __i_26 = PHI <__i_12(4), 1(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {1, +, 1}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 1,  init: 1
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: Analyze phi: ivtmp_28 = PHI <ivtmp_29(4), 623(2)>

/usr/include/c++/5/bits/random.tcc:334:7: note: Access function of PHI: {623, +, 18446744073709551615}_1
/usr/include/c++/5/bits/random.tcc:334:7: note: step: 18446744073709551615,  init: 623
/usr/include/c++/5/bits/random.tcc:334:7: note: Detected induction.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_7
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? .MEM_25 = PHI <.MEM_16(4), .MEM_15(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: phi relevant? ivtmp_28 = PHI <ivtmp_29(4), 623(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _4 = __i_26 + 18446744073709551615;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? _6 = __x_5 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_8 = __x_7 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __res_11 = __x_10 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? rng._M_x[__i_26] = __res_11;
/usr/include/c++/5/bits/random.tcc:334:7: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? __i_12 = __i_26 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? ivtmp_29 = ivtmp_28 - 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: init: stmt relevant? if (ivtmp_29 == 0)
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: rng._M_x[__i_26] = __res_11;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __res_11
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __res_11 = __x_10 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __res_11 = __x_10 & 4294967295;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_10
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_10 = __x_8 + __i_26;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_8
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_8 = __x_7 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_26
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_12
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_12 = __i_26 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand 1
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __i_12 = __i_26 + 1;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __i_26
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __i_26 = PHI <__i_12(4), 1(2)>
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 4.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_8 = __x_7 * 1812433253;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_7
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_7 = __x_5 ^ _6;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_5
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand _6
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: _6 = __x_5 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: _6 = __x_5 >> 30;
/usr/include/c++/5/bits/random.tcc:334:7: note: vect_is_simple_use: operand __x_5
/usr/include/c++/5/bits/random.tcc:334:7: note: def_stmt: __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: type of def: 3.
/usr/include/c++/5/bits/random.tcc:334:7: note: mark relevant 4, live 0.
/usr/include/c++/5/bits/random.tcc:334:7: note: already marked relevant/live.
/usr/include/c++/5/bits/random.tcc:334:7: note: worklist: examine stmt: __x_5 = rng._M_x[_4];
/usr/include/c++/5/bits/random.tcc:334:7: note: === vect_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:334:7: note: dependence distance  = 1.
/usr/include/c++/5/bits/random.tcc:334:7: note: not vectorized, possible dependence between data-refs rng._M_x[_4] and rng._M_x[__i_26]
/usr/include/c++/5/bits/random.tcc:334:7: note: bad data dependence.
base.cc:344:1: note: vectorized 0 loops in function.
/usr/include/c++/5/iostream:74:25: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/iostream:74:25: note: === vect_analyze_data_refs ===
/usr/include/c++/5/iostream:74:25: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:336:24: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:336:24: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:336:24: note: got vectype for stmt: rng._M_x[__i_26] = __res_11;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:336:24: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:336:24: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:336:24: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:336:24: note: got vectype for stmt: rng._M_x[__i_26] = __res_11;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:336:24: note: not vectorized: not enough data-refs in basic block.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: ===vect_slp_analyze_bb===
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: rng._M_p = 624;
vector(4) long unsigned int
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&uid]._M_a = 0;
vector(4) long int
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&uid]._M_b = 9223372036854775807;
vector(4) long int
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&nd]._M_mean = 0.0;
vector(4) double
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&nd]._M_stddev = 1.0e+0;
vector(4) double
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: nd._M_saved_available = 0;
vector(32) unsigned char
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving MEM[(struct param_type *)&uid]._M_a and MEM[(struct param_type *)&uid]._M_b
/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving MEM[(struct param_type *)&nd]._M_mean and MEM[(struct param_type *)&nd]._M_stddev
/usr/include/c++/5/bits/random.tcc:343:7: note: not consecutive access rng._M_p = 624;

/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:343:7: note: not consecutive access nd._M_saved_available = 0;

/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: force alignment of MEM[(struct param_type *)&uid]._M_a
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 0 bytes of ref MEM[(struct param_type *)&uid]._M_a
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: force alignment of MEM[(struct param_type *)&uid]._M_b
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 8 bytes of ref MEM[(struct param_type *)&uid]._M_b
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 0 bytes of ref MEM[(struct param_type *)&nd]._M_mean
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 8 bytes of ref MEM[(struct param_type *)&nd]._M_stddev
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:343:7: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/c++/5/bits/random.tcc:343:7: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/c++/5/bits/random.tcc:343:7: note: Failed to SLP the basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/c++/5/bits/random.tcc:343:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs ===
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: rng._M_p = 624;
vector(2) long unsigned int
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&uid]._M_a = 0;
vector(2) long int
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&uid]._M_b = 9223372036854775807;
vector(2) long int
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&nd]._M_mean = 0.0;
vector(2) double
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: MEM[(struct param_type *)&nd]._M_stddev = 1.0e+0;
vector(2) double
/usr/include/c++/5/bits/random.tcc:343:7: note: got vectype for stmt: nd._M_saved_available = 0;
vector(16) unsigned char
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving MEM[(struct param_type *)&uid]._M_a and MEM[(struct param_type *)&uid]._M_b
/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving MEM[(struct param_type *)&nd]._M_mean and MEM[(struct param_type *)&nd]._M_stddev
/usr/include/c++/5/bits/random.tcc:343:7: note: not consecutive access rng._M_p = 624;

/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:343:7: note: Detected interleaving of size 2
/usr/include/c++/5/bits/random.tcc:343:7: note: not consecutive access nd._M_saved_available = 0;

/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_pattern_recog ===
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 0 bytes of ref MEM[(struct param_type *)&uid]._M_a
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 8 bytes of ref MEM[(struct param_type *)&uid]._M_b
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 0 bytes of ref MEM[(struct param_type *)&nd]._M_mean
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_compute_data_ref_alignment:
/usr/include/c++/5/bits/random.tcc:343:7: note: misalign = 8 bytes of ref MEM[(struct param_type *)&nd]._M_stddev
/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_analyze_slp ===
/usr/include/c++/5/bits/random.tcc:343:7: note: Build SLP for MEM[(struct param_type *)&uid]._M_a = 0;

/usr/include/c++/5/bits/random.tcc:343:7: note: Build SLP for MEM[(struct param_type *)&uid]._M_b = 9223372036854775807;

/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 9223372036854775807
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_model_store_cost: aligned.
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 0
node 
	stmt 0 MEM[(struct param_type *)&uid]._M_a = 0;

	stmt 1 MEM[(struct param_type *)&uid]._M_b = 9223372036854775807;

/usr/include/c++/5/bits/random.tcc:343:7: note: Build SLP for MEM[(struct param_type *)&nd]._M_mean = 0.0;

/usr/include/c++/5/bits/random.tcc:343:7: note: Build SLP for MEM[(struct param_type *)&nd]._M_stddev = 1.0e+0;

/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 1.0e+0
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_model_store_cost: aligned.
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 0.0
node 
	stmt 0 MEM[(struct param_type *)&nd]._M_mean = 0.0;

	stmt 1 MEM[(struct param_type *)&nd]._M_stddev = 1.0e+0;

/usr/include/c++/5/bits/random.tcc:343:7: note: === vect_slp_analyze_data_ref_dependences ===
/usr/include/c++/5/bits/random.tcc:343:7: note: ==> examining statement: MEM[(struct param_type *)&uid]._M_a = 0;
/usr/include/c++/5/bits/random.tcc:343:7: note: get vectype for scalar type:  long int
/usr/include/c++/5/bits/random.tcc:343:7: note: vectype:  vector(2) long int
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 0
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 9223372036854775807
/usr/include/c++/5/bits/random.tcc:343:7: note: ==> examining statement: MEM[(struct param_type *)&uid]._M_b = 9223372036854775807;
/usr/include/c++/5/bits/random.tcc:343:7: note: get vectype for scalar type:  long int
/usr/include/c++/5/bits/random.tcc:343:7: note: vectype:  vector(2) long int
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 9223372036854775807
/usr/include/c++/5/bits/random.tcc:343:7: note: ==> examining statement: MEM[(struct param_type *)&nd]._M_mean = 0.0;
/usr/include/c++/5/bits/random.tcc:343:7: note: get vectype for scalar type:  double
/usr/include/c++/5/bits/random.tcc:343:7: note: vectype:  vector(2) double
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 0.0
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 1.0e+0
/usr/include/c++/5/bits/random.tcc:343:7: note: ==> examining statement: MEM[(struct param_type *)&nd]._M_stddev = 1.0e+0;
/usr/include/c++/5/bits/random.tcc:343:7: note: get vectype for scalar type:  double
/usr/include/c++/5/bits/random.tcc:343:7: note: vectype:  vector(2) double
/usr/include/c++/5/bits/random.tcc:343:7: note: vect_is_simple_use: operand 1.0e+0
/usr/include/c++/5/bits/random.tcc:343:7: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 2
  Vector epilogue cost: 0
  Scalar cost of basic block: 4
/usr/include/c++/5/bits/random.tcc:343:7: note: not vectorized: vectorization is not profitable.

Analyzing loop at base.cc:106
base.cc:106:17: note: ===== analyze_loop_nest =====
base.cc:106:17: note: === vect_analyze_loop_form ===
base.cc:106:17: note: === get_loop_niters ===
base.cc:106:17: note: not vectorized: number of iterations cannot be computed.
base.cc:106:17: note: bad loop form.
base.cc:104:8: note: vectorized 0 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&x.380] = simd.381_39(D);
 scalar_type: vector(2) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
base.cc:106:17: note: ===vect_slp_analyze_bb===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: got vectype for stmt: x_1 = x.380[iter.383_32];
vector(4) double
base.cc:106:17: note: got vectype for stmt: retval.379[iter.383_32] = _30;
vector(4) double
base.cc:106:17: note: === vect_analyze_data_ref_accesses ===
base.cc:106:17: note: not consecutive access retval.379[iter.383_32] = _30;

base.cc:106:17: note: not consecutive access x_1 = x.380[iter.383_32];

base.cc:106:17: note: === vect_pattern_recog ===
base.cc:106:17: note: vect_is_simple_use: operand _159
base.cc:106:17: note: def_stmt: _159 = _160 & _162;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _160
base.cc:106:17: note: def_stmt: _160 = ~_161;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _161
base.cc:106:17: note: def_stmt: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _162
base.cc:106:17: note: def_stmt: _162 = ~_163;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _163
base.cc:106:17: note: def_stmt: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: additional pattern stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand _164
base.cc:106:17: note: def_stmt: _164 = _165 & _166;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _165
base.cc:106:17: note: def_stmt: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _166
base.cc:106:17: note: def_stmt: _166 = ~_167;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _167
base.cc:106:17: note: def_stmt: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: additional pattern stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand powmult_33
base.cc:106:17: note: def_stmt: powmult_33 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vect_analyze_data_refs_alignment ===
base.cc:106:17: note: === vect_analyze_slp ===
base.cc:106:17: note: Failed to SLP the basic block.
base.cc:106:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:106:17: note: ***** Re-trying analysis with vector size 16
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: got vectype for stmt: x_1 = x.380[iter.383_32];
vector(2) double
base.cc:106:17: note: got vectype for stmt: retval.379[iter.383_32] = _30;
vector(2) double
base.cc:106:17: note: === vect_analyze_data_ref_accesses ===
base.cc:106:17: note: not consecutive access retval.379[iter.383_32] = _30;

base.cc:106:17: note: not consecutive access x_1 = x.380[iter.383_32];

base.cc:106:17: note: === vect_pattern_recog ===
base.cc:106:17: note: vect_is_simple_use: operand _159
base.cc:106:17: note: def_stmt: _159 = _160 & _162;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _160
base.cc:106:17: note: def_stmt: _160 = ~_161;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _161
base.cc:106:17: note: def_stmt: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _162
base.cc:106:17: note: def_stmt: _162 = ~_163;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _163
base.cc:106:17: note: def_stmt: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_153 = patt_156 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: additional pattern stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: vect_is_simple_use: operand _164
base.cc:106:17: note: def_stmt: _164 = _165 & _166;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _165
base.cc:106:17: note: def_stmt: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _166
base.cc:106:17: note: def_stmt: _166 = ~_167;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _167
base.cc:106:17: note: def_stmt: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_150 = patt_149 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: additional pattern stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand powmult_33
base.cc:106:17: note: def_stmt: powmult_33 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vect_analyze_data_refs_alignment ===
base.cc:106:17: note: === vect_analyze_slp ===
base.cc:106:17: note: Failed to SLP the basic block.
base.cc:106:17: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: not vectorized: not enough data-refs in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: not vectorized: no vectype for stmt: _34 = VIEW_CONVERT_EXPR<vector(2) double>(retval.379);
 scalar_type: vector(2) double
base.cc:104:8: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:105
base.cc:105:3: note: ===== analyze_loop_nest =====
base.cc:105:3: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:105:3: note: === get_loop_niters ===
base.cc:105:3: note: not vectorized: number of iterations cannot be computed.
base.cc:105:3: note: bad loop form.
base.cc:104:8: note: vectorized 0 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&x.385] = simd.387_44(D);
 scalar_type: vector(2) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
base.cc:105:3: note: ===vect_slp_analyze_bb===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: not vectorized: not enough data-refs in basic block.
base.cc:106:17: note: ===vect_slp_analyze_bb===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: not vectorized: not enough data-refs in basic block.
base.cc:107:10: note: ===vect_slp_analyze_bb===
base.cc:107:10: note: === vect_analyze_data_refs ===
base.cc:107:10: note: not vectorized: not enough data-refs in basic block.
base.cc:108:16: note: ===vect_slp_analyze_bb===
base.cc:108:16: note: === vect_analyze_data_refs ===
base.cc:108:16: note: not vectorized: not enough data-refs in basic block.
base.cc:110:11: note: ===vect_slp_analyze_bb===
base.cc:110:11: note: === vect_analyze_data_refs ===
base.cc:110:11: note: got vectype for stmt: retval.384[0] = _125;
vector(4) double
base.cc:110:11: note: not vectorized: not enough data-refs in basic block.
base.cc:110:11: note: ***** Re-trying analysis with vector size 16
base.cc:110:11: note: === vect_analyze_data_refs ===
base.cc:110:11: note: got vectype for stmt: retval.384[0] = _125;
vector(2) double
base.cc:110:11: note: not vectorized: not enough data-refs in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: got vectype for stmt: x_171 = x.385[1];
vector(4) double
base.cc:104:8: note: got vectype for stmt: _170 = mask.386[1];
vector(4) double
base.cc:104:8: note: === vect_analyze_data_ref_accesses ===
base.cc:104:8: note: not consecutive access x_171 = x.385[1];

base.cc:104:8: note: not consecutive access _170 = mask.386[1];

base.cc:104:8: note: === vect_pattern_recog ===
base.cc:104:8: note: === vect_analyze_data_refs_alignment ===
base.cc:104:8: note: === vect_analyze_slp ===
base.cc:104:8: note: Failed to SLP the basic block.
base.cc:104:8: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:104:8: note: ***** Re-trying analysis with vector size 16
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: got vectype for stmt: x_171 = x.385[1];
vector(2) double
base.cc:104:8: note: got vectype for stmt: _170 = mask.386[1];
vector(2) double
base.cc:104:8: note: === vect_analyze_data_ref_accesses ===
base.cc:104:8: note: not consecutive access x_171 = x.385[1];

base.cc:104:8: note: not consecutive access _170 = mask.386[1];

base.cc:104:8: note: === vect_pattern_recog ===
base.cc:104:8: note: === vect_analyze_data_refs_alignment ===
base.cc:104:8: note: === vect_analyze_slp ===
base.cc:104:8: note: Failed to SLP the basic block.
base.cc:104:8: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:105:3: note: ===vect_slp_analyze_bb===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: not vectorized: not enough data-refs in basic block.
base.cc:106:17: note: ===vect_slp_analyze_bb===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: not vectorized: not enough data-refs in basic block.
base.cc:107:10: note: ===vect_slp_analyze_bb===
base.cc:107:10: note: === vect_analyze_data_refs ===
base.cc:107:10: note: not vectorized: not enough data-refs in basic block.
base.cc:108:16: note: ===vect_slp_analyze_bb===
base.cc:108:16: note: === vect_analyze_data_refs ===
base.cc:108:16: note: not vectorized: not enough data-refs in basic block.
base.cc:110:11: note: ===vect_slp_analyze_bb===
base.cc:110:11: note: === vect_analyze_data_refs ===
base.cc:110:11: note: got vectype for stmt: retval.384[1] = _146;
vector(4) double
base.cc:110:11: note: not vectorized: not enough data-refs in basic block.
base.cc:110:11: note: ***** Re-trying analysis with vector size 16
base.cc:110:11: note: === vect_analyze_data_refs ===
base.cc:110:11: note: got vectype for stmt: retval.384[1] = _146;
vector(2) double
base.cc:110:11: note: not vectorized: not enough data-refs in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: not vectorized: no vectype for stmt: _36 = VIEW_CONVERT_EXPR<vector(2) double>(retval.384);
 scalar_type: vector(2) double
base.cc:104:8: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:106
base.cc:106:17: note: ===== analyze_loop_nest =====
base.cc:106:17: note: === vect_analyze_loop_form ===
base.cc:106:17: note: === get_loop_niters ===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: got vectype for stmt: x_1 = x.393[iter.396_32];
vector(4) double
base.cc:106:17: note: got vectype for stmt: retval.392[iter.396_32] = _30;
vector(4) double
base.cc:106:17: note: === vect_analyze_scalar_cycles ===
base.cc:106:17: note: Analyze phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: Access function of PHI: {0, +, 1}_1
base.cc:106:17: note: step: 1,  init: 0
base.cc:106:17: note: Detected induction.
base.cc:106:17: note: Analyze phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: Analyze phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:106:17: note: step: 4294967295,  init: 4
base.cc:106:17: note: Detected induction.
base.cc:106:17: note: === vect_pattern_recog ===
base.cc:106:17: note: vect_is_simple_use: operand _159
base.cc:106:17: note: def_stmt: _159 = _160 & _162;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _160
base.cc:106:17: note: def_stmt: _160 = ~_161;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _161
base.cc:106:17: note: def_stmt: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _162
base.cc:106:17: note: def_stmt: _162 = ~_163;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _163
base.cc:106:17: note: def_stmt: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: additional pattern stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand _164
base.cc:106:17: note: def_stmt: _164 = _165 & _166;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _165
base.cc:106:17: note: def_stmt: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _166
base.cc:106:17: note: def_stmt: _166 = ~_167;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _167
base.cc:106:17: note: def_stmt: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: additional pattern stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vect_analyze_data_ref_accesses ===
base.cc:106:17: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:106:17: note: init: phi relevant? iter.396_32 = PHI <0(2), iter.396_33(4)>
base.cc:106:17: note: init: phi relevant? .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>
base.cc:106:17: note: init: phi relevant? ivtmp_169 = PHI <4(2), ivtmp_168(4)>
base.cc:106:17: note: init: stmt relevant? x_1 = x.393[iter.396_32];
base.cc:106:17: note: init: stmt relevant? x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: init: stmt relevant? x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: init: stmt relevant? _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: init: stmt relevant? _166 = ~_167;
base.cc:106:17: note: init: stmt relevant? _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: init: stmt relevant? _164 = _165 & _166;
base.cc:106:17: note: init: stmt relevant? _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: init: stmt relevant? _162 = ~_163;
base.cc:106:17: note: init: stmt relevant? _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: init: stmt relevant? _160 = ~_161;
base.cc:106:17: note: init: stmt relevant? _159 = _160 & _162;
base.cc:106:17: note: init: stmt relevant? _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: init: stmt relevant? _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: init: stmt relevant? x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: init: stmt relevant? x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: init: stmt relevant? powmult_36 = x_5 * x_5;
base.cc:106:17: note: init: stmt relevant? _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: init: stmt relevant? z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: init: stmt relevant? _12 = x_5 * 2.0e+0;
base.cc:106:17: note: init: stmt relevant? _10 = z2_8 * _12;
base.cc:106:17: note: init: stmt relevant? z3_11 = _10 - x_5;
base.cc:106:17: note: init: stmt relevant? _13 = z3_11 * _12;
base.cc:106:17: note: init: stmt relevant? z4_14 = _13 - z2_8;
base.cc:106:17: note: init: stmt relevant? _16 = _12 * z4_14;
base.cc:106:17: note: init: stmt relevant? z5_17 = _16 - z3_11;
base.cc:106:17: note: init: stmt relevant? _19 = _12 * z5_17;
base.cc:106:17: note: init: stmt relevant? z6_20 = _19 - z4_14;
base.cc:106:17: note: init: stmt relevant? _22 = _12 * z6_20;
base.cc:106:17: note: init: stmt relevant? z7_23 = _22 - z5_17;
base.cc:106:17: note: init: stmt relevant? _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: init: stmt relevant? _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: init: stmt relevant? _26 = _24 + _25;
base.cc:106:17: note: init: stmt relevant? _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: init: stmt relevant? _28 = _26 + _27;
base.cc:106:17: note: init: stmt relevant? _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: init: stmt relevant? _30 = _28 + _29;
base.cc:106:17: note: init: stmt relevant? retval.392[iter.396_32] = _30;
base.cc:106:17: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: init: stmt relevant? iter.396_33 = iter.396_32 + 1;
base.cc:106:17: note: init: stmt relevant? ivtmp_168 = ivtmp_169 - 1;
base.cc:106:17: note: init: stmt relevant? if (ivtmp_168 != 0)
base.cc:106:17: note: worklist: examine stmt: retval.392[iter.396_32] = _30;
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _30 = _28 + _29;
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: last stmt in pattern. don't mark relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: last stmt in pattern. don't mark relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: worklist: examine stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand patt_153
base.cc:106:17: note: def_stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_150
base.cc:106:17: note: def_stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: _10 = z2_8 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _16 = _12 * z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _13 = z3_11 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _22 = _12 * z6_20;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _19 = _12 * z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _28 = _26 + _27;
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: === vect_analyze_data_ref_dependences ===
base.cc:106:17: note: === vect_determine_vectorization_factor ===
base.cc:106:17: note: ==> examining phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: ==> examining phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: ==> examining phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: ==> examining statement: x_1 = x.393[iter.396_32];

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_2 = x_1 - 1.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_3 = 5.0e-1 - x_1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _167 = x_1 >= 7.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _166 = ~_167;

base.cc:106:17: note: ==> examining pattern statement: patt_149 = patt_150 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _165 = x_1 >= 2.5e-1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: _164 = _165 & _166;

base.cc:106:17: note: ==> examining pattern statement: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _163 = x_1 >= 7.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _162 = ~_163;

base.cc:106:17: note: ==> examining pattern statement: patt_153 = patt_154 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _161 = x_1 >= 2.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _160 = ~_161;

base.cc:106:17: note: ==> examining pattern statement: patt_155 = patt_156 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _159 = _160 & _162;

base.cc:106:17: note: ==> examining pattern statement: patt_152 = patt_155 & patt_153;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _ifc__157 = _159 ? x_1 : _ifc__158;

base.cc:106:17: note: ==> examining pattern statement: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_4 = _164 ? x_3 : _ifc__157;

base.cc:106:17: note: ==> examining pattern statement: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_5 = x_4 * 4.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: powmult_36 = x_5 * x_5;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _7 = powmult_36 * 2.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z2_8 = _7 - 1.0e+0;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _12 = x_5 * 2.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _10 = z2_8 * _12;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z3_11 = _10 - x_5;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _13 = z3_11 * _12;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z4_14 = _13 - z2_8;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _16 = _12 * z4_14;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z5_17 = _16 - z3_11;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _19 = _12 * z5_17;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z6_20 = _19 - z4_14;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _22 = _12 * z6_20;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z7_23 = _22 - z5_17;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _26 = _24 + _25;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _28 = _26 + _27;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _30 = _28 + _29;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: retval.392[iter.396_32] = _30;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: iter.396_33 = iter.396_32 + 1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: if (ivtmp_168 != 0)

base.cc:106:17: note: skip.
base.cc:106:17: note: vectorization factor = 4
base.cc:106:17: note: === vect_analyze_data_refs_alignment ===
base.cc:106:17: note: vect_compute_data_ref_alignment:
base.cc:106:17: note: force alignment of x.393[iter.396_32]
base.cc:106:17: note: misalign = 0 bytes of ref x.393[iter.396_32]
base.cc:106:17: note: vect_compute_data_ref_alignment:
base.cc:106:17: note: force alignment of retval.392[iter.396_32]
base.cc:106:17: note: misalign = 0 bytes of ref retval.392[iter.396_32]
base.cc:106:17: note: === vect_prune_runtime_alias_test_list ===
base.cc:106:17: note: === vect_enhance_data_refs_alignment ===
base.cc:106:17: note: vect_can_advance_ivs_p:
base.cc:106:17: note: Analyze phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: Analyze phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: virtual phi. skip.
base.cc:106:17: note: Analyze phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: === vect_analyze_slp ===
base.cc:106:17: note: === vect_make_slp_decision ===
base.cc:106:17: note: === vect_detect_hybrid_slp ===
base.cc:106:17: note: === vect_analyze_loop_operations ===
base.cc:106:17: note: examining phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: examining phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: examining phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: ==> examining statement: x_1 = x.393[iter.396_32];
base.cc:106:17: note: num. args = 4 (not unary/binary/ternary op).
base.cc:106:17: note: vect_is_simple_use: operand x.393[iter.396_32]
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_model_load_cost: aligned.
base.cc:106:17: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _166 = ~_167;
base.cc:106:17: note: ==> examining pattern statement: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_150
base.cc:106:17: note: def_stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: _164 = _165 & _166;
base.cc:106:17: note: ==> examining pattern statement: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _162 = ~_163;
base.cc:106:17: note: ==> examining pattern statement: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _160 = ~_161;
base.cc:106:17: note: ==> examining pattern statement: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _159 = _160 & _162;
base.cc:106:17: note: ==> examining pattern statement: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_153
base.cc:106:17: note: def_stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: ==> examining pattern statement: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand patt_152 != 0
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: not vectorized: relevant stmt not supported: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: bad operation or unsupported loop bound.
base.cc:106:17: note: ***** Re-trying analysis with vector size 16
base.cc:106:17: note: === vect_analyze_loop_form ===
base.cc:106:17: note: === get_loop_niters ===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: got vectype for stmt: x_1 = x.393[iter.396_32];
vector(2) double
base.cc:106:17: note: got vectype for stmt: retval.392[iter.396_32] = _30;
vector(2) double
base.cc:106:17: note: === vect_analyze_scalar_cycles ===
base.cc:106:17: note: Analyze phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: Access function of PHI: {0, +, 1}_1
base.cc:106:17: note: step: 1,  init: 0
base.cc:106:17: note: Detected induction.
base.cc:106:17: note: Analyze phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: Analyze phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:106:17: note: step: 4294967295,  init: 4
base.cc:106:17: note: Detected induction.
base.cc:106:17: note: === vect_pattern_recog ===
base.cc:106:17: note: vect_is_simple_use: operand _159
base.cc:106:17: note: def_stmt: _159 = _160 & _162;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _160
base.cc:106:17: note: def_stmt: _160 = ~_161;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _161
base.cc:106:17: note: def_stmt: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _162
base.cc:106:17: note: def_stmt: _162 = ~_163;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _163
base.cc:106:17: note: def_stmt: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_153 = patt_156 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: additional pattern stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: vect_is_simple_use: operand _164
base.cc:106:17: note: def_stmt: _164 = _165 & _166;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _165
base.cc:106:17: note: def_stmt: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _166
base.cc:106:17: note: def_stmt: _166 = ~_167;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _167
base.cc:106:17: note: def_stmt: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_150 = patt_149 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: additional pattern stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vect_analyze_data_ref_accesses ===
base.cc:106:17: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:106:17: note: init: phi relevant? iter.396_32 = PHI <0(2), iter.396_33(4)>
base.cc:106:17: note: init: phi relevant? .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>
base.cc:106:17: note: init: phi relevant? ivtmp_169 = PHI <4(2), ivtmp_168(4)>
base.cc:106:17: note: init: stmt relevant? x_1 = x.393[iter.396_32];
base.cc:106:17: note: init: stmt relevant? x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: init: stmt relevant? x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: init: stmt relevant? _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: init: stmt relevant? _166 = ~_167;
base.cc:106:17: note: init: stmt relevant? _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: init: stmt relevant? _164 = _165 & _166;
base.cc:106:17: note: init: stmt relevant? _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: init: stmt relevant? _162 = ~_163;
base.cc:106:17: note: init: stmt relevant? _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: init: stmt relevant? _160 = ~_161;
base.cc:106:17: note: init: stmt relevant? _159 = _160 & _162;
base.cc:106:17: note: init: stmt relevant? _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: init: stmt relevant? _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: init: stmt relevant? x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: init: stmt relevant? x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: init: stmt relevant? powmult_36 = x_5 * x_5;
base.cc:106:17: note: init: stmt relevant? _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: init: stmt relevant? z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: init: stmt relevant? _12 = x_5 * 2.0e+0;
base.cc:106:17: note: init: stmt relevant? _10 = z2_8 * _12;
base.cc:106:17: note: init: stmt relevant? z3_11 = _10 - x_5;
base.cc:106:17: note: init: stmt relevant? _13 = z3_11 * _12;
base.cc:106:17: note: init: stmt relevant? z4_14 = _13 - z2_8;
base.cc:106:17: note: init: stmt relevant? _16 = _12 * z4_14;
base.cc:106:17: note: init: stmt relevant? z5_17 = _16 - z3_11;
base.cc:106:17: note: init: stmt relevant? _19 = _12 * z5_17;
base.cc:106:17: note: init: stmt relevant? z6_20 = _19 - z4_14;
base.cc:106:17: note: init: stmt relevant? _22 = _12 * z6_20;
base.cc:106:17: note: init: stmt relevant? z7_23 = _22 - z5_17;
base.cc:106:17: note: init: stmt relevant? _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: init: stmt relevant? _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: init: stmt relevant? _26 = _24 + _25;
base.cc:106:17: note: init: stmt relevant? _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: init: stmt relevant? _28 = _26 + _27;
base.cc:106:17: note: init: stmt relevant? _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: init: stmt relevant? _30 = _28 + _29;
base.cc:106:17: note: init: stmt relevant? retval.392[iter.396_32] = _30;
base.cc:106:17: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: init: stmt relevant? iter.396_33 = iter.396_32 + 1;
base.cc:106:17: note: init: stmt relevant? ivtmp_168 = ivtmp_169 - 1;
base.cc:106:17: note: init: stmt relevant? if (ivtmp_168 != 0)
base.cc:106:17: note: worklist: examine stmt: retval.392[iter.396_32] = _30;
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _30 = _28 + _29;
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: last stmt in pattern. don't mark relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_150 = patt_149 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: last stmt in pattern. don't mark relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_153 = patt_156 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: worklist: examine stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: vect_is_simple_use: operand patt_151
base.cc:106:17: note: def_stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_147
base.cc:106:17: note: def_stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: _10 = z2_8 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _16 = _12 * z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _13 = z3_11 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _22 = _12 * z6_20;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _19 = _12 * z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _28 = _26 + _27;
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: === vect_analyze_data_ref_dependences ===
base.cc:106:17: note: === vect_determine_vectorization_factor ===
base.cc:106:17: note: ==> examining phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: ==> examining phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: ==> examining phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: ==> examining statement: x_1 = x.393[iter.396_32];

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: x_2 = x_1 - 1.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: x_3 = 5.0e-1 - x_1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _167 = x_1 >= 7.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _166 = ~_167;

base.cc:106:17: note: ==> examining pattern statement: patt_148 = patt_154 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _165 = x_1 >= 2.5e-1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: _164 = _165 & _166;

base.cc:106:17: note: ==> examining pattern statement: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _163 = x_1 >= 7.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _162 = ~_163;

base.cc:106:17: note: ==> examining pattern statement: patt_155 = patt_152 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _161 = x_1 >= 2.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _160 = ~_161;

base.cc:106:17: note: ==> examining pattern statement: patt_151 = patt_147 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _159 = _160 & _162;

base.cc:106:17: note: ==> examining pattern statement: patt_156 = patt_151 & patt_155;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(2) unsigned long
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _ifc__157 = _159 ? x_1 : _ifc__158;

base.cc:106:17: note: ==> examining pattern statement: patt_153 = patt_156 != 0 ? x_1 : _ifc__158;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: x_4 = _164 ? x_3 : _ifc__157;

base.cc:106:17: note: ==> examining pattern statement: patt_150 = patt_149 != 0 ? x_3 : _ifc__157;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: x_5 = x_4 * 4.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: powmult_36 = x_5 * x_5;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _7 = powmult_36 * 2.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: z2_8 = _7 - 1.0e+0;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _12 = x_5 * 2.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _10 = z2_8 * _12;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: z3_11 = _10 - x_5;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _13 = z3_11 * _12;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: z4_14 = _13 - z2_8;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _16 = _12 * z4_14;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: z5_17 = _16 - z3_11;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _19 = _12 * z5_17;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: z6_20 = _19 - z4_14;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _22 = _12 * z6_20;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: z7_23 = _22 - z5_17;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _26 = _24 + _25;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _28 = _26 + _27;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: _30 = _28 + _29;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: retval.392[iter.396_32] = _30;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(2) double
base.cc:106:17: note: nunits = 2
base.cc:106:17: note: ==> examining statement: iter.396_33 = iter.396_32 + 1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: if (ivtmp_168 != 0)

base.cc:106:17: note: skip.
base.cc:106:17: note: vectorization factor = 2
base.cc:106:17: note: === vect_analyze_data_refs_alignment ===
base.cc:106:17: note: vect_compute_data_ref_alignment:
base.cc:106:17: note: force alignment of x.393[iter.396_32]
base.cc:106:17: note: misalign = 0 bytes of ref x.393[iter.396_32]
base.cc:106:17: note: vect_compute_data_ref_alignment:
base.cc:106:17: note: force alignment of retval.392[iter.396_32]
base.cc:106:17: note: misalign = 0 bytes of ref retval.392[iter.396_32]
base.cc:106:17: note: === vect_prune_runtime_alias_test_list ===
base.cc:106:17: note: === vect_enhance_data_refs_alignment ===
base.cc:106:17: note: vect_can_advance_ivs_p:
base.cc:106:17: note: Analyze phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: Analyze phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: virtual phi. skip.
base.cc:106:17: note: Analyze phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: === vect_analyze_slp ===
base.cc:106:17: note: === vect_make_slp_decision ===
base.cc:106:17: note: === vect_detect_hybrid_slp ===
base.cc:106:17: note: === vect_analyze_loop_operations ===
base.cc:106:17: note: examining phi: iter.396_32 = PHI <0(2), iter.396_33(4)>

base.cc:106:17: note: examining phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: examining phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: ==> examining statement: x_1 = x.393[iter.396_32];
base.cc:106:17: note: num. args = 4 (not unary/binary/ternary op).
base.cc:106:17: note: vect_is_simple_use: operand x.393[iter.396_32]
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_model_load_cost: aligned.
base.cc:106:17: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _166 = ~_167;
base.cc:106:17: note: ==> examining pattern statement: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: _164 = _165 & _166;
base.cc:106:17: note: ==> examining pattern statement: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _162 = ~_163;
base.cc:106:17: note: ==> examining pattern statement: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _160 = ~_161;
base.cc:106:17: note: ==> examining pattern statement: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_147
base.cc:106:17: note: def_stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _159 = _160 & _162;
base.cc:106:17: note: ==> examining pattern statement: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: vect_is_simple_use: operand patt_151
base.cc:106:17: note: def_stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: ==> examining pattern statement: patt_153 = patt_156 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand patt_156 != 0
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: ==> examining pattern statement: patt_150 = patt_149 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_is_simple_use: operand patt_149 != 0
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _10 = z2_8 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z3_11 = _10 - x_5;
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _13 = z3_11 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z4_14 = _13 - z2_8;
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _16 = _12 * z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _19 = _12 * z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z6_20 = _19 - z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _22 = _12 * z6_20;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _26 = _24 + _25;
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _28 = _26 + _27;
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _30 = _28 + _29;
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: retval.392[iter.396_32] = _30;
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_model_store_cost: aligned.
base.cc:106:17: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: iter.396_33 = iter.396_32 + 1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: if (ivtmp_168 != 0)
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: vectorization_factor = 2, niters = 4
base.cc:106:17: note: === vect_update_slp_costs_according_to_vf ===
base.cc:106:17: note: cost model disabled.
base.cc:106:17: note: loop vectorized
base.cc:106:17: note: === vec_transform_loop ===
base.cc:106:17: note: ------>vectorizing phi: iter.396_32 = PHI <0(6), iter.396_33(4)>

base.cc:106:17: note: ------>vectorizing phi: .MEM_35 = PHI <.MEM_37(6), .MEM_38(4)>

base.cc:106:17: note: ------>vectorizing phi: ivtmp_169 = PHI <4(6), ivtmp_168(4)>

base.cc:106:17: note: ------>vectorizing statement: x_1 = x.393[iter.396_32];

base.cc:106:17: note: transform statement.
base.cc:106:17: note: transform load. ncopies = 1
base.cc:106:17: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: x.393
base.cc:106:17: note: created vectp_x.755_146
base.cc:106:17: note: add new stmt: vect_x_1.756_143 = MEM[(double *)vectp_x.754_145];
base.cc:106:17: note: ------>vectorizing statement: x_2 = x_1 - 1.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.758_142 = { 1.0e+0, 1.0e+0 };
base.cc:106:17: note: add new stmt: vect_x_2.757_141 = vect_x_1.756_143 - vect_cst_.758_142;
base.cc:106:17: note: ------>vectorizing statement: x_3 = 5.0e-1 - x_1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.760_140 = { 5.0e-1, 5.0e-1 };
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: add new stmt: vect_x_3.759_139 = vect_cst_.760_140 - vect_x_1.756_143;
base.cc:106:17: note: ------>vectorizing statement: _167 = x_1 >= 7.5e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.762_138 = { 7.5e-1, 7.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.763_137 = { 1, 1 };
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.764_136 = { 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_154.761_135 = VEC_COND_EXPR <vect_x_1.756_143 >= vect_cst_.762_138, vect_cst_.763_137, vect_cst_.764_136>;
base.cc:106:17: note: ------>vectorizing statement: _166 = ~_167;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_154
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_154
  def_stmt =  patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.766_134 = { 1, 1 };
base.cc:106:17: note: add new stmt: vect_patt_148.765_133 = vect_patt_154.761_135 ^ vect_cst_.766_134;
base.cc:106:17: note: ------>vectorizing statement: _165 = x_1 >= 2.5e-1;

base.cc:106:17: note: ------>vectorizing statement: _164 = _165 & _166;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.768_132 = { 2.5e-1, 2.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_148
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_148
  def_stmt =  patt_148 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.769_131 = { 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_149.767_130 = VEC_COND_EXPR <vect_x_1.756_143 >= vect_cst_.768_132, vect_patt_148.765_133, vect_cst_.769_131>;
base.cc:106:17: note: ------>vectorizing statement: _163 = x_1 >= 7.5e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.771_129 = { 7.5e-1, 7.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.772_128 = { 1, 1 };
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.773_127 = { 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_152.770_126 = VEC_COND_EXPR <vect_x_1.756_143 >= vect_cst_.771_129, vect_cst_.772_128, vect_cst_.773_127>;
base.cc:106:17: note: ------>vectorizing statement: _162 = ~_163;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_152
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_152
  def_stmt =  patt_152 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.775_125 = { 1, 1 };
base.cc:106:17: note: add new stmt: vect_patt_155.774_124 = vect_patt_152.770_126 ^ vect_cst_.775_125;
base.cc:106:17: note: ------>vectorizing statement: _161 = x_1 >= 2.5e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.777_123 = { 2.5e-1, 2.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.778_122 = { 1, 1 };
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.779_121 = { 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_147.776_120 = VEC_COND_EXPR <vect_x_1.756_143 >= vect_cst_.777_123, vect_cst_.778_122, vect_cst_.779_121>;
base.cc:106:17: note: ------>vectorizing statement: _160 = ~_161;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_147
base.cc:106:17: note: def_stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_147
base.cc:106:17: note: vect_is_simple_use: operand patt_147
base.cc:106:17: note: def_stmt: patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_147
  def_stmt =  patt_147 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.781_119 = { 1, 1 };
base.cc:106:17: note: add new stmt: vect_patt_151.780_118 = vect_patt_147.776_120 ^ vect_cst_.781_119;
base.cc:106:17: note: ------>vectorizing statement: _159 = _160 & _162;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_151
base.cc:106:17: note: def_stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_151
base.cc:106:17: note: vect_is_simple_use: operand patt_151
base.cc:106:17: note: def_stmt: patt_151 = patt_147 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_151
  def_stmt =  patt_151 = patt_147 ^ 1;
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_155
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_152 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_155
  def_stmt =  patt_155 = patt_152 ^ 1;
base.cc:106:17: note: add new stmt: vect_patt_156.782_117 = vect_patt_151.780_118 & vect_patt_155.774_124;
base.cc:106:17: note: ------>vectorizing statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.784_116 = { 7.5e-1, 7.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: x_2
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_2
  def_stmt =  x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: add new stmt: vect__ifc__158.783_115 = VEC_COND_EXPR <vect_x_1.756_143 >= vect_cst_.784_116, vect_x_2.757_141, vect_x_1.756_143>;
base.cc:106:17: note: ------>vectorizing statement: _ifc__157 = _159 ? x_1 : _ifc__158;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_156
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_156
  def_stmt =  patt_156 = patt_151 & patt_155;
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = patt_151 & patt_155;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.786_114 = { 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.393[iter.396_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.393[iter.396_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: _ifc__158
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _ifc__158
  def_stmt =  _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: add new stmt: vect_patt_153.785_113 = VEC_COND_EXPR <vect_patt_156.782_117 != vect_cst_.786_114, vect_x_1.756_143, vect__ifc__158.783_115>;
base.cc:106:17: note: ------>vectorizing statement: x_4 = _164 ? x_3 : _ifc__157;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_149
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_149
  def_stmt =  patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = x_1 >= 2.5e-1 ? patt_148 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.788_112 = { 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_get_vec_def_for_operand: x_3
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_3
  def_stmt =  x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: _ifc__157
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _ifc__157
  def_stmt =  _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: add new stmt: vect_patt_150.787_111 = VEC_COND_EXPR <vect_patt_149.767_130 != vect_cst_.788_112, vect_x_3.759_139, vect_patt_153.785_113>;
base.cc:106:17: note: ------>vectorizing statement: x_5 = x_4 * 4.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_4
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_4
  def_stmt =  x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_get_vec_def_for_operand: 4.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 4.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.790_110 = { 4.0e+0, 4.0e+0 };
base.cc:106:17: note: add new stmt: vect_x_5.789_109 = vect_patt_150.787_111 * vect_cst_.790_110;
base.cc:106:17: note: ------>vectorizing statement: powmult_36 = x_5 * x_5;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: add new stmt: vect_powmult_36.791_108 = vect_x_5.789_109 * vect_x_5.789_109;
base.cc:106:17: note: ------>vectorizing statement: _7 = powmult_36 * 2.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: powmult_36
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  powmult_36
  def_stmt =  powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.793_107 = { 2.0e+0, 2.0e+0 };
base.cc:106:17: note: add new stmt: vect__7.792_106 = vect_powmult_36.791_108 * vect_cst_.793_107;
base.cc:106:17: note: ------>vectorizing statement: z2_8 = _7 - 1.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _7
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _7
  def_stmt =  _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.795_105 = { 1.0e+0, 1.0e+0 };
base.cc:106:17: note: add new stmt: vect_z2_8.794_104 = vect__7.792_106 - vect_cst_.795_105;
base.cc:106:17: note: ------>vectorizing statement: _12 = x_5 * 2.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.797_102 = { 2.0e+0, 2.0e+0 };
base.cc:106:17: note: add new stmt: vect__12.796_101 = vect_x_5.789_109 * vect_cst_.797_102;
base.cc:106:17: note: ------>vectorizing statement: _10 = z2_8 * _12;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z2_8
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: add new stmt: vect__10.798_100 = vect_z2_8.794_104 * vect__12.796_101;
base.cc:106:17: note: ------>vectorizing statement: z3_11 = _10 - x_5;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _10
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _10
  def_stmt =  _10 = z2_8 * _12;
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: add new stmt: vect_z3_11.799_99 = vect__10.798_100 - vect_x_5.789_109;
base.cc:106:17: note: ------>vectorizing statement: _13 = z3_11 * _12;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z3_11
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: add new stmt: vect__13.800_98 = vect_z3_11.799_99 * vect__12.796_101;
base.cc:106:17: note: ------>vectorizing statement: z4_14 = _13 - z2_8;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _13
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _13
  def_stmt =  _13 = z3_11 * _12;
base.cc:106:17: note: vect_get_vec_def_for_operand: z2_8
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: add new stmt: vect_z4_14.801_97 = vect__13.800_98 - vect_z2_8.794_104;
base.cc:106:17: note: ------>vectorizing statement: _16 = _12 * z4_14;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: z4_14
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:106:17: note: add new stmt: vect__16.802_96 = vect__12.796_101 * vect_z4_14.801_97;
base.cc:106:17: note: ------>vectorizing statement: z5_17 = _16 - z3_11;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _16
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _16
  def_stmt =  _16 = _12 * z4_14;
base.cc:106:17: note: vect_get_vec_def_for_operand: z3_11
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:106:17: note: add new stmt: vect_z5_17.803_95 = vect__16.802_96 - vect_z3_11.799_99;
base.cc:106:17: note: ------>vectorizing statement: _19 = _12 * z5_17;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: z5_17
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:106:17: note: add new stmt: vect__19.804_94 = vect__12.796_101 * vect_z5_17.803_95;
base.cc:106:17: note: ------>vectorizing statement: z6_20 = _19 - z4_14;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _19
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _19
  def_stmt =  _19 = _12 * z5_17;
base.cc:106:17: note: vect_get_vec_def_for_operand: z4_14
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:106:17: note: add new stmt: vect_z6_20.805_93 = vect__19.804_94 - vect_z4_14.801_97;
base.cc:106:17: note: ------>vectorizing statement: _22 = _12 * z6_20;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: z6_20
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z6_20
  def_stmt =  z6_20 = _19 - z4_14;
base.cc:106:17: note: add new stmt: vect__22.806_92 = vect__12.796_101 * vect_z6_20.805_93;
base.cc:106:17: note: ------>vectorizing statement: z7_23 = _22 - z5_17;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _22
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _22
  def_stmt =  _22 = _12 * z6_20;
base.cc:106:17: note: vect_get_vec_def_for_operand: z5_17
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:106:17: note: add new stmt: vect_z7_23.807_91 = vect__22.806_92 - vect_z5_17.803_95;
base.cc:106:17: note: ------>vectorizing statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.809_90 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:106:17: note: add new stmt: vect__24.808_89 = vect_x_5.789_109 * vect_cst_.809_90;
base.cc:106:17: note: ------>vectorizing statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z3_11
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:106:17: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.811_88 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:106:17: note: add new stmt: vect__25.810_87 = vect_z3_11.799_99 * vect_cst_.811_88;
base.cc:106:17: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _24
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _24
  def_stmt =  _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: _25
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _25
  def_stmt =  _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: add new stmt: vect__26.812_86 = vect__24.808_89 + vect__25.810_87;
base.cc:106:17: note: ------>vectorizing statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z5_17
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.814_85 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:106:17: note: add new stmt: vect__27.813_84 = vect_z5_17.803_95 * vect_cst_.814_85;
base.cc:106:17: note: ------>vectorizing statement: _28 = _26 + _27;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _26
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:106:17: note: vect_get_vec_def_for_operand: _27
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _27
  def_stmt =  _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: add new stmt: vect__28.815_83 = vect__26.812_86 + vect__27.813_84;
base.cc:106:17: note: ------>vectorizing statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z7_23
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z7_23
  def_stmt =  z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: Create vector_cst. nunits = 2
base.cc:106:17: note: created new init_stmt: vect_cst_.817_82 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:106:17: note: add new stmt: vect__29.816_81 = vect_z7_23.807_91 * vect_cst_.817_82;
base.cc:106:17: note: ------>vectorizing statement: _30 = _28 + _29;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _28
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _28
  def_stmt =  _28 = _26 + _27;
base.cc:106:17: note: vect_get_vec_def_for_operand: _29
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _29
  def_stmt =  _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: add new stmt: vect__30.818_80 = vect__28.815_83 + vect__29.816_81;
base.cc:106:17: note: ------>vectorizing statement: retval.392[iter.396_32] = _30;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform store. ncopies = 1
base.cc:106:17: note: vect_get_vec_def_for_operand: _30
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _30
  def_stmt =  _30 = _28 + _29;
base.cc:106:17: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: retval.392
base.cc:106:17: note: created vectp_retval.820_79
base.cc:106:17: note: add new stmt: MEM[(double *)vectp_retval.819_78] = vect__30.818_80;
base.cc:106:17: note: ------>vectorizing statement: iter.396_33 = iter.396_32 + 1;

base.cc:106:17: note: ------>vectorizing statement: ivtmp_168 = ivtmp_169 - 1;

base.cc:106:17: note: ------>vectorizing statement: vectp_x.754_144 = vectp_x.754_145 + 16;

base.cc:106:17: note: ------>vectorizing statement: vectp_retval.819_77 = vectp_retval.819_78 + 16;

base.cc:106:17: note: ------>vectorizing statement: if (ivtmp_168 != 0)


loop at base.cc:106: if (ivtmp_75 < 2)

base.cc:106:17: note: LOOP VECTORIZED

base.cc:104:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&x.393] = simd.394_39(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:105
base.cc:105:3: note: ===== analyze_loop_nest =====
base.cc:105:3: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:105:3: note: === get_loop_niters ===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: got vectype for stmt: x_1 = x.398[iter.404_32];
vector(4) double
base.cc:105:3: note: got vectype for stmt: _34 = mask.399[iter.404_32];
vector(4) double
base.cc:105:3: note: got vectype for stmt: MASK_STORE (_121, 0B, _ifc__120, _30);
vector(4) double
base.cc:105:3: note: === vect_analyze_scalar_cycles ===
base.cc:105:3: note: Analyze phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: Access function of PHI: {0, +, 1}_1
base.cc:105:3: note: step: 1,  init: 0
base.cc:105:3: note: Detected induction.
base.cc:105:3: note: Analyze phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: Analyze phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:105:3: note: step: 4294967295,  init: 4
base.cc:105:3: note: Detected induction.
base.cc:105:3: note: === vect_pattern_recog ===
base.cc:105:3: note: vect_is_simple_use: operand _134
base.cc:105:3: note: def_stmt: _134 = _135 & _136;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _135
base.cc:105:3: note: def_stmt: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _136
base.cc:105:3: note: def_stmt: _136 = ~_137;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _137
base.cc:105:3: note: def_stmt: _137 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _124
base.cc:105:3: note: def_stmt: _124 = _125 & _ifc__119;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _125
base.cc:105:3: note: def_stmt: _125 = ~_126;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _126
base.cc:105:3: note: def_stmt: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__119
base.cc:105:3: note: def_stmt: _ifc__119 = _130 & _132;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _130
base.cc:105:3: note: def_stmt: _130 = ~_ifc__115;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__115
base.cc:105:3: note: def_stmt: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _132
base.cc:105:3: note: def_stmt: _132 = ~_ifc__116;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__116
base.cc:105:3: note: def_stmt: _ifc__116 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _127
base.cc:105:3: note: def_stmt: _127 = _128 & _129;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _128
base.cc:105:3: note: def_stmt: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _129
base.cc:105:3: note: def_stmt: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__117
base.cc:105:3: note: def_stmt: _ifc__117 = ~_131;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _131
base.cc:105:3: note: def_stmt: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__118
base.cc:105:3: note: def_stmt: _ifc__118 = ~_133;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _133
base.cc:105:3: note: def_stmt: _133 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vect_analyze_data_ref_accesses ===
base.cc:105:3: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:105:3: note: init: phi relevant? iter.404_32 = PHI <0(3), iter.404_33(5)>
base.cc:105:3: note: init: phi relevant? .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>
base.cc:105:3: note: init: phi relevant? ivtmp_176 = PHI <4(3), ivtmp_175(5)>
base.cc:105:3: note: init: stmt relevant? x_1 = x.398[iter.404_32];
base.cc:105:3: note: init: stmt relevant? _34 = mask.399[iter.404_32];
base.cc:105:3: note: init: stmt relevant? _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: init: stmt relevant? _137 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _136 = ~_137;
base.cc:105:3: note: init: stmt relevant? _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _134 = _135 & _136;
base.cc:105:3: note: init: stmt relevant? x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: init: stmt relevant? _133 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _ifc__116 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _132 = ~_ifc__116;
base.cc:105:3: note: init: stmt relevant? _ifc__118 = ~_133;
base.cc:105:3: note: init: stmt relevant? _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _130 = ~_ifc__115;
base.cc:105:3: note: init: stmt relevant? _ifc__117 = ~_131;
base.cc:105:3: note: init: stmt relevant? _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: init: stmt relevant? _ifc__119 = _130 & _132;
base.cc:105:3: note: init: stmt relevant? _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: init: stmt relevant? _127 = _128 & _129;
base.cc:105:3: note: init: stmt relevant? x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: init: stmt relevant? _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: init: stmt relevant? _125 = ~_126;
base.cc:105:3: note: init: stmt relevant? _124 = _125 & _ifc__119;
base.cc:105:3: note: init: stmt relevant? _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: init: stmt relevant? _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: init: stmt relevant? x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: init: stmt relevant? x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: init: stmt relevant? powmult_39 = x_5 * x_5;
base.cc:105:3: note: init: stmt relevant? _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: init: stmt relevant? z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: init: stmt relevant? _12 = x_5 * 2.0e+0;
base.cc:105:3: note: init: stmt relevant? _10 = z2_8 * _12;
base.cc:105:3: note: init: stmt relevant? z3_11 = _10 - x_5;
base.cc:105:3: note: init: stmt relevant? _13 = z3_11 * _12;
base.cc:105:3: note: init: stmt relevant? z4_14 = _13 - z2_8;
base.cc:105:3: note: init: stmt relevant? _16 = _12 * z4_14;
base.cc:105:3: note: init: stmt relevant? z5_17 = _16 - z3_11;
base.cc:105:3: note: init: stmt relevant? _19 = _12 * z5_17;
base.cc:105:3: note: init: stmt relevant? z6_20 = _19 - z4_14;
base.cc:105:3: note: init: stmt relevant? _22 = _12 * z6_20;
base.cc:105:3: note: init: stmt relevant? z7_23 = _22 - z5_17;
base.cc:105:3: note: init: stmt relevant? _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: init: stmt relevant? _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: init: stmt relevant? _26 = _24 + _25;
base.cc:105:3: note: init: stmt relevant? _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: init: stmt relevant? _28 = _26 + _27;
base.cc:105:3: note: init: stmt relevant? _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: init: stmt relevant? _30 = _28 + _29;
base.cc:105:3: note: init: stmt relevant? _121 = &retval.397[iter.404_32];
base.cc:105:3: note: init: stmt relevant? _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: init: stmt relevant? MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: init: stmt relevant? iter.404_33 = iter.404_32 + 1;
base.cc:105:3: note: init: stmt relevant? ivtmp_175 = ivtmp_176 - 1;
base.cc:105:3: note: init: stmt relevant? if (ivtmp_175 != 0)
base.cc:105:3: note: worklist: examine stmt: MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _30 = _28 + _29;
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_is_simple_use: operand _127
base.cc:105:3: note: def_stmt: _127 = _128 & _129;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand _124
base.cc:105:3: note: def_stmt: _124 = _125 & _ifc__119;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand _134
base.cc:105:3: note: def_stmt: _134 = _135 & _136;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _134 = _135 & _136;
base.cc:105:3: note: vect_is_simple_use: operand _135
base.cc:105:3: note: def_stmt: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _136
base.cc:105:3: note: def_stmt: _136 = ~_137;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _136 = ~_137;
base.cc:105:3: note: vect_is_simple_use: operand _137
base.cc:105:3: note: def_stmt: _137 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _137 = _35 == 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: worklist: examine stmt: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: worklist: examine stmt: _124 = _125 & _ifc__119;
base.cc:105:3: note: vect_is_simple_use: operand _125
base.cc:105:3: note: def_stmt: _125 = ~_126;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__119
base.cc:105:3: note: def_stmt: _ifc__119 = _130 & _132;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _ifc__119 = _130 & _132;
base.cc:105:3: note: vect_is_simple_use: operand _130
base.cc:105:3: note: def_stmt: _130 = ~_ifc__115;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _132
base.cc:105:3: note: def_stmt: _132 = ~_ifc__116;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _132 = ~_ifc__116;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__116
base.cc:105:3: note: def_stmt: _ifc__116 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _ifc__116 = _35 == 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _130 = ~_ifc__115;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__115
base.cc:105:3: note: def_stmt: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _125 = ~_126;
base.cc:105:3: note: vect_is_simple_use: operand _126
base.cc:105:3: note: def_stmt: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _127 = _128 & _129;
base.cc:105:3: note: vect_is_simple_use: operand _128
base.cc:105:3: note: def_stmt: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _129
base.cc:105:3: note: def_stmt: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__117
base.cc:105:3: note: def_stmt: _ifc__117 = ~_131;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__118
base.cc:105:3: note: def_stmt: _ifc__118 = ~_133;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _ifc__118 = ~_133;
base.cc:105:3: note: vect_is_simple_use: operand _133
base.cc:105:3: note: def_stmt: _133 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _133 = _35 == 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _ifc__117 = ~_131;
base.cc:105:3: note: vect_is_simple_use: operand _131
base.cc:105:3: note: def_stmt: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _10 = z2_8 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _16 = _12 * z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _13 = z3_11 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _22 = _12 * z6_20;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _19 = _12 * z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _28 = _26 + _27;
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: === vect_analyze_data_ref_dependences ===
base.cc:105:3: note: === vect_determine_vectorization_factor ===
base.cc:105:3: note: ==> examining phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: ==> examining phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: ==> examining phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: ==> examining statement: x_1 = x.398[iter.404_32];

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _34 = mask.399[iter.404_32];

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);

base.cc:105:3: note: get vectype for scalar type:  signed long
base.cc:105:3: note: vectype: vector(4) signed long
base.cc:105:3: note: get vectype for scalar type:  signed long
base.cc:105:3: note: vectype: vector(4) signed long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _137 = _35 == 0;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _136 = ~_137;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _135 = x_1 >= 7.5e-1;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _134 = _135 & _136;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: x_2 = x_1 - 1.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _133 = _35 == 0;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _ifc__116 = _35 == 0;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _132 = ~_ifc__116;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _ifc__118 = ~_133;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _131 = x_1 >= 7.5e-1;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _ifc__115 = x_1 >= 7.5e-1;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _130 = ~_ifc__115;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _ifc__117 = ~_131;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _129 = _ifc__117 & _ifc__118;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _ifc__119 = _130 & _132;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _128 = x_1 >= 2.5e-1;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _127 = _128 & _129;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: x_3 = 5.0e-1 - x_1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _126 = x_1 >= 2.5e-1;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _125 = ~_126;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _124 = _125 & _ifc__119;

base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: get vectype for scalar type:  bool
base.cc:105:3: note: vectype: vector(32) unsigned char
base.cc:105:3: note: nunits = 32
base.cc:105:3: note: ==> examining statement: _ifc__123 = _134 ? x_2 : x_1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__122 = _124 ? x_1 : _ifc__123;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: x_4 = _127 ? x_3 : _ifc__122;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: x_5 = x_4 * 4.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: powmult_39 = x_5 * x_5;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _7 = powmult_39 * 2.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z2_8 = _7 - 1.0e+0;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _12 = x_5 * 2.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _10 = z2_8 * _12;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z3_11 = _10 - x_5;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _13 = z3_11 * _12;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z4_14 = _13 - z2_8;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _16 = _12 * z4_14;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z5_17 = _16 - z3_11;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _19 = _12 * z5_17;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z6_20 = _19 - z4_14;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _22 = _12 * z6_20;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z7_23 = _22 - z5_17;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _26 = _24 + _25;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _28 = _26 + _27;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _30 = _28 + _29;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _121 = &retval.397[iter.404_32];

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: MASK_STORE (_121, 0B, _ifc__120, _30);

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: iter.404_33 = iter.404_32 + 1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: ivtmp_175 = ivtmp_176 - 1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: if (ivtmp_175 != 0)

base.cc:105:3: note: skip.
base.cc:105:3: note: vectorization factor = 32
base.cc:105:3: note: === vect_analyze_data_refs_alignment ===
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of x.398[iter.404_32]
base.cc:105:3: note: misalign = 0 bytes of ref x.398[iter.404_32]
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of mask.399[iter.404_32]
base.cc:105:3: note: misalign = 0 bytes of ref mask.399[iter.404_32]
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of *_121
base.cc:105:3: note: misalign = 0 bytes of ref *_121
base.cc:105:3: note: === vect_prune_runtime_alias_test_list ===
base.cc:105:3: note: === vect_enhance_data_refs_alignment ===
base.cc:105:3: note: vect_can_advance_ivs_p:
base.cc:105:3: note: Analyze phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: Analyze phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: virtual phi. skip.
base.cc:105:3: note: Analyze phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: === vect_analyze_slp ===
base.cc:105:3: note: === vect_make_slp_decision ===
base.cc:105:3: note: === vect_detect_hybrid_slp ===
base.cc:105:3: note: === vect_analyze_loop_operations ===
base.cc:105:3: note: examining phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: examining phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: examining phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: ==> examining statement: x_1 = x.398[iter.404_32];
base.cc:105:3: note: num. args = 4 (not unary/binary/ternary op).
base.cc:105:3: note: vect_is_simple_use: operand x.398[iter.404_32]
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_model_load_cost: aligned.
base.cc:105:3: note: vect_model_load_cost: inside_cost = 8, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _34 = mask.399[iter.404_32];
base.cc:105:3: note: num. args = 4 (not unary/binary/ternary op).
base.cc:105:3: note: vect_is_simple_use: operand mask.399[iter.404_32]
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_model_load_cost: aligned.
base.cc:105:3: note: vect_model_load_cost: inside_cost = 8, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand VIEW_CONVERT_EXPR<signed long>(_34)
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_assignment ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 8, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _137 = _35 == 0;
base.cc:105:3: note: bit-precision arithmetic not supported.
base.cc:105:3: note: not vectorized: relevant stmt not supported: _137 = _35 == 0;
base.cc:105:3: note: bad operation or unsupported loop bound.
base.cc:105:3: note: ***** Re-trying analysis with vector size 16
base.cc:105:3: note: === vect_analyze_loop_form ===
base.cc:105:3: note: === get_loop_niters ===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: got vectype for stmt: x_1 = x.398[iter.404_32];
vector(2) double
base.cc:105:3: note: got vectype for stmt: _34 = mask.399[iter.404_32];
vector(2) double
base.cc:105:3: note: got vectype for stmt: MASK_STORE (_121, 0B, _ifc__120, _30);
vector(2) double
base.cc:105:3: note: === vect_analyze_scalar_cycles ===
base.cc:105:3: note: Analyze phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: Access function of PHI: {0, +, 1}_1
base.cc:105:3: note: step: 1,  init: 0
base.cc:105:3: note: Detected induction.
base.cc:105:3: note: Analyze phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: Analyze phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:105:3: note: step: 4294967295,  init: 4
base.cc:105:3: note: Detected induction.
base.cc:105:3: note: === vect_pattern_recog ===
base.cc:105:3: note: vect_is_simple_use: operand _134
base.cc:105:3: note: def_stmt: _134 = _135 & _136;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _135
base.cc:105:3: note: def_stmt: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _136
base.cc:105:3: note: def_stmt: _136 = ~_137;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _137
base.cc:105:3: note: def_stmt: _137 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_recog_bool_pattern: detected:
base.cc:105:3: note: pattern recognized: patt_108 = patt_109 != 0 ? x_2 : x_1;
base.cc:105:3: note: additional pattern stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _124
base.cc:105:3: note: def_stmt: _124 = _125 & _ifc__119;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _125
base.cc:105:3: note: def_stmt: _125 = ~_126;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _126
base.cc:105:3: note: def_stmt: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__119
base.cc:105:3: note: def_stmt: _ifc__119 = _130 & _132;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _130
base.cc:105:3: note: def_stmt: _130 = ~_ifc__115;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__115
base.cc:105:3: note: def_stmt: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _132
base.cc:105:3: note: def_stmt: _132 = ~_ifc__116;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__116
base.cc:105:3: note: def_stmt: _ifc__116 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_recog_bool_pattern: detected:
base.cc:105:3: note: pattern recognized: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;
base.cc:105:3: note: additional pattern stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: additional pattern stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand _127
base.cc:105:3: note: def_stmt: _127 = _128 & _129;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _128
base.cc:105:3: note: def_stmt: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _129
base.cc:105:3: note: def_stmt: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__117
base.cc:105:3: note: def_stmt: _ifc__117 = ~_131;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _131
base.cc:105:3: note: def_stmt: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__118
base.cc:105:3: note: def_stmt: _ifc__118 = ~_133;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _133
base.cc:105:3: note: def_stmt: _133 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_recog_bool_pattern: detected:
base.cc:105:3: note: pattern recognized: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;
base.cc:105:3: note: additional pattern stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: additional pattern stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vect_analyze_data_ref_accesses ===
base.cc:105:3: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:105:3: note: init: phi relevant? iter.404_32 = PHI <0(3), iter.404_33(5)>
base.cc:105:3: note: init: phi relevant? .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>
base.cc:105:3: note: init: phi relevant? ivtmp_176 = PHI <4(3), ivtmp_175(5)>
base.cc:105:3: note: init: stmt relevant? x_1 = x.398[iter.404_32];
base.cc:105:3: note: init: stmt relevant? _34 = mask.399[iter.404_32];
base.cc:105:3: note: init: stmt relevant? _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: init: stmt relevant? _137 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _136 = ~_137;
base.cc:105:3: note: init: stmt relevant? _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _134 = _135 & _136;
base.cc:105:3: note: init: stmt relevant? x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: init: stmt relevant? _133 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _ifc__116 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _132 = ~_ifc__116;
base.cc:105:3: note: init: stmt relevant? _ifc__118 = ~_133;
base.cc:105:3: note: init: stmt relevant? _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _130 = ~_ifc__115;
base.cc:105:3: note: init: stmt relevant? _ifc__117 = ~_131;
base.cc:105:3: note: init: stmt relevant? _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: init: stmt relevant? _ifc__119 = _130 & _132;
base.cc:105:3: note: init: stmt relevant? _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: init: stmt relevant? _127 = _128 & _129;
base.cc:105:3: note: init: stmt relevant? x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: init: stmt relevant? _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: init: stmt relevant? _125 = ~_126;
base.cc:105:3: note: init: stmt relevant? _124 = _125 & _ifc__119;
base.cc:105:3: note: init: stmt relevant? _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: init: stmt relevant? _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: init: stmt relevant? x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: init: stmt relevant? x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: init: stmt relevant? powmult_39 = x_5 * x_5;
base.cc:105:3: note: init: stmt relevant? _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: init: stmt relevant? z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: init: stmt relevant? _12 = x_5 * 2.0e+0;
base.cc:105:3: note: init: stmt relevant? _10 = z2_8 * _12;
base.cc:105:3: note: init: stmt relevant? z3_11 = _10 - x_5;
base.cc:105:3: note: init: stmt relevant? _13 = z3_11 * _12;
base.cc:105:3: note: init: stmt relevant? z4_14 = _13 - z2_8;
base.cc:105:3: note: init: stmt relevant? _16 = _12 * z4_14;
base.cc:105:3: note: init: stmt relevant? z5_17 = _16 - z3_11;
base.cc:105:3: note: init: stmt relevant? _19 = _12 * z5_17;
base.cc:105:3: note: init: stmt relevant? z6_20 = _19 - z4_14;
base.cc:105:3: note: init: stmt relevant? _22 = _12 * z6_20;
base.cc:105:3: note: init: stmt relevant? z7_23 = _22 - z5_17;
base.cc:105:3: note: init: stmt relevant? _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: init: stmt relevant? _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: init: stmt relevant? _26 = _24 + _25;
base.cc:105:3: note: init: stmt relevant? _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: init: stmt relevant? _28 = _26 + _27;
base.cc:105:3: note: init: stmt relevant? _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: init: stmt relevant? _30 = _28 + _29;
base.cc:105:3: note: init: stmt relevant? _121 = &retval.397[iter.404_32];
base.cc:105:3: note: init: stmt relevant? _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: init: stmt relevant? MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: init: stmt relevant? iter.404_33 = iter.404_32 + 1;
base.cc:105:3: note: init: stmt relevant? ivtmp_175 = ivtmp_176 - 1;
base.cc:105:3: note: init: stmt relevant? if (ivtmp_175 != 0)
base.cc:105:3: note: worklist: examine stmt: MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _30 = _28 + _29;
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: last stmt in pattern. don't mark relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: last stmt in pattern. don't mark relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: last stmt in pattern. don't mark relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_108 = patt_109 != 0 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: worklist: examine stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: worklist: examine stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: _10 = z2_8 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _16 = _12 * z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _13 = z3_11 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _22 = _12 * z6_20;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _19 = _12 * z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _28 = _26 + _27;
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: === vect_analyze_data_ref_dependences ===
base.cc:105:3: note: === vect_determine_vectorization_factor ===
base.cc:105:3: note: ==> examining phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: ==> examining phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: ==> examining phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: ==> examining statement: x_1 = x.398[iter.404_32];

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _34 = mask.399[iter.404_32];

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);

base.cc:105:3: note: get vectype for scalar type:  signed long
base.cc:105:3: note: vectype: vector(2) signed long
base.cc:105:3: note: get vectype for scalar type:  signed long
base.cc:105:3: note: vectype: vector(2) signed long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _137 = _35 == 0;

base.cc:105:3: note: ==> examining pattern statement: patt_112 = _35 == 0 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _136 = ~_137;

base.cc:105:3: note: ==> examining pattern statement: patt_111 = patt_112 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _135 = x_1 >= 7.5e-1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _134 = _135 & _136;

base.cc:105:3: note: ==> examining pattern statement: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: x_2 = x_1 - 1.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _133 = _35 == 0;

base.cc:105:3: note: ==> examining pattern statement: patt_96 = _35 == 0 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__116 = _35 == 0;

base.cc:105:3: note: ==> examining pattern statement: patt_103 = _35 == 0 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _132 = ~_ifc__116;

base.cc:105:3: note: ==> examining pattern statement: patt_102 = patt_103 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__118 = ~_133;

base.cc:105:3: note: ==> examining pattern statement: patt_95 = patt_96 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _131 = x_1 >= 7.5e-1;

base.cc:105:3: note: ==> examining pattern statement: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__115 = x_1 >= 7.5e-1;

base.cc:105:3: note: ==> examining pattern statement: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _130 = ~_ifc__115;

base.cc:105:3: note: ==> examining pattern statement: patt_104 = patt_105 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__117 = ~_131;

base.cc:105:3: note: ==> examining pattern statement: patt_97 = patt_98 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _129 = _ifc__117 & _ifc__118;

base.cc:105:3: note: ==> examining pattern statement: patt_94 = patt_97 & patt_95;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__119 = _130 & _132;

base.cc:105:3: note: ==> examining pattern statement: patt_101 = patt_104 & patt_102;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _128 = x_1 >= 2.5e-1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _127 = _128 & _129;

base.cc:105:3: note: ==> examining pattern statement: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: x_3 = 5.0e-1 - x_1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _126 = x_1 >= 2.5e-1;

base.cc:105:3: note: ==> examining pattern statement: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _125 = ~_126;

base.cc:105:3: note: ==> examining pattern statement: patt_106 = patt_107 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _124 = _125 & _ifc__119;

base.cc:105:3: note: ==> examining pattern statement: patt_100 = patt_106 & patt_101;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__123 = _134 ? x_2 : x_1;

base.cc:105:3: note: ==> examining pattern statement: patt_108 = patt_109 != 0 ? x_2 : x_1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _ifc__122 = _124 ? x_1 : _ifc__123;

base.cc:105:3: note: ==> examining pattern statement: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: x_4 = _127 ? x_3 : _ifc__122;

base.cc:105:3: note: ==> examining pattern statement: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: x_5 = x_4 * 4.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: powmult_39 = x_5 * x_5;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _7 = powmult_39 * 2.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: z2_8 = _7 - 1.0e+0;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _12 = x_5 * 2.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _10 = z2_8 * _12;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: z3_11 = _10 - x_5;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _13 = z3_11 * _12;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: z4_14 = _13 - z2_8;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _16 = _12 * z4_14;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: z5_17 = _16 - z3_11;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _19 = _12 * z5_17;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: z6_20 = _19 - z4_14;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _22 = _12 * z6_20;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: z7_23 = _22 - z5_17;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _26 = _24 + _25;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _28 = _26 + _27;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _30 = _28 + _29;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: _121 = &retval.397[iter.404_32];

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(2) unsigned long
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: MASK_STORE (_121, 0B, _ifc__120, _30);

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(2) double
base.cc:105:3: note: nunits = 2
base.cc:105:3: note: ==> examining statement: iter.404_33 = iter.404_32 + 1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: ivtmp_175 = ivtmp_176 - 1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: if (ivtmp_175 != 0)

base.cc:105:3: note: skip.
base.cc:105:3: note: vectorization factor = 2
base.cc:105:3: note: === vect_analyze_data_refs_alignment ===
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of x.398[iter.404_32]
base.cc:105:3: note: misalign = 0 bytes of ref x.398[iter.404_32]
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of mask.399[iter.404_32]
base.cc:105:3: note: misalign = 0 bytes of ref mask.399[iter.404_32]
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of *_121
base.cc:105:3: note: misalign = 0 bytes of ref *_121
base.cc:105:3: note: === vect_prune_runtime_alias_test_list ===
base.cc:105:3: note: === vect_enhance_data_refs_alignment ===
base.cc:105:3: note: vect_can_advance_ivs_p:
base.cc:105:3: note: Analyze phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: Analyze phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: virtual phi. skip.
base.cc:105:3: note: Analyze phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: === vect_analyze_slp ===
base.cc:105:3: note: === vect_make_slp_decision ===
base.cc:105:3: note: === vect_detect_hybrid_slp ===
base.cc:105:3: note: === vect_analyze_loop_operations ===
base.cc:105:3: note: examining phi: iter.404_32 = PHI <0(3), iter.404_33(5)>

base.cc:105:3: note: examining phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: examining phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: ==> examining statement: x_1 = x.398[iter.404_32];
base.cc:105:3: note: num. args = 4 (not unary/binary/ternary op).
base.cc:105:3: note: vect_is_simple_use: operand x.398[iter.404_32]
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_model_load_cost: aligned.
base.cc:105:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _34 = mask.399[iter.404_32];
base.cc:105:3: note: num. args = 4 (not unary/binary/ternary op).
base.cc:105:3: note: vect_is_simple_use: operand mask.399[iter.404_32]
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_model_load_cost: aligned.
base.cc:105:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand VIEW_CONVERT_EXPR<signed long>(_34)
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_assignment ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _137 = _35 == 0;
base.cc:105:3: note: ==> examining pattern statement: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _136 = ~_137;
base.cc:105:3: note: ==> examining pattern statement: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: _134 = _135 & _136;
base.cc:105:3: note: ==> examining pattern statement: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _133 = _35 == 0;
base.cc:105:3: note: ==> examining pattern statement: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _ifc__116 = _35 == 0;
base.cc:105:3: note: ==> examining pattern statement: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _132 = ~_ifc__116;
base.cc:105:3: note: ==> examining pattern statement: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _ifc__118 = ~_133;
base.cc:105:3: note: ==> examining pattern statement: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: ==> examining pattern statement: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: ==> examining pattern statement: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _130 = ~_ifc__115;
base.cc:105:3: note: ==> examining pattern statement: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _ifc__117 = ~_131;
base.cc:105:3: note: ==> examining pattern statement: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: ==> examining pattern statement: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _ifc__119 = _130 & _132;
base.cc:105:3: note: ==> examining pattern statement: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: _127 = _128 & _129;
base.cc:105:3: note: ==> examining pattern statement: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand 5.0e-1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: ==> examining pattern statement: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _125 = ~_126;
base.cc:105:3: note: ==> examining pattern statement: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _124 = _125 & _ifc__119;
base.cc:105:3: note: ==> examining pattern statement: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: ==> examining pattern statement: patt_108 = patt_109 != 0 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand patt_109 != 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: ==> examining pattern statement: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand patt_100 != 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: ==> examining pattern statement: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_is_simple_use: operand patt_93 != 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _10 = z2_8 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z3_11 = _10 - x_5;
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _13 = z3_11 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z4_14 = _13 - z2_8;
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _16 = _12 * z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _19 = _12 * z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z6_20 = _19 - z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _22 = _12 * z6_20;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _26 = _24 + _25;
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _28 = _26 + _27;
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _30 = _28 + _29;
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _121 = &retval.397[iter.404_32];
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_model_store_cost: aligned.
base.cc:105:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: iter.404_33 = iter.404_32 + 1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: ivtmp_175 = ivtmp_176 - 1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: if (ivtmp_175 != 0)
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: vectorization_factor = 2, niters = 4
base.cc:105:3: note: === vect_update_slp_costs_according_to_vf ===
base.cc:105:3: note: cost model disabled.
base.cc:105:3: note: loop vectorized
base.cc:105:3: note: === vec_transform_loop ===
base.cc:105:3: note: ------>vectorizing phi: iter.404_32 = PHI <0(17), iter.404_33(5)>

base.cc:105:3: note: ------>vectorizing phi: .MEM_37 = PHI <.MEM_42(17), .MEM_114(5)>

base.cc:105:3: note: ------>vectorizing phi: ivtmp_176 = PHI <4(17), ivtmp_175(5)>

base.cc:105:3: note: ------>vectorizing statement: x_1 = x.398[iter.404_32];

base.cc:105:3: note: transform statement.
base.cc:105:3: note: transform load. ncopies = 1
base.cc:105:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: x.398
base.cc:105:3: note: created vectp_x.824_91
base.cc:105:3: note: add new stmt: vect_x_1.825_88 = MEM[(double *)vectp_x.823_90];
base.cc:105:3: note: ------>vectorizing statement: _34 = mask.399[iter.404_32];

base.cc:105:3: note: transform statement.
base.cc:105:3: note: transform load. ncopies = 1
base.cc:105:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: mask.399
base.cc:105:3: note: created vectp_mask.827_87
base.cc:105:3: note: add new stmt: vect__34.828_84 = MEM[(double *)vectp_mask.826_86];
base.cc:105:3: note: ------>vectorizing statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform assignment.
base.cc:105:3: note: vect_get_vec_def_for_operand: _34
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.399[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _34
  def_stmt =  _34 = mask.399[iter.404_32];
base.cc:105:3: note: add new stmt: vect__35.829_83 = VIEW_CONVERT_EXPR<vector(2) signed long>(vect__34.828_84);
base.cc:105:3: note: ------>vectorizing statement: _137 = _35 == 0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.831_82 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.832_81 = { 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.833_80 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_112.830_79 = VEC_COND_EXPR <vect__35.829_83 == vect_cst_.831_82, vect_cst_.832_81, vect_cst_.833_80>;
base.cc:105:3: note: ------>vectorizing statement: _136 = ~_137;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_112
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_112
  def_stmt =  patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.835_78 = { 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_111.834_77 = vect_patt_112.830_79 ^ vect_cst_.835_78;
base.cc:105:3: note: ------>vectorizing statement: _135 = x_1 >= 7.5e-1;

base.cc:105:3: note: ------>vectorizing statement: _134 = _135 & _136;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.837_76 = { 7.5e-1, 7.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_111
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_111
  def_stmt =  patt_111 = patt_112 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.838_75 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_109.836_74 = VEC_COND_EXPR <vect_x_1.825_88 >= vect_cst_.837_76, vect_patt_111.834_77, vect_cst_.838_75>;
base.cc:105:3: note: ------>vectorizing statement: x_2 = x_1 - 1.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.840_73 = { 1.0e+0, 1.0e+0 };
base.cc:105:3: note: add new stmt: vect_x_2.839_72 = vect_x_1.825_88 - vect_cst_.840_73;
base.cc:105:3: note: ------>vectorizing statement: _133 = _35 == 0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.842_71 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.843_70 = { 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.844_69 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_96.841_68 = VEC_COND_EXPR <vect__35.829_83 == vect_cst_.842_71, vect_cst_.843_70, vect_cst_.844_69>;
base.cc:105:3: note: ------>vectorizing statement: _ifc__116 = _35 == 0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.846_67 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.847_66 = { 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.848_65 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_103.845_64 = VEC_COND_EXPR <vect__35.829_83 == vect_cst_.846_67, vect_cst_.847_66, vect_cst_.848_65>;
base.cc:105:3: note: ------>vectorizing statement: _132 = ~_ifc__116;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_103
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_103
  def_stmt =  patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.850_63 = { 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_102.849_62 = vect_patt_103.845_64 ^ vect_cst_.850_63;
base.cc:105:3: note: ------>vectorizing statement: _ifc__118 = ~_133;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_96
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_96
  def_stmt =  patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.852_61 = { 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_95.851_60 = vect_patt_96.841_68 ^ vect_cst_.852_61;
base.cc:105:3: note: ------>vectorizing statement: _131 = x_1 >= 7.5e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.854_59 = { 7.5e-1, 7.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.855_58 = { 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.856_57 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_98.853_56 = VEC_COND_EXPR <vect_x_1.825_88 >= vect_cst_.854_59, vect_cst_.855_58, vect_cst_.856_57>;
base.cc:105:3: note: ------>vectorizing statement: _ifc__115 = x_1 >= 7.5e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.858_55 = { 7.5e-1, 7.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.859_54 = { 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.860_53 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_105.857_52 = VEC_COND_EXPR <vect_x_1.825_88 >= vect_cst_.858_55, vect_cst_.859_54, vect_cst_.860_53>;
base.cc:105:3: note: ------>vectorizing statement: _130 = ~_ifc__115;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_105
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_105
  def_stmt =  patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.862_51 = { 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_104.861_50 = vect_patt_105.857_52 ^ vect_cst_.862_51;
base.cc:105:3: note: ------>vectorizing statement: _ifc__117 = ~_131;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_98
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_98
  def_stmt =  patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.864_49 = { 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_97.863_48 = vect_patt_98.853_56 ^ vect_cst_.864_49;
base.cc:105:3: note: ------>vectorizing statement: _129 = _ifc__117 & _ifc__118;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_97
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_97
  def_stmt =  patt_97 = patt_98 ^ 1;
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_95
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_95
  def_stmt =  patt_95 = patt_96 ^ 1;
base.cc:105:3: note: add new stmt: vect_patt_94.865_47 = vect_patt_97.863_48 & vect_patt_95.851_60;
base.cc:105:3: note: ------>vectorizing statement: _ifc__119 = _130 & _132;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_104
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_104
  def_stmt =  patt_104 = patt_105 ^ 1;
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_102
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_102
  def_stmt =  patt_102 = patt_103 ^ 1;
base.cc:105:3: note: add new stmt: vect_patt_101.866_41 = vect_patt_104.861_50 & vect_patt_102.849_62;
base.cc:105:3: note: ------>vectorizing statement: _128 = x_1 >= 2.5e-1;

base.cc:105:3: note: ------>vectorizing statement: _127 = _128 & _129;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.868_6 = { 2.5e-1, 2.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_94
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_94
  def_stmt =  patt_94 = patt_97 & patt_95;
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.869_110 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_93.867_9 = VEC_COND_EXPR <vect_x_1.825_88 >= vect_cst_.868_6, vect_patt_94.865_47, vect_cst_.869_110>;
base.cc:105:3: note: ------>vectorizing statement: x_3 = 5.0e-1 - x_1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand 5.0e-1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: 5.0e-1
base.cc:105:3: note: vect_is_simple_use: operand 5.0e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.871_15 = { 5.0e-1, 5.0e-1 };
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: add new stmt: vect_x_3.870_18 = vect_cst_.871_15 - vect_x_1.825_88;
base.cc:105:3: note: ------>vectorizing statement: _126 = x_1 >= 2.5e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.873_21 = { 2.5e-1, 2.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.874_46 = { 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.875_177 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_107.872_178 = VEC_COND_EXPR <vect_x_1.825_88 >= vect_cst_.873_21, vect_cst_.874_46, vect_cst_.875_177>;
base.cc:105:3: note: ------>vectorizing statement: _125 = ~_126;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_107
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_107
  def_stmt =  patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.877_179 = { 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_106.876_180 = vect_patt_107.872_178 ^ vect_cst_.877_179;
base.cc:105:3: note: ------>vectorizing statement: _124 = _125 & _ifc__119;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_106
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_106
  def_stmt =  patt_106 = patt_107 ^ 1;
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_101
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_101
  def_stmt =  patt_101 = patt_104 & patt_102;
base.cc:105:3: note: add new stmt: vect_patt_100.878_181 = vect_patt_106.876_180 & vect_patt_101.866_41;
base.cc:105:3: note: ------>vectorizing statement: _ifc__123 = _134 ? x_2 : x_1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_109
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_109
  def_stmt =  patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.880_182 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: x_2
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_2
  def_stmt =  x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: add new stmt: vect_patt_108.879_183 = VEC_COND_EXPR <vect_patt_109.836_74 != vect_cst_.880_182, vect_x_2.839_72, vect_x_1.825_88>;
base.cc:105:3: note: ------>vectorizing statement: _ifc__122 = _124 ? x_1 : _ifc__123;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_100
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_100
  def_stmt =  patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.882_184 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.398[iter.404_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.398[iter.404_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _ifc__123
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _ifc__123
  def_stmt =  _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: add new stmt: vect_patt_99.881_185 = VEC_COND_EXPR <vect_patt_100.878_181 != vect_cst_.882_184, vect_x_1.825_88, vect_patt_108.879_183>;
base.cc:105:3: note: ------>vectorizing statement: x_4 = _127 ? x_3 : _ifc__122;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_93
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_93
  def_stmt =  patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.884_186 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: x_3
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_3
  def_stmt =  x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _ifc__122
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _ifc__122
  def_stmt =  _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: add new stmt: vect_patt_92.883_187 = VEC_COND_EXPR <vect_patt_93.867_9 != vect_cst_.884_186, vect_x_3.870_18, vect_patt_99.881_185>;
base.cc:105:3: note: ------>vectorizing statement: x_5 = x_4 * 4.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_4
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_4
  def_stmt =  x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_get_vec_def_for_operand: 4.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 4.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.886_188 = { 4.0e+0, 4.0e+0 };
base.cc:105:3: note: add new stmt: vect_x_5.885_189 = vect_patt_92.883_187 * vect_cst_.886_188;
base.cc:105:3: note: ------>vectorizing statement: powmult_39 = x_5 * x_5;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: add new stmt: vect_powmult_39.887_190 = vect_x_5.885_189 * vect_x_5.885_189;
base.cc:105:3: note: ------>vectorizing statement: _7 = powmult_39 * 2.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: powmult_39
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  powmult_39
  def_stmt =  powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.889_191 = { 2.0e+0, 2.0e+0 };
base.cc:105:3: note: add new stmt: vect__7.888_192 = vect_powmult_39.887_190 * vect_cst_.889_191;
base.cc:105:3: note: ------>vectorizing statement: z2_8 = _7 - 1.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _7
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _7
  def_stmt =  _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.891_193 = { 1.0e+0, 1.0e+0 };
base.cc:105:3: note: add new stmt: vect_z2_8.890_194 = vect__7.888_192 - vect_cst_.891_193;
base.cc:105:3: note: ------>vectorizing statement: _12 = x_5 * 2.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.893_195 = { 2.0e+0, 2.0e+0 };
base.cc:105:3: note: add new stmt: vect__12.892_196 = vect_x_5.885_189 * vect_cst_.893_195;
base.cc:105:3: note: ------>vectorizing statement: _10 = z2_8 * _12;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z2_8
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: add new stmt: vect__10.894_197 = vect_z2_8.890_194 * vect__12.892_196;
base.cc:105:3: note: ------>vectorizing statement: z3_11 = _10 - x_5;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _10
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _10
  def_stmt =  _10 = z2_8 * _12;
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: add new stmt: vect_z3_11.895_198 = vect__10.894_197 - vect_x_5.885_189;
base.cc:105:3: note: ------>vectorizing statement: _13 = z3_11 * _12;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z3_11
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: add new stmt: vect__13.896_199 = vect_z3_11.895_198 * vect__12.892_196;
base.cc:105:3: note: ------>vectorizing statement: z4_14 = _13 - z2_8;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _13
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _13
  def_stmt =  _13 = z3_11 * _12;
base.cc:105:3: note: vect_get_vec_def_for_operand: z2_8
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: add new stmt: vect_z4_14.897_200 = vect__13.896_199 - vect_z2_8.890_194;
base.cc:105:3: note: ------>vectorizing statement: _16 = _12 * z4_14;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: z4_14
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:105:3: note: add new stmt: vect__16.898_201 = vect__12.892_196 * vect_z4_14.897_200;
base.cc:105:3: note: ------>vectorizing statement: z5_17 = _16 - z3_11;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _16
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _16
  def_stmt =  _16 = _12 * z4_14;
base.cc:105:3: note: vect_get_vec_def_for_operand: z3_11
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:105:3: note: add new stmt: vect_z5_17.899_202 = vect__16.898_201 - vect_z3_11.895_198;
base.cc:105:3: note: ------>vectorizing statement: _19 = _12 * z5_17;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: z5_17
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:105:3: note: add new stmt: vect__19.900_203 = vect__12.892_196 * vect_z5_17.899_202;
base.cc:105:3: note: ------>vectorizing statement: z6_20 = _19 - z4_14;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _19
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _19
  def_stmt =  _19 = _12 * z5_17;
base.cc:105:3: note: vect_get_vec_def_for_operand: z4_14
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:105:3: note: add new stmt: vect_z6_20.901_204 = vect__19.900_203 - vect_z4_14.897_200;
base.cc:105:3: note: ------>vectorizing statement: _22 = _12 * z6_20;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: z6_20
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z6_20
  def_stmt =  z6_20 = _19 - z4_14;
base.cc:105:3: note: add new stmt: vect__22.902_205 = vect__12.892_196 * vect_z6_20.901_204;
base.cc:105:3: note: ------>vectorizing statement: z7_23 = _22 - z5_17;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _22
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _22
  def_stmt =  _22 = _12 * z6_20;
base.cc:105:3: note: vect_get_vec_def_for_operand: z5_17
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:105:3: note: add new stmt: vect_z7_23.903_206 = vect__22.902_205 - vect_z5_17.899_202;
base.cc:105:3: note: ------>vectorizing statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.905_207 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:105:3: note: add new stmt: vect__24.904_208 = vect_x_5.885_189 * vect_cst_.905_207;
base.cc:105:3: note: ------>vectorizing statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z3_11
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:105:3: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.907_209 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:105:3: note: add new stmt: vect__25.906_210 = vect_z3_11.895_198 * vect_cst_.907_209;
base.cc:105:3: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _24
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _24
  def_stmt =  _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: _25
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _25
  def_stmt =  _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: add new stmt: vect__26.908_211 = vect__24.904_208 + vect__25.906_210;
base.cc:105:3: note: ------>vectorizing statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z5_17
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.910_212 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:105:3: note: add new stmt: vect__27.909_213 = vect_z5_17.899_202 * vect_cst_.910_212;
base.cc:105:3: note: ------>vectorizing statement: _28 = _26 + _27;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _26
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:105:3: note: vect_get_vec_def_for_operand: _27
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _27
  def_stmt =  _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: add new stmt: vect__28.911_214 = vect__26.908_211 + vect__27.909_213;
base.cc:105:3: note: ------>vectorizing statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z7_23
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z7_23
  def_stmt =  z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.913_215 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:105:3: note: add new stmt: vect__29.912_216 = vect_z7_23.903_206 * vect_cst_.913_215;
base.cc:105:3: note: ------>vectorizing statement: _30 = _28 + _29;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _28
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _28
  def_stmt =  _28 = _26 + _27;
base.cc:105:3: note: vect_get_vec_def_for_operand: _29
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _29
  def_stmt =  _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: add new stmt: vect__30.914_217 = vect__28.911_214 + vect__29.912_216;
base.cc:105:3: note: ------>vectorizing statement: _121 = &retval.397[iter.404_32];

base.cc:105:3: note: ------>vectorizing statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.916_218 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.917_219 = { 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 18446744073709551615
base.cc:105:3: note: vect_is_simple_use: operand 18446744073709551615
base.cc:105:3: note: Create vector_cst. nunits = 2
base.cc:105:3: note: created new init_stmt: vect_cst_.918_220 = { 18446744073709551615, 18446744073709551615 };
base.cc:105:3: note: vect_is_simple_use: operand 18446744073709551615
base.cc:105:3: note: add new stmt: vect__ifc__120.915_221 = VEC_COND_EXPR <vect__35.829_83 == vect_cst_.916_218, vect_cst_.917_219, vect_cst_.918_220>;
base.cc:105:3: note: ------>vectorizing statement: MASK_STORE (_121, 0B, _ifc__120, _30);

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _30
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _30
  def_stmt =  _30 = _28 + _29;
base.cc:105:3: note: vect_get_vec_def_for_operand: _ifc__120
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _ifc__120
  def_stmt =  _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: MEM[(double *)&retval.397]
base.cc:105:3: note: created vectp_retval.920_222
base.cc:105:3: note: add new stmt: MASK_STORE (vectp_retval.919_223, 0B, vect__ifc__120.915_221, vect__30.914_217);
base.cc:105:3: note: ------>vectorizing statement: iter.404_33 = iter.404_32 + 1;

base.cc:105:3: note: ------>vectorizing statement: ivtmp_175 = ivtmp_176 - 1;

base.cc:105:3: note: ------>vectorizing statement: vectp_x.823_89 = vectp_x.823_90 + 16;

base.cc:105:3: note: ------>vectorizing statement: vectp_mask.826_85 = vectp_mask.826_86 + 16;

base.cc:105:3: note: ------>vectorizing statement: vectp_retval.919_224 = vectp_retval.919_223 + 16;

base.cc:105:3: note: ------>vectorizing statement: if (ivtmp_175 != 0)


loop at base.cc:105: if (ivtmp_226 < 2)

base.cc:105:3: note: LOOP VECTORIZED

base.cc:104:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&x.398] = simd.400_44(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
base.cc:105:3: note: ===vect_slp_analyze_bb===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: not vectorized: no vectype for stmt: vect_x_1.825_88 = MEM[(double *)vectp_x.823_90];
 scalar_type: vector(2) double
base.cc:105:3: note: not vectorized: not enough data-refs in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: not vectorized: not enough data-refs in basic block.
base.cc:104:8: note: ===vect_slp_analyze_bb===
base.cc:104:8: note: === vect_analyze_data_refs ===
base.cc:104:8: note: not vectorized: no vectype for stmt: _36 = VIEW_CONVERT_EXPR<vector(4) double>(retval.397);
 scalar_type: vector(4) double
base.cc:104:8: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:106
base.cc:106:17: note: ===== analyze_loop_nest =====
base.cc:106:17: note: === vect_analyze_loop_form ===
base.cc:106:17: note: === get_loop_niters ===
base.cc:106:17: note: === vect_analyze_data_refs ===
base.cc:106:17: note: got vectype for stmt: x_1 = x.406[iter.409_32];
vector(4) double
base.cc:106:17: note: got vectype for stmt: retval.405[iter.409_32] = _30;
vector(4) double
base.cc:106:17: note: === vect_analyze_scalar_cycles ===
base.cc:106:17: note: Analyze phi: iter.409_32 = PHI <0(2), iter.409_33(4)>

base.cc:106:17: note: Access function of PHI: {0, +, 1}_1
base.cc:106:17: note: step: 1,  init: 0
base.cc:106:17: note: Detected induction.
base.cc:106:17: note: Analyze phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: Analyze phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:106:17: note: step: 4294967295,  init: 4
base.cc:106:17: note: Detected induction.
base.cc:106:17: note: === vect_pattern_recog ===
base.cc:106:17: note: vect_is_simple_use: operand _159
base.cc:106:17: note: def_stmt: _159 = _160 & _162;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _160
base.cc:106:17: note: def_stmt: _160 = ~_161;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _161
base.cc:106:17: note: def_stmt: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _162
base.cc:106:17: note: def_stmt: _162 = ~_163;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _163
base.cc:106:17: note: def_stmt: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: additional pattern stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand _164
base.cc:106:17: note: def_stmt: _164 = _165 & _166;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _165
base.cc:106:17: note: def_stmt: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _166
base.cc:106:17: note: def_stmt: _166 = ~_167;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _167
base.cc:106:17: note: def_stmt: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_recog_bool_pattern: detected:
base.cc:106:17: note: pattern recognized: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: additional pattern stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: additional pattern stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: additional pattern stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vect_analyze_data_ref_accesses ===
base.cc:106:17: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:106:17: note: init: phi relevant? iter.409_32 = PHI <0(2), iter.409_33(4)>
base.cc:106:17: note: init: phi relevant? .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>
base.cc:106:17: note: init: phi relevant? ivtmp_169 = PHI <4(2), ivtmp_168(4)>
base.cc:106:17: note: init: stmt relevant? x_1 = x.406[iter.409_32];
base.cc:106:17: note: init: stmt relevant? x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: init: stmt relevant? x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: init: stmt relevant? _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: init: stmt relevant? _166 = ~_167;
base.cc:106:17: note: init: stmt relevant? _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: init: stmt relevant? _164 = _165 & _166;
base.cc:106:17: note: init: stmt relevant? _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: init: stmt relevant? _162 = ~_163;
base.cc:106:17: note: init: stmt relevant? _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: init: stmt relevant? _160 = ~_161;
base.cc:106:17: note: init: stmt relevant? _159 = _160 & _162;
base.cc:106:17: note: init: stmt relevant? _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: init: stmt relevant? _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: init: stmt relevant? x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: init: stmt relevant? x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: init: stmt relevant? powmult_36 = x_5 * x_5;
base.cc:106:17: note: init: stmt relevant? _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: init: stmt relevant? z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: init: stmt relevant? _12 = x_5 * 2.0e+0;
base.cc:106:17: note: init: stmt relevant? _10 = z2_8 * _12;
base.cc:106:17: note: init: stmt relevant? z3_11 = _10 - x_5;
base.cc:106:17: note: init: stmt relevant? _13 = z3_11 * _12;
base.cc:106:17: note: init: stmt relevant? z4_14 = _13 - z2_8;
base.cc:106:17: note: init: stmt relevant? _16 = _12 * z4_14;
base.cc:106:17: note: init: stmt relevant? z5_17 = _16 - z3_11;
base.cc:106:17: note: init: stmt relevant? _19 = _12 * z5_17;
base.cc:106:17: note: init: stmt relevant? z6_20 = _19 - z4_14;
base.cc:106:17: note: init: stmt relevant? _22 = _12 * z6_20;
base.cc:106:17: note: init: stmt relevant? z7_23 = _22 - z5_17;
base.cc:106:17: note: init: stmt relevant? _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: init: stmt relevant? _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: init: stmt relevant? _26 = _24 + _25;
base.cc:106:17: note: init: stmt relevant? _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: init: stmt relevant? _28 = _26 + _27;
base.cc:106:17: note: init: stmt relevant? _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: init: stmt relevant? _30 = _28 + _29;
base.cc:106:17: note: init: stmt relevant? retval.405[iter.409_32] = _30;
base.cc:106:17: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: init: stmt relevant? iter.409_33 = iter.409_32 + 1;
base.cc:106:17: note: init: stmt relevant? ivtmp_168 = ivtmp_169 - 1;
base.cc:106:17: note: init: stmt relevant? if (ivtmp_168 != 0)
base.cc:106:17: note: worklist: examine stmt: retval.405[iter.409_32] = _30;
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _30 = _28 + _29;
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: last stmt in pattern. don't mark relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: last stmt in pattern. don't mark relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: worklist: examine stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand patt_153
base.cc:106:17: note: def_stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_150
base.cc:106:17: note: def_stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: worklist: examine stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: worklist: examine stmt: _10 = z2_8 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _16 = _12 * z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _13 = z3_11 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _22 = _12 * z6_20;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _19 = _12 * z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _28 = _26 + _27;
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: worklist: examine stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: worklist: examine stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: mark relevant 4, live 0.
base.cc:106:17: note: already marked relevant/live.
base.cc:106:17: note: === vect_analyze_data_ref_dependences ===
base.cc:106:17: note: === vect_determine_vectorization_factor ===
base.cc:106:17: note: ==> examining phi: iter.409_32 = PHI <0(2), iter.409_33(4)>

base.cc:106:17: note: ==> examining phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: ==> examining phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: ==> examining statement: x_1 = x.406[iter.409_32];

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_2 = x_1 - 1.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_3 = 5.0e-1 - x_1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _167 = x_1 >= 7.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _166 = ~_167;

base.cc:106:17: note: ==> examining pattern statement: patt_149 = patt_150 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _165 = x_1 >= 2.5e-1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: _164 = _165 & _166;

base.cc:106:17: note: ==> examining pattern statement: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _163 = x_1 >= 7.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _162 = ~_163;

base.cc:106:17: note: ==> examining pattern statement: patt_153 = patt_154 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _161 = x_1 >= 2.5e-1;

base.cc:106:17: note: ==> examining pattern statement: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _160 = ~_161;

base.cc:106:17: note: ==> examining pattern statement: patt_155 = patt_156 ^ 1;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _159 = _160 & _162;

base.cc:106:17: note: ==> examining pattern statement: patt_152 = patt_155 & patt_153;

base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: get vectype for scalar type:  unsigned long
base.cc:106:17: note: vectype: vector(4) unsigned long
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _ifc__157 = _159 ? x_1 : _ifc__158;

base.cc:106:17: note: ==> examining pattern statement: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_4 = _164 ? x_3 : _ifc__157;

base.cc:106:17: note: ==> examining pattern statement: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: x_5 = x_4 * 4.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: powmult_36 = x_5 * x_5;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _7 = powmult_36 * 2.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z2_8 = _7 - 1.0e+0;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _12 = x_5 * 2.0e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _10 = z2_8 * _12;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z3_11 = _10 - x_5;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _13 = z3_11 * _12;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z4_14 = _13 - z2_8;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _16 = _12 * z4_14;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z5_17 = _16 - z3_11;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _19 = _12 * z5_17;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z6_20 = _19 - z4_14;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _22 = _12 * z6_20;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: z7_23 = _22 - z5_17;

base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: get vectype for scalar type:  const double
base.cc:106:17: note: vectype: const vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _26 = _24 + _25;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _28 = _26 + _27;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: _30 = _28 + _29;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: retval.405[iter.409_32] = _30;

base.cc:106:17: note: get vectype for scalar type:  double
base.cc:106:17: note: vectype: vector(4) double
base.cc:106:17: note: nunits = 4
base.cc:106:17: note: ==> examining statement: iter.409_33 = iter.409_32 + 1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;

base.cc:106:17: note: skip.
base.cc:106:17: note: ==> examining statement: if (ivtmp_168 != 0)

base.cc:106:17: note: skip.
base.cc:106:17: note: vectorization factor = 4
base.cc:106:17: note: === vect_analyze_data_refs_alignment ===
base.cc:106:17: note: vect_compute_data_ref_alignment:
base.cc:106:17: note: force alignment of x.406[iter.409_32]
base.cc:106:17: note: misalign = 0 bytes of ref x.406[iter.409_32]
base.cc:106:17: note: vect_compute_data_ref_alignment:
base.cc:106:17: note: force alignment of retval.405[iter.409_32]
base.cc:106:17: note: misalign = 0 bytes of ref retval.405[iter.409_32]
base.cc:106:17: note: === vect_prune_runtime_alias_test_list ===
base.cc:106:17: note: === vect_enhance_data_refs_alignment ===
base.cc:106:17: note: vect_can_advance_ivs_p:
base.cc:106:17: note: Analyze phi: iter.409_32 = PHI <0(2), iter.409_33(4)>

base.cc:106:17: note: Analyze phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: virtual phi. skip.
base.cc:106:17: note: Analyze phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: === vect_analyze_slp ===
base.cc:106:17: note: === vect_make_slp_decision ===
base.cc:106:17: note: === vect_detect_hybrid_slp ===
base.cc:106:17: note: === vect_analyze_loop_operations ===
base.cc:106:17: note: examining phi: iter.409_32 = PHI <0(2), iter.409_33(4)>

base.cc:106:17: note: examining phi: .MEM_35 = PHI <.MEM_37(2), .MEM_38(4)>

base.cc:106:17: note: examining phi: ivtmp_169 = PHI <4(2), ivtmp_168(4)>

base.cc:106:17: note: ==> examining statement: x_1 = x.406[iter.409_32];
base.cc:106:17: note: num. args = 4 (not unary/binary/ternary op).
base.cc:106:17: note: vect_is_simple_use: operand x.406[iter.409_32]
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_model_load_cost: aligned.
base.cc:106:17: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _167 = x_1 >= 7.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _166 = ~_167;
base.cc:106:17: note: ==> examining pattern statement: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_150
base.cc:106:17: note: def_stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _165 = x_1 >= 2.5e-1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: _164 = _165 & _166;
base.cc:106:17: note: ==> examining pattern statement: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _163 = x_1 >= 7.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _162 = ~_163;
base.cc:106:17: note: ==> examining pattern statement: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _161 = x_1 >= 2.5e-1;
base.cc:106:17: note: ==> examining pattern statement: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _160 = ~_161;
base.cc:106:17: note: ==> examining pattern statement: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _159 = _160 & _162;
base.cc:106:17: note: ==> examining pattern statement: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_153
base.cc:106:17: note: def_stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: ==> examining pattern statement: patt_151 = patt_152 != 0 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand patt_152 != 0
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: ==> examining pattern statement: patt_147 = patt_148 != 0 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_is_simple_use: operand patt_148 != 0
base.cc:106:17: note: not ssa-name.
base.cc:106:17: note: use not simple.
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: ==> examining statement: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _10 = z2_8 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z3_11 = _10 - x_5;
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _13 = z3_11 * _12;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z4_14 = _13 - z2_8;
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _16 = _12 * z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _19 = _12 * z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z6_20 = _19 - z4_14;
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _22 = _12 * z6_20;
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _26 = _24 + _25;
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _28 = _26 + _27;
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:106:17: note: ==> examining statement: _30 = _28 + _29;
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: === vectorizable_operation ===
base.cc:106:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: retval.405[iter.409_32] = _30;
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_model_store_cost: aligned.
base.cc:106:17: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:106:17: note: ==> examining statement: iter.409_33 = iter.409_32 + 1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: ==> examining statement: if (ivtmp_168 != 0)
base.cc:106:17: note: irrelevant.
base.cc:106:17: note: vectorization_factor = 4, niters = 4
base.cc:106:17: note: === vect_update_slp_costs_according_to_vf ===
base.cc:106:17: note: cost model disabled.
base.cc:106:17: note: loop vectorized
base.cc:106:17: note: === vec_transform_loop ===
base.cc:106:17: note: ------>vectorizing phi: iter.409_32 = PHI <0(6), iter.409_33(4)>

base.cc:106:17: note: ------>vectorizing phi: .MEM_35 = PHI <.MEM_37(6), .MEM_38(4)>

base.cc:106:17: note: ------>vectorizing phi: ivtmp_169 = PHI <4(6), ivtmp_168(4)>

base.cc:106:17: note: ------>vectorizing statement: x_1 = x.406[iter.409_32];

base.cc:106:17: note: transform statement.
base.cc:106:17: note: transform load. ncopies = 1
base.cc:106:17: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: x.406
base.cc:106:17: note: created vectp_x.934_146
base.cc:106:17: note: add new stmt: vect_x_1.935_143 = MEM[(double *)vectp_x.933_145];
base.cc:106:17: note: ------>vectorizing statement: x_2 = x_1 - 1.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.937_142 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:106:17: note: add new stmt: vect_x_2.936_141 = vect_x_1.935_143 - vect_cst_.937_142;
base.cc:106:17: note: ------>vectorizing statement: x_3 = 5.0e-1 - x_1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: 5.0e-1
base.cc:106:17: note: vect_is_simple_use: operand 5.0e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.939_140 = { 5.0e-1, 5.0e-1, 5.0e-1, 5.0e-1 };
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: add new stmt: vect_x_3.938_139 = vect_cst_.939_140 - vect_x_1.935_143;
base.cc:106:17: note: ------>vectorizing statement: _167 = x_1 >= 7.5e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.941_138 = { 7.5e-1, 7.5e-1, 7.5e-1, 7.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.942_137 = { 1, 1, 1, 1 };
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.943_136 = { 0, 0, 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_150.940_135 = VEC_COND_EXPR <vect_x_1.935_143 >= vect_cst_.941_138, vect_cst_.942_137, vect_cst_.943_136>;
base.cc:106:17: note: ------>vectorizing statement: _166 = ~_167;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_150
base.cc:106:17: note: def_stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_150
base.cc:106:17: note: vect_is_simple_use: operand patt_150
base.cc:106:17: note: def_stmt: patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_150
  def_stmt =  patt_150 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.945_134 = { 1, 1, 1, 1 };
base.cc:106:17: note: add new stmt: vect_patt_149.944_133 = vect_patt_150.940_135 ^ vect_cst_.945_134;
base.cc:106:17: note: ------>vectorizing statement: _165 = x_1 >= 2.5e-1;

base.cc:106:17: note: ------>vectorizing statement: _164 = _165 & _166;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.947_132 = { 2.5e-1, 2.5e-1, 2.5e-1, 2.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_149
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_149
  def_stmt =  patt_149 = patt_150 ^ 1;
base.cc:106:17: note: vect_is_simple_use: operand patt_149
base.cc:106:17: note: def_stmt: patt_149 = patt_150 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.948_131 = { 0, 0, 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_148.946_130 = VEC_COND_EXPR <vect_x_1.935_143 >= vect_cst_.947_132, vect_patt_149.944_133, vect_cst_.948_131>;
base.cc:106:17: note: ------>vectorizing statement: _163 = x_1 >= 7.5e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.950_129 = { 7.5e-1, 7.5e-1, 7.5e-1, 7.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.951_128 = { 1, 1, 1, 1 };
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.952_127 = { 0, 0, 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_154.949_126 = VEC_COND_EXPR <vect_x_1.935_143 >= vect_cst_.950_129, vect_cst_.951_128, vect_cst_.952_127>;
base.cc:106:17: note: ------>vectorizing statement: _162 = ~_163;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_154
base.cc:106:17: note: vect_is_simple_use: operand patt_154
base.cc:106:17: note: def_stmt: patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_154
  def_stmt =  patt_154 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.954_125 = { 1, 1, 1, 1 };
base.cc:106:17: note: add new stmt: vect_patt_153.953_124 = vect_patt_154.949_126 ^ vect_cst_.954_125;
base.cc:106:17: note: ------>vectorizing statement: _161 = x_1 >= 2.5e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.956_123 = { 2.5e-1, 2.5e-1, 2.5e-1, 2.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 2.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.957_122 = { 1, 1, 1, 1 };
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.958_121 = { 0, 0, 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: add new stmt: vect_patt_156.955_120 = VEC_COND_EXPR <vect_x_1.935_143 >= vect_cst_.956_123, vect_cst_.957_122, vect_cst_.958_121>;
base.cc:106:17: note: ------>vectorizing statement: _160 = ~_161;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_156
base.cc:106:17: note: vect_is_simple_use: operand patt_156
base.cc:106:17: note: def_stmt: patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_156
  def_stmt =  patt_156 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1
base.cc:106:17: note: vect_is_simple_use: operand 1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.960_119 = { 1, 1, 1, 1 };
base.cc:106:17: note: add new stmt: vect_patt_155.959_118 = vect_patt_156.955_120 ^ vect_cst_.960_119;
base.cc:106:17: note: ------>vectorizing statement: _159 = _160 & _162;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand patt_153
base.cc:106:17: note: def_stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_155
base.cc:106:17: note: vect_is_simple_use: operand patt_155
base.cc:106:17: note: def_stmt: patt_155 = patt_156 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_155
  def_stmt =  patt_155 = patt_156 ^ 1;
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_153
base.cc:106:17: note: vect_is_simple_use: operand patt_153
base.cc:106:17: note: def_stmt: patt_153 = patt_154 ^ 1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_153
  def_stmt =  patt_153 = patt_154 ^ 1;
base.cc:106:17: note: add new stmt: vect_patt_152.961_117 = vect_patt_155.959_118 & vect_patt_153.953_124;
base.cc:106:17: note: ------>vectorizing statement: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.963_116 = { 7.5e-1, 7.5e-1, 7.5e-1, 7.5e-1 };
base.cc:106:17: note: vect_is_simple_use: operand 7.5e-1
base.cc:106:17: note: vect_get_vec_def_for_operand: x_2
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_2
  def_stmt =  x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: vect_is_simple_use: operand x_2
base.cc:106:17: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: add new stmt: vect__ifc__158.962_115 = VEC_COND_EXPR <vect_x_1.935_143 >= vect_cst_.963_116, vect_x_2.936_141, vect_x_1.935_143>;
base.cc:106:17: note: ------>vectorizing statement: _ifc__157 = _159 ? x_1 : _ifc__158;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_152
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_152
  def_stmt =  patt_152 = patt_155 & patt_153;
base.cc:106:17: note: vect_is_simple_use: operand patt_152
base.cc:106:17: note: def_stmt: patt_152 = patt_155 & patt_153;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.965_114 = { 0, 0, 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_get_vec_def_for_operand: x_1
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_1
  def_stmt =  x_1 = x.406[iter.409_32];
base.cc:106:17: note: vect_is_simple_use: operand x_1
base.cc:106:17: note: def_stmt: x_1 = x.406[iter.409_32];
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: _ifc__158
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _ifc__158
  def_stmt =  _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: vect_is_simple_use: operand _ifc__158
base.cc:106:17: note: def_stmt: _ifc__158 = x_1 >= 7.5e-1 ? x_2 : x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: add new stmt: vect_patt_151.964_113 = VEC_COND_EXPR <vect_patt_152.961_117 != vect_cst_.965_114, vect_x_1.935_143, vect__ifc__158.962_115>;
base.cc:106:17: note: ------>vectorizing statement: x_4 = _164 ? x_3 : _ifc__157;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: patt_148
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  patt_148
  def_stmt =  patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: vect_is_simple_use: operand patt_148
base.cc:106:17: note: def_stmt: patt_148 = x_1 >= 2.5e-1 ? patt_149 : 0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: 0
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.967_112 = { 0, 0, 0, 0 };
base.cc:106:17: note: vect_is_simple_use: operand 0
base.cc:106:17: note: vect_get_vec_def_for_operand: x_3
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_3
  def_stmt =  x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: vect_is_simple_use: operand x_3
base.cc:106:17: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_get_vec_def_for_operand: _ifc__157
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _ifc__157
  def_stmt =  _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: vect_is_simple_use: operand _ifc__157
base.cc:106:17: note: def_stmt: _ifc__157 = _159 ? x_1 : _ifc__158;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: add new stmt: vect_patt_147.966_111 = VEC_COND_EXPR <vect_patt_148.946_130 != vect_cst_.967_112, vect_x_3.938_139, vect_patt_151.964_113>;
base.cc:106:17: note: ------>vectorizing statement: x_5 = x_4 * 4.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_4
base.cc:106:17: note: vect_is_simple_use: operand x_4
base.cc:106:17: note: def_stmt: x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_4
  def_stmt =  x_4 = _164 ? x_3 : _ifc__157;
base.cc:106:17: note: vect_get_vec_def_for_operand: 4.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 4.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.969_110 = { 4.0e+0, 4.0e+0, 4.0e+0, 4.0e+0 };
base.cc:106:17: note: add new stmt: vect_x_5.968_109 = vect_patt_147.966_111 * vect_cst_.969_110;
base.cc:106:17: note: ------>vectorizing statement: powmult_36 = x_5 * x_5;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: add new stmt: vect_powmult_36.970_108 = vect_x_5.968_109 * vect_x_5.968_109;
base.cc:106:17: note: ------>vectorizing statement: _7 = powmult_36 * 2.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: powmult_36
base.cc:106:17: note: vect_is_simple_use: operand powmult_36
base.cc:106:17: note: def_stmt: powmult_36 = x_5 * x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  powmult_36
  def_stmt =  powmult_36 = x_5 * x_5;
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.972_107 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:106:17: note: add new stmt: vect__7.971_106 = vect_powmult_36.970_108 * vect_cst_.972_107;
base.cc:106:17: note: ------>vectorizing statement: z2_8 = _7 - 1.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _7
base.cc:106:17: note: vect_is_simple_use: operand _7
base.cc:106:17: note: def_stmt: _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _7
  def_stmt =  _7 = powmult_36 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 1.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.974_105 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:106:17: note: add new stmt: vect_z2_8.973_104 = vect__7.971_106 - vect_cst_.974_105;
base.cc:106:17: note: ------>vectorizing statement: _12 = x_5 * 2.0e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:106:17: note: vect_is_simple_use: operand 2.0e+0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.976_102 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:106:17: note: add new stmt: vect__12.975_101 = vect_x_5.968_109 * vect_cst_.976_102;
base.cc:106:17: note: ------>vectorizing statement: _10 = z2_8 * _12;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z2_8
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: add new stmt: vect__10.977_100 = vect_z2_8.973_104 * vect__12.975_101;
base.cc:106:17: note: ------>vectorizing statement: z3_11 = _10 - x_5;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _10
base.cc:106:17: note: vect_is_simple_use: operand _10
base.cc:106:17: note: def_stmt: _10 = z2_8 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _10
  def_stmt =  _10 = z2_8 * _12;
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: add new stmt: vect_z3_11.978_99 = vect__10.977_100 - vect_x_5.968_109;
base.cc:106:17: note: ------>vectorizing statement: _13 = z3_11 * _12;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z3_11
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: add new stmt: vect__13.979_98 = vect_z3_11.978_99 * vect__12.975_101;
base.cc:106:17: note: ------>vectorizing statement: z4_14 = _13 - z2_8;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _13
base.cc:106:17: note: vect_is_simple_use: operand _13
base.cc:106:17: note: def_stmt: _13 = z3_11 * _12;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _13
  def_stmt =  _13 = z3_11 * _12;
base.cc:106:17: note: vect_get_vec_def_for_operand: z2_8
base.cc:106:17: note: vect_is_simple_use: operand z2_8
base.cc:106:17: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:106:17: note: add new stmt: vect_z4_14.980_97 = vect__13.979_98 - vect_z2_8.973_104;
base.cc:106:17: note: ------>vectorizing statement: _16 = _12 * z4_14;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: z4_14
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:106:17: note: add new stmt: vect__16.981_96 = vect__12.975_101 * vect_z4_14.980_97;
base.cc:106:17: note: ------>vectorizing statement: z5_17 = _16 - z3_11;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _16
base.cc:106:17: note: vect_is_simple_use: operand _16
base.cc:106:17: note: def_stmt: _16 = _12 * z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _16
  def_stmt =  _16 = _12 * z4_14;
base.cc:106:17: note: vect_get_vec_def_for_operand: z3_11
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:106:17: note: add new stmt: vect_z5_17.982_95 = vect__16.981_96 - vect_z3_11.978_99;
base.cc:106:17: note: ------>vectorizing statement: _19 = _12 * z5_17;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: z5_17
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:106:17: note: add new stmt: vect__19.983_94 = vect__12.975_101 * vect_z5_17.982_95;
base.cc:106:17: note: ------>vectorizing statement: z6_20 = _19 - z4_14;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _19
base.cc:106:17: note: vect_is_simple_use: operand _19
base.cc:106:17: note: def_stmt: _19 = _12 * z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _19
  def_stmt =  _19 = _12 * z5_17;
base.cc:106:17: note: vect_get_vec_def_for_operand: z4_14
base.cc:106:17: note: vect_is_simple_use: operand z4_14
base.cc:106:17: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:106:17: note: add new stmt: vect_z6_20.984_93 = vect__19.983_94 - vect_z4_14.980_97;
base.cc:106:17: note: ------>vectorizing statement: _22 = _12 * z6_20;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _12
base.cc:106:17: note: vect_is_simple_use: operand _12
base.cc:106:17: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: z6_20
base.cc:106:17: note: vect_is_simple_use: operand z6_20
base.cc:106:17: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z6_20
  def_stmt =  z6_20 = _19 - z4_14;
base.cc:106:17: note: add new stmt: vect__22.985_92 = vect__12.975_101 * vect_z6_20.984_93;
base.cc:106:17: note: ------>vectorizing statement: z7_23 = _22 - z5_17;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _22
base.cc:106:17: note: vect_is_simple_use: operand _22
base.cc:106:17: note: def_stmt: _22 = _12 * z6_20;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _22
  def_stmt =  _22 = _12 * z6_20;
base.cc:106:17: note: vect_get_vec_def_for_operand: z5_17
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:106:17: note: add new stmt: vect_z7_23.986_91 = vect__22.985_92 - vect_z5_17.982_95;
base.cc:106:17: note: ------>vectorizing statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: x_5
base.cc:106:17: note: vect_is_simple_use: operand x_5
base.cc:106:17: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.988_90 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:106:17: note: add new stmt: vect__24.987_89 = vect_x_5.968_109 * vect_cst_.988_90;
base.cc:106:17: note: ------>vectorizing statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z3_11
base.cc:106:17: note: vect_is_simple_use: operand z3_11
base.cc:106:17: note: def_stmt: z3_11 = _10 - x_5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:106:17: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.990_88 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:106:17: note: add new stmt: vect__25.989_87 = vect_z3_11.978_99 * vect_cst_.990_88;
base.cc:106:17: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _24
base.cc:106:17: note: vect_is_simple_use: operand _24
base.cc:106:17: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _24
  def_stmt =  _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:106:17: note: vect_get_vec_def_for_operand: _25
base.cc:106:17: note: vect_is_simple_use: operand _25
base.cc:106:17: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _25
  def_stmt =  _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:106:17: note: add new stmt: vect__26.991_86 = vect__24.987_89 + vect__25.989_87;
base.cc:106:17: note: ------>vectorizing statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z5_17
base.cc:106:17: note: vect_is_simple_use: operand z5_17
base.cc:106:17: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:106:17: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.993_85 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:106:17: note: add new stmt: vect__27.992_84 = vect_z5_17.982_95 * vect_cst_.993_85;
base.cc:106:17: note: ------>vectorizing statement: _28 = _26 + _27;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _26
base.cc:106:17: note: vect_is_simple_use: operand _26
base.cc:106:17: note: def_stmt: _26 = _24 + _25;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:106:17: note: vect_get_vec_def_for_operand: _27
base.cc:106:17: note: vect_is_simple_use: operand _27
base.cc:106:17: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _27
  def_stmt =  _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:106:17: note: add new stmt: vect__28.994_83 = vect__26.991_86 + vect__27.992_84;
base.cc:106:17: note: ------>vectorizing statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: z7_23
base.cc:106:17: note: vect_is_simple_use: operand z7_23
base.cc:106:17: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  z7_23
  def_stmt =  z7_23 = _22 - z5_17;
base.cc:106:17: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:106:17: note: Create vector_cst. nunits = 4
base.cc:106:17: note: created new init_stmt: vect_cst_.996_82 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:106:17: note: add new stmt: vect__29.995_81 = vect_z7_23.986_91 * vect_cst_.996_82;
base.cc:106:17: note: ------>vectorizing statement: _30 = _28 + _29;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform binary/unary operation.
base.cc:106:17: note: vect_get_vec_def_for_operand: _28
base.cc:106:17: note: vect_is_simple_use: operand _28
base.cc:106:17: note: def_stmt: _28 = _26 + _27;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _28
  def_stmt =  _28 = _26 + _27;
base.cc:106:17: note: vect_get_vec_def_for_operand: _29
base.cc:106:17: note: vect_is_simple_use: operand _29
base.cc:106:17: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _29
  def_stmt =  _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:106:17: note: add new stmt: vect__30.997_80 = vect__28.994_83 + vect__29.995_81;
base.cc:106:17: note: ------>vectorizing statement: retval.405[iter.409_32] = _30;

base.cc:106:17: note: transform statement.
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: transform store. ncopies = 1
base.cc:106:17: note: vect_get_vec_def_for_operand: _30
base.cc:106:17: note: vect_is_simple_use: operand _30
base.cc:106:17: note: def_stmt: _30 = _28 + _29;
base.cc:106:17: note: type of def: 3.
base.cc:106:17: note: def =  _30
  def_stmt =  _30 = _28 + _29;
base.cc:106:17: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: retval.405
base.cc:106:17: note: created vectp_retval.999_79
base.cc:106:17: note: add new stmt: MEM[(double *)vectp_retval.998_78] = vect__30.997_80;
base.cc:106:17: note: ------>vectorizing statement: iter.409_33 = iter.409_32 + 1;

base.cc:106:17: note: ------>vectorizing statement: ivtmp_168 = ivtmp_169 - 1;

base.cc:106:17: note: ------>vectorizing statement: vectp_x.933_144 = vectp_x.933_145 + 32;

base.cc:106:17: note: ------>vectorizing statement: vectp_retval.998_77 = vectp_retval.998_78 + 32;

base.cc:106:17: note: ------>vectorizing statement: if (ivtmp_168 != 0)


loop at base.cc:106: if (ivtmp_75 < 1)

base.cc:106:17: note: LOOP VECTORIZED

base.cc:104:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&x.406] = simd.407_39(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:105
base.cc:105:3: note: ===== analyze_loop_nest =====
base.cc:105:3: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:105:3: note: === get_loop_niters ===
base.cc:105:3: note: === vect_analyze_data_refs ===
base.cc:105:3: note: got vectype for stmt: x_1 = x.411[iter.417_32];
vector(4) double
base.cc:105:3: note: got vectype for stmt: _34 = mask.412[iter.417_32];
vector(4) double
base.cc:105:3: note: got vectype for stmt: MASK_STORE (_121, 0B, _ifc__120, _30);
vector(4) double
base.cc:105:3: note: === vect_analyze_scalar_cycles ===
base.cc:105:3: note: Analyze phi: iter.417_32 = PHI <0(3), iter.417_33(5)>

base.cc:105:3: note: Access function of PHI: {0, +, 1}_1
base.cc:105:3: note: step: 1,  init: 0
base.cc:105:3: note: Detected induction.
base.cc:105:3: note: Analyze phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: Analyze phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:105:3: note: step: 4294967295,  init: 4
base.cc:105:3: note: Detected induction.
base.cc:105:3: note: === vect_pattern_recog ===
base.cc:105:3: note: vect_is_simple_use: operand _134
base.cc:105:3: note: def_stmt: _134 = _135 & _136;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _135
base.cc:105:3: note: def_stmt: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _136
base.cc:105:3: note: def_stmt: _136 = ~_137;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _137
base.cc:105:3: note: def_stmt: _137 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_recog_bool_pattern: detected:
base.cc:105:3: note: pattern recognized: patt_108 = patt_109 != 0 ? x_2 : x_1;
base.cc:105:3: note: additional pattern stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _124
base.cc:105:3: note: def_stmt: _124 = _125 & _ifc__119;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _125
base.cc:105:3: note: def_stmt: _125 = ~_126;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _126
base.cc:105:3: note: def_stmt: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__119
base.cc:105:3: note: def_stmt: _ifc__119 = _130 & _132;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _130
base.cc:105:3: note: def_stmt: _130 = ~_ifc__115;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__115
base.cc:105:3: note: def_stmt: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _132
base.cc:105:3: note: def_stmt: _132 = ~_ifc__116;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__116
base.cc:105:3: note: def_stmt: _ifc__116 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_recog_bool_pattern: detected:
base.cc:105:3: note: pattern recognized: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;
base.cc:105:3: note: additional pattern stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: additional pattern stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand _127
base.cc:105:3: note: def_stmt: _127 = _128 & _129;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _128
base.cc:105:3: note: def_stmt: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _129
base.cc:105:3: note: def_stmt: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__117
base.cc:105:3: note: def_stmt: _ifc__117 = ~_131;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _131
base.cc:105:3: note: def_stmt: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__118
base.cc:105:3: note: def_stmt: _ifc__118 = ~_133;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _133
base.cc:105:3: note: def_stmt: _133 = _35 == 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_recog_bool_pattern: detected:
base.cc:105:3: note: pattern recognized: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;
base.cc:105:3: note: additional pattern stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: additional pattern stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: additional pattern stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: additional pattern stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vect_analyze_data_ref_accesses ===
base.cc:105:3: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:105:3: note: init: phi relevant? iter.417_32 = PHI <0(3), iter.417_33(5)>
base.cc:105:3: note: init: phi relevant? .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>
base.cc:105:3: note: init: phi relevant? ivtmp_176 = PHI <4(3), ivtmp_175(5)>
base.cc:105:3: note: init: stmt relevant? x_1 = x.411[iter.417_32];
base.cc:105:3: note: init: stmt relevant? _34 = mask.412[iter.417_32];
base.cc:105:3: note: init: stmt relevant? _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: init: stmt relevant? _137 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _136 = ~_137;
base.cc:105:3: note: init: stmt relevant? _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _134 = _135 & _136;
base.cc:105:3: note: init: stmt relevant? x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: init: stmt relevant? _133 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _ifc__116 = _35 == 0;
base.cc:105:3: note: init: stmt relevant? _132 = ~_ifc__116;
base.cc:105:3: note: init: stmt relevant? _ifc__118 = ~_133;
base.cc:105:3: note: init: stmt relevant? _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: init: stmt relevant? _130 = ~_ifc__115;
base.cc:105:3: note: init: stmt relevant? _ifc__117 = ~_131;
base.cc:105:3: note: init: stmt relevant? _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: init: stmt relevant? _ifc__119 = _130 & _132;
base.cc:105:3: note: init: stmt relevant? _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: init: stmt relevant? _127 = _128 & _129;
base.cc:105:3: note: init: stmt relevant? x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: init: stmt relevant? _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: init: stmt relevant? _125 = ~_126;
base.cc:105:3: note: init: stmt relevant? _124 = _125 & _ifc__119;
base.cc:105:3: note: init: stmt relevant? _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: init: stmt relevant? _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: init: stmt relevant? x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: init: stmt relevant? x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: init: stmt relevant? powmult_39 = x_5 * x_5;
base.cc:105:3: note: init: stmt relevant? _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: init: stmt relevant? z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: init: stmt relevant? _12 = x_5 * 2.0e+0;
base.cc:105:3: note: init: stmt relevant? _10 = z2_8 * _12;
base.cc:105:3: note: init: stmt relevant? z3_11 = _10 - x_5;
base.cc:105:3: note: init: stmt relevant? _13 = z3_11 * _12;
base.cc:105:3: note: init: stmt relevant? z4_14 = _13 - z2_8;
base.cc:105:3: note: init: stmt relevant? _16 = _12 * z4_14;
base.cc:105:3: note: init: stmt relevant? z5_17 = _16 - z3_11;
base.cc:105:3: note: init: stmt relevant? _19 = _12 * z5_17;
base.cc:105:3: note: init: stmt relevant? z6_20 = _19 - z4_14;
base.cc:105:3: note: init: stmt relevant? _22 = _12 * z6_20;
base.cc:105:3: note: init: stmt relevant? z7_23 = _22 - z5_17;
base.cc:105:3: note: init: stmt relevant? _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: init: stmt relevant? _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: init: stmt relevant? _26 = _24 + _25;
base.cc:105:3: note: init: stmt relevant? _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: init: stmt relevant? _28 = _26 + _27;
base.cc:105:3: note: init: stmt relevant? _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: init: stmt relevant? _30 = _28 + _29;
base.cc:105:3: note: init: stmt relevant? _121 = &retval.410[iter.417_32];
base.cc:105:3: note: init: stmt relevant? _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: init: stmt relevant? MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: init: stmt relevant? iter.417_33 = iter.417_32 + 1;
base.cc:105:3: note: init: stmt relevant? ivtmp_175 = ivtmp_176 - 1;
base.cc:105:3: note: init: stmt relevant? if (ivtmp_175 != 0)
base.cc:105:3: note: worklist: examine stmt: MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _30 = _28 + _29;
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: last stmt in pattern. don't mark relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: last stmt in pattern. don't mark relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: last stmt in pattern. don't mark relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_108 = patt_109 != 0 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.412[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _34 = mask.412[iter.417_32];
base.cc:105:3: note: worklist: examine stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: worklist: examine stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: worklist: examine stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: worklist: examine stmt: _10 = z2_8 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _16 = _12 * z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _13 = z3_11 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _22 = _12 * z6_20;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _19 = _12 * z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _28 = _26 + _27;
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: worklist: examine stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: worklist: examine stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: mark relevant 4, live 0.
base.cc:105:3: note: already marked relevant/live.
base.cc:105:3: note: === vect_analyze_data_ref_dependences ===
base.cc:105:3: note: === vect_determine_vectorization_factor ===
base.cc:105:3: note: ==> examining phi: iter.417_32 = PHI <0(3), iter.417_33(5)>

base.cc:105:3: note: ==> examining phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: ==> examining phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: ==> examining statement: x_1 = x.411[iter.417_32];

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _34 = mask.412[iter.417_32];

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);

base.cc:105:3: note: get vectype for scalar type:  signed long
base.cc:105:3: note: vectype: vector(4) signed long
base.cc:105:3: note: get vectype for scalar type:  signed long
base.cc:105:3: note: vectype: vector(4) signed long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _137 = _35 == 0;

base.cc:105:3: note: ==> examining pattern statement: patt_112 = _35 == 0 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _136 = ~_137;

base.cc:105:3: note: ==> examining pattern statement: patt_111 = patt_112 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _135 = x_1 >= 7.5e-1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _134 = _135 & _136;

base.cc:105:3: note: ==> examining pattern statement: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: x_2 = x_1 - 1.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _133 = _35 == 0;

base.cc:105:3: note: ==> examining pattern statement: patt_96 = _35 == 0 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__116 = _35 == 0;

base.cc:105:3: note: ==> examining pattern statement: patt_103 = _35 == 0 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _132 = ~_ifc__116;

base.cc:105:3: note: ==> examining pattern statement: patt_102 = patt_103 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__118 = ~_133;

base.cc:105:3: note: ==> examining pattern statement: patt_95 = patt_96 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _131 = x_1 >= 7.5e-1;

base.cc:105:3: note: ==> examining pattern statement: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__115 = x_1 >= 7.5e-1;

base.cc:105:3: note: ==> examining pattern statement: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _130 = ~_ifc__115;

base.cc:105:3: note: ==> examining pattern statement: patt_104 = patt_105 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__117 = ~_131;

base.cc:105:3: note: ==> examining pattern statement: patt_97 = patt_98 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _129 = _ifc__117 & _ifc__118;

base.cc:105:3: note: ==> examining pattern statement: patt_94 = patt_97 & patt_95;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__119 = _130 & _132;

base.cc:105:3: note: ==> examining pattern statement: patt_101 = patt_104 & patt_102;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _128 = x_1 >= 2.5e-1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _127 = _128 & _129;

base.cc:105:3: note: ==> examining pattern statement: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: x_3 = 5.0e-1 - x_1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _126 = x_1 >= 2.5e-1;

base.cc:105:3: note: ==> examining pattern statement: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _125 = ~_126;

base.cc:105:3: note: ==> examining pattern statement: patt_106 = patt_107 ^ 1;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _124 = _125 & _ifc__119;

base.cc:105:3: note: ==> examining pattern statement: patt_100 = patt_106 & patt_101;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__123 = _134 ? x_2 : x_1;

base.cc:105:3: note: ==> examining pattern statement: patt_108 = patt_109 != 0 ? x_2 : x_1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _ifc__122 = _124 ? x_1 : _ifc__123;

base.cc:105:3: note: ==> examining pattern statement: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: x_4 = _127 ? x_3 : _ifc__122;

base.cc:105:3: note: ==> examining pattern statement: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: x_5 = x_4 * 4.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: powmult_39 = x_5 * x_5;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _7 = powmult_39 * 2.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z2_8 = _7 - 1.0e+0;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _12 = x_5 * 2.0e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _10 = z2_8 * _12;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z3_11 = _10 - x_5;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _13 = z3_11 * _12;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z4_14 = _13 - z2_8;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _16 = _12 * z4_14;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z5_17 = _16 - z3_11;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _19 = _12 * z5_17;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z6_20 = _19 - z4_14;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _22 = _12 * z6_20;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: z7_23 = _22 - z5_17;

base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: get vectype for scalar type:  const double
base.cc:105:3: note: vectype: const vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _26 = _24 + _25;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _28 = _26 + _27;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _30 = _28 + _29;

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: _121 = &retval.410[iter.417_32];

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;

base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: get vectype for scalar type:  unsigned long
base.cc:105:3: note: vectype: vector(4) unsigned long
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: MASK_STORE (_121, 0B, _ifc__120, _30);

base.cc:105:3: note: get vectype for scalar type:  double
base.cc:105:3: note: vectype: vector(4) double
base.cc:105:3: note: nunits = 4
base.cc:105:3: note: ==> examining statement: iter.417_33 = iter.417_32 + 1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: ivtmp_175 = ivtmp_176 - 1;

base.cc:105:3: note: skip.
base.cc:105:3: note: ==> examining statement: if (ivtmp_175 != 0)

base.cc:105:3: note: skip.
base.cc:105:3: note: vectorization factor = 4
base.cc:105:3: note: === vect_analyze_data_refs_alignment ===
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of x.411[iter.417_32]
base.cc:105:3: note: misalign = 0 bytes of ref x.411[iter.417_32]
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of mask.412[iter.417_32]
base.cc:105:3: note: misalign = 0 bytes of ref mask.412[iter.417_32]
base.cc:105:3: note: vect_compute_data_ref_alignment:
base.cc:105:3: note: force alignment of *_121
base.cc:105:3: note: misalign = 0 bytes of ref *_121
base.cc:105:3: note: === vect_prune_runtime_alias_test_list ===
base.cc:105:3: note: === vect_enhance_data_refs_alignment ===
base.cc:105:3: note: vect_can_advance_ivs_p:
base.cc:105:3: note: Analyze phi: iter.417_32 = PHI <0(3), iter.417_33(5)>

base.cc:105:3: note: Analyze phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: virtual phi. skip.
base.cc:105:3: note: Analyze phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: === vect_analyze_slp ===
base.cc:105:3: note: === vect_make_slp_decision ===
base.cc:105:3: note: === vect_detect_hybrid_slp ===
base.cc:105:3: note: === vect_analyze_loop_operations ===
base.cc:105:3: note: examining phi: iter.417_32 = PHI <0(3), iter.417_33(5)>

base.cc:105:3: note: examining phi: .MEM_37 = PHI <.MEM_42(3), .MEM_114(5)>

base.cc:105:3: note: examining phi: ivtmp_176 = PHI <4(3), ivtmp_175(5)>

base.cc:105:3: note: ==> examining statement: x_1 = x.411[iter.417_32];
base.cc:105:3: note: num. args = 4 (not unary/binary/ternary op).
base.cc:105:3: note: vect_is_simple_use: operand x.411[iter.417_32]
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_model_load_cost: aligned.
base.cc:105:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _34 = mask.412[iter.417_32];
base.cc:105:3: note: num. args = 4 (not unary/binary/ternary op).
base.cc:105:3: note: vect_is_simple_use: operand mask.412[iter.417_32]
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_model_load_cost: aligned.
base.cc:105:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand VIEW_CONVERT_EXPR<signed long>(_34)
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.412[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_assignment ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _137 = _35 == 0;
base.cc:105:3: note: ==> examining pattern statement: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _136 = ~_137;
base.cc:105:3: note: ==> examining pattern statement: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _135 = x_1 >= 7.5e-1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: _134 = _135 & _136;
base.cc:105:3: note: ==> examining pattern statement: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _133 = _35 == 0;
base.cc:105:3: note: ==> examining pattern statement: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _ifc__116 = _35 == 0;
base.cc:105:3: note: ==> examining pattern statement: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _132 = ~_ifc__116;
base.cc:105:3: note: ==> examining pattern statement: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _ifc__118 = ~_133;
base.cc:105:3: note: ==> examining pattern statement: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _131 = x_1 >= 7.5e-1;
base.cc:105:3: note: ==> examining pattern statement: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _ifc__115 = x_1 >= 7.5e-1;
base.cc:105:3: note: ==> examining pattern statement: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 7.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _130 = ~_ifc__115;
base.cc:105:3: note: ==> examining pattern statement: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _ifc__117 = ~_131;
base.cc:105:3: note: ==> examining pattern statement: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _129 = _ifc__117 & _ifc__118;
base.cc:105:3: note: ==> examining pattern statement: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _ifc__119 = _130 & _132;
base.cc:105:3: note: ==> examining pattern statement: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _128 = x_1 >= 2.5e-1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: _127 = _128 & _129;
base.cc:105:3: note: ==> examining pattern statement: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand 5.0e-1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _126 = x_1 >= 2.5e-1;
base.cc:105:3: note: ==> examining pattern statement: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_is_simple_use: operand x_1 >= 2.5e-1
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _125 = ~_126;
base.cc:105:3: note: ==> examining pattern statement: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _124 = _125 & _ifc__119;
base.cc:105:3: note: ==> examining pattern statement: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: ==> examining pattern statement: patt_108 = patt_109 != 0 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand patt_109 != 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: ==> examining pattern statement: patt_99 = patt_100 != 0 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand patt_100 != 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: ==> examining pattern statement: patt_92 = patt_93 != 0 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_is_simple_use: operand patt_93 != 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _10 = z2_8 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z3_11 = _10 - x_5;
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _13 = z3_11 * _12;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z4_14 = _13 - z2_8;
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _16 = _12 * z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _19 = _12 * z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z6_20 = _19 - z4_14;
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _22 = _12 * z6_20;
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _26 = _24 + _25;
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _28 = _26 + _27;
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:105:3: note: ==> examining statement: _30 = _28 + _29;
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: === vectorizable_operation ===
base.cc:105:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: _121 = &retval.410[iter.417_32];
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: vect_is_simple_use: operand _35 == 0
base.cc:105:3: note: not ssa-name.
base.cc:105:3: note: use not simple.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: ==> examining statement: MASK_STORE (_121, 0B, _ifc__120, _30);
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_model_store_cost: aligned.
base.cc:105:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:105:3: note: ==> examining statement: iter.417_33 = iter.417_32 + 1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: ivtmp_175 = ivtmp_176 - 1;
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: ==> examining statement: if (ivtmp_175 != 0)
base.cc:105:3: note: irrelevant.
base.cc:105:3: note: vectorization_factor = 4, niters = 4
base.cc:105:3: note: === vect_update_slp_costs_according_to_vf ===
base.cc:105:3: note: cost model disabled.
base.cc:105:3: note: loop vectorized
base.cc:105:3: note: === vec_transform_loop ===
base.cc:105:3: note: ------>vectorizing phi: iter.417_32 = PHI <0(17), iter.417_33(5)>

base.cc:105:3: note: ------>vectorizing phi: .MEM_37 = PHI <.MEM_42(17), .MEM_114(5)>

base.cc:105:3: note: ------>vectorizing phi: ivtmp_176 = PHI <4(17), ivtmp_175(5)>

base.cc:105:3: note: ------>vectorizing statement: x_1 = x.411[iter.417_32];

base.cc:105:3: note: transform statement.
base.cc:105:3: note: transform load. ncopies = 1
base.cc:105:3: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: x.411
base.cc:105:3: note: created vectp_x.1003_91
base.cc:105:3: note: add new stmt: vect_x_1.1004_88 = MEM[(double *)vectp_x.1002_90];
base.cc:105:3: note: ------>vectorizing statement: _34 = mask.412[iter.417_32];

base.cc:105:3: note: transform statement.
base.cc:105:3: note: transform load. ncopies = 1
base.cc:105:3: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: mask.412
base.cc:105:3: note: created vectp_mask.1006_87
base.cc:105:3: note: add new stmt: vect__34.1007_84 = MEM[(double *)vectp_mask.1005_86];
base.cc:105:3: note: ------>vectorizing statement: _35 = VIEW_CONVERT_EXPR<signed long>(_34);

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.412[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform assignment.
base.cc:105:3: note: vect_get_vec_def_for_operand: _34
base.cc:105:3: note: vect_is_simple_use: operand _34
base.cc:105:3: note: def_stmt: _34 = mask.412[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _34
  def_stmt =  _34 = mask.412[iter.417_32];
base.cc:105:3: note: add new stmt: vect__35.1008_83 = VIEW_CONVERT_EXPR<vector(4) signed long>(vect__34.1007_84);
base.cc:105:3: note: ------>vectorizing statement: _137 = _35 == 0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1010_82 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1011_81 = { 1, 1, 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1012_80 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_112.1009_79 = VEC_COND_EXPR <vect__35.1008_83 == vect_cst_.1010_82, vect_cst_.1011_81, vect_cst_.1012_80>;
base.cc:105:3: note: ------>vectorizing statement: _136 = ~_137;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_112
base.cc:105:3: note: vect_is_simple_use: operand patt_112
base.cc:105:3: note: def_stmt: patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_112
  def_stmt =  patt_112 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1014_78 = { 1, 1, 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_111.1013_77 = vect_patt_112.1009_79 ^ vect_cst_.1014_78;
base.cc:105:3: note: ------>vectorizing statement: _135 = x_1 >= 7.5e-1;

base.cc:105:3: note: ------>vectorizing statement: _134 = _135 & _136;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1016_76 = { 7.5e-1, 7.5e-1, 7.5e-1, 7.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_111
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_111
  def_stmt =  patt_111 = patt_112 ^ 1;
base.cc:105:3: note: vect_is_simple_use: operand patt_111
base.cc:105:3: note: def_stmt: patt_111 = patt_112 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1017_75 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_109.1015_74 = VEC_COND_EXPR <vect_x_1.1004_88 >= vect_cst_.1016_76, vect_patt_111.1013_77, vect_cst_.1017_75>;
base.cc:105:3: note: ------>vectorizing statement: x_2 = x_1 - 1.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1019_73 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:105:3: note: add new stmt: vect_x_2.1018_72 = vect_x_1.1004_88 - vect_cst_.1019_73;
base.cc:105:3: note: ------>vectorizing statement: _133 = _35 == 0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1021_71 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1022_70 = { 1, 1, 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1023_69 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_96.1020_68 = VEC_COND_EXPR <vect__35.1008_83 == vect_cst_.1021_71, vect_cst_.1022_70, vect_cst_.1023_69>;
base.cc:105:3: note: ------>vectorizing statement: _ifc__116 = _35 == 0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1025_67 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1026_66 = { 1, 1, 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1027_65 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_103.1024_64 = VEC_COND_EXPR <vect__35.1008_83 == vect_cst_.1025_67, vect_cst_.1026_66, vect_cst_.1027_65>;
base.cc:105:3: note: ------>vectorizing statement: _132 = ~_ifc__116;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_103
base.cc:105:3: note: vect_is_simple_use: operand patt_103
base.cc:105:3: note: def_stmt: patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_103
  def_stmt =  patt_103 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1029_63 = { 1, 1, 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_102.1028_62 = vect_patt_103.1024_64 ^ vect_cst_.1029_63;
base.cc:105:3: note: ------>vectorizing statement: _ifc__118 = ~_133;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_96
base.cc:105:3: note: vect_is_simple_use: operand patt_96
base.cc:105:3: note: def_stmt: patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_96
  def_stmt =  patt_96 = _35 == 0 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1031_61 = { 1, 1, 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_95.1030_60 = vect_patt_96.1020_68 ^ vect_cst_.1031_61;
base.cc:105:3: note: ------>vectorizing statement: _131 = x_1 >= 7.5e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1033_59 = { 7.5e-1, 7.5e-1, 7.5e-1, 7.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1034_58 = { 1, 1, 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1035_57 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_98.1032_56 = VEC_COND_EXPR <vect_x_1.1004_88 >= vect_cst_.1033_59, vect_cst_.1034_58, vect_cst_.1035_57>;
base.cc:105:3: note: ------>vectorizing statement: _ifc__115 = x_1 >= 7.5e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 7.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1037_55 = { 7.5e-1, 7.5e-1, 7.5e-1, 7.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 7.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1038_54 = { 1, 1, 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1039_53 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_105.1036_52 = VEC_COND_EXPR <vect_x_1.1004_88 >= vect_cst_.1037_55, vect_cst_.1038_54, vect_cst_.1039_53>;
base.cc:105:3: note: ------>vectorizing statement: _130 = ~_ifc__115;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_105
base.cc:105:3: note: vect_is_simple_use: operand patt_105
base.cc:105:3: note: def_stmt: patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_105
  def_stmt =  patt_105 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1041_51 = { 1, 1, 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_104.1040_50 = vect_patt_105.1036_52 ^ vect_cst_.1041_51;
base.cc:105:3: note: ------>vectorizing statement: _ifc__117 = ~_131;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_98
base.cc:105:3: note: vect_is_simple_use: operand patt_98
base.cc:105:3: note: def_stmt: patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_98
  def_stmt =  patt_98 = x_1 >= 7.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1043_49 = { 1, 1, 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_97.1042_48 = vect_patt_98.1032_56 ^ vect_cst_.1043_49;
base.cc:105:3: note: ------>vectorizing statement: _129 = _ifc__117 & _ifc__118;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_97
base.cc:105:3: note: vect_is_simple_use: operand patt_97
base.cc:105:3: note: def_stmt: patt_97 = patt_98 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_97
  def_stmt =  patt_97 = patt_98 ^ 1;
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_95
base.cc:105:3: note: vect_is_simple_use: operand patt_95
base.cc:105:3: note: def_stmt: patt_95 = patt_96 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_95
  def_stmt =  patt_95 = patt_96 ^ 1;
base.cc:105:3: note: add new stmt: vect_patt_94.1044_47 = vect_patt_97.1042_48 & vect_patt_95.1030_60;
base.cc:105:3: note: ------>vectorizing statement: _ifc__119 = _130 & _132;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_104
base.cc:105:3: note: vect_is_simple_use: operand patt_104
base.cc:105:3: note: def_stmt: patt_104 = patt_105 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_104
  def_stmt =  patt_104 = patt_105 ^ 1;
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_102
base.cc:105:3: note: vect_is_simple_use: operand patt_102
base.cc:105:3: note: def_stmt: patt_102 = patt_103 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_102
  def_stmt =  patt_102 = patt_103 ^ 1;
base.cc:105:3: note: add new stmt: vect_patt_101.1045_41 = vect_patt_104.1040_50 & vect_patt_102.1028_62;
base.cc:105:3: note: ------>vectorizing statement: _128 = x_1 >= 2.5e-1;

base.cc:105:3: note: ------>vectorizing statement: _127 = _128 & _129;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1047_6 = { 2.5e-1, 2.5e-1, 2.5e-1, 2.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_94
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_94
  def_stmt =  patt_94 = patt_97 & patt_95;
base.cc:105:3: note: vect_is_simple_use: operand patt_94
base.cc:105:3: note: def_stmt: patt_94 = patt_97 & patt_95;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1048_110 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_93.1046_9 = VEC_COND_EXPR <vect_x_1.1004_88 >= vect_cst_.1047_6, vect_patt_94.1044_47, vect_cst_.1048_110>;
base.cc:105:3: note: ------>vectorizing statement: x_3 = 5.0e-1 - x_1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand 5.0e-1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: 5.0e-1
base.cc:105:3: note: vect_is_simple_use: operand 5.0e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1050_15 = { 5.0e-1, 5.0e-1, 5.0e-1, 5.0e-1 };
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: add new stmt: vect_x_3.1049_18 = vect_cst_.1050_15 - vect_x_1.1004_88;
base.cc:105:3: note: ------>vectorizing statement: _126 = x_1 >= 2.5e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.5e-1
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1052_21 = { 2.5e-1, 2.5e-1, 2.5e-1, 2.5e-1 };
base.cc:105:3: note: vect_is_simple_use: operand 2.5e-1
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1053_46 = { 1, 1, 1, 1 };
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1054_177 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: add new stmt: vect_patt_107.1051_178 = VEC_COND_EXPR <vect_x_1.1004_88 >= vect_cst_.1052_21, vect_cst_.1053_46, vect_cst_.1054_177>;
base.cc:105:3: note: ------>vectorizing statement: _125 = ~_126;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_107
base.cc:105:3: note: vect_is_simple_use: operand patt_107
base.cc:105:3: note: def_stmt: patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_107
  def_stmt =  patt_107 = x_1 >= 2.5e-1 ? 1 : 0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1
base.cc:105:3: note: vect_is_simple_use: operand 1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1056_179 = { 1, 1, 1, 1 };
base.cc:105:3: note: add new stmt: vect_patt_106.1055_180 = vect_patt_107.1051_178 ^ vect_cst_.1056_179;
base.cc:105:3: note: ------>vectorizing statement: _124 = _125 & _ifc__119;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_106
base.cc:105:3: note: vect_is_simple_use: operand patt_106
base.cc:105:3: note: def_stmt: patt_106 = patt_107 ^ 1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_106
  def_stmt =  patt_106 = patt_107 ^ 1;
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_101
base.cc:105:3: note: vect_is_simple_use: operand patt_101
base.cc:105:3: note: def_stmt: patt_101 = patt_104 & patt_102;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_101
  def_stmt =  patt_101 = patt_104 & patt_102;
base.cc:105:3: note: add new stmt: vect_patt_100.1057_181 = vect_patt_106.1055_180 & vect_patt_101.1045_41;
base.cc:105:3: note: ------>vectorizing statement: _ifc__123 = _134 ? x_2 : x_1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_109
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_109
  def_stmt =  patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: vect_is_simple_use: operand patt_109
base.cc:105:3: note: def_stmt: patt_109 = x_1 >= 7.5e-1 ? patt_111 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1059_182 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: x_2
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_2
  def_stmt =  x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: vect_is_simple_use: operand x_2
base.cc:105:3: note: def_stmt: x_2 = x_1 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: add new stmt: vect_patt_108.1058_183 = VEC_COND_EXPR <vect_patt_109.1015_74 != vect_cst_.1059_182, vect_x_2.1018_72, vect_x_1.1004_88>;
base.cc:105:3: note: ------>vectorizing statement: _ifc__122 = _124 ? x_1 : _ifc__123;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_100
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_100
  def_stmt =  patt_100 = patt_106 & patt_101;
base.cc:105:3: note: vect_is_simple_use: operand patt_100
base.cc:105:3: note: def_stmt: patt_100 = patt_106 & patt_101;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1061_184 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: x_1
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_1
  def_stmt =  x_1 = x.411[iter.417_32];
base.cc:105:3: note: vect_is_simple_use: operand x_1
base.cc:105:3: note: def_stmt: x_1 = x.411[iter.417_32];
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _ifc__123
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _ifc__123
  def_stmt =  _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__123
base.cc:105:3: note: def_stmt: _ifc__123 = _134 ? x_2 : x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: add new stmt: vect_patt_99.1060_185 = VEC_COND_EXPR <vect_patt_100.1057_181 != vect_cst_.1061_184, vect_x_1.1004_88, vect_patt_108.1058_183>;
base.cc:105:3: note: ------>vectorizing statement: x_4 = _127 ? x_3 : _ifc__122;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: patt_93
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  patt_93
  def_stmt =  patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: vect_is_simple_use: operand patt_93
base.cc:105:3: note: def_stmt: patt_93 = x_1 >= 2.5e-1 ? patt_94 : 0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1063_186 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: x_3
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_3
  def_stmt =  x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: vect_is_simple_use: operand x_3
base.cc:105:3: note: def_stmt: x_3 = 5.0e-1 - x_1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _ifc__122
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _ifc__122
  def_stmt =  _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: vect_is_simple_use: operand _ifc__122
base.cc:105:3: note: def_stmt: _ifc__122 = _124 ? x_1 : _ifc__123;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: add new stmt: vect_patt_92.1062_187 = VEC_COND_EXPR <vect_patt_93.1046_9 != vect_cst_.1063_186, vect_x_3.1049_18, vect_patt_99.1060_185>;
base.cc:105:3: note: ------>vectorizing statement: x_5 = x_4 * 4.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_4
base.cc:105:3: note: vect_is_simple_use: operand x_4
base.cc:105:3: note: def_stmt: x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_4
  def_stmt =  x_4 = _127 ? x_3 : _ifc__122;
base.cc:105:3: note: vect_get_vec_def_for_operand: 4.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 4.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1065_188 = { 4.0e+0, 4.0e+0, 4.0e+0, 4.0e+0 };
base.cc:105:3: note: add new stmt: vect_x_5.1064_189 = vect_patt_92.1062_187 * vect_cst_.1065_188;
base.cc:105:3: note: ------>vectorizing statement: powmult_39 = x_5 * x_5;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: add new stmt: vect_powmult_39.1066_190 = vect_x_5.1064_189 * vect_x_5.1064_189;
base.cc:105:3: note: ------>vectorizing statement: _7 = powmult_39 * 2.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: powmult_39
base.cc:105:3: note: vect_is_simple_use: operand powmult_39
base.cc:105:3: note: def_stmt: powmult_39 = x_5 * x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  powmult_39
  def_stmt =  powmult_39 = x_5 * x_5;
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1068_191 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:105:3: note: add new stmt: vect__7.1067_192 = vect_powmult_39.1066_190 * vect_cst_.1068_191;
base.cc:105:3: note: ------>vectorizing statement: z2_8 = _7 - 1.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _7
base.cc:105:3: note: vect_is_simple_use: operand _7
base.cc:105:3: note: def_stmt: _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _7
  def_stmt =  _7 = powmult_39 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 1.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1070_193 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:105:3: note: add new stmt: vect_z2_8.1069_194 = vect__7.1067_192 - vect_cst_.1070_193;
base.cc:105:3: note: ------>vectorizing statement: _12 = x_5 * 2.0e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:105:3: note: vect_is_simple_use: operand 2.0e+0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1072_195 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:105:3: note: add new stmt: vect__12.1071_196 = vect_x_5.1064_189 * vect_cst_.1072_195;
base.cc:105:3: note: ------>vectorizing statement: _10 = z2_8 * _12;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z2_8
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: add new stmt: vect__10.1073_197 = vect_z2_8.1069_194 * vect__12.1071_196;
base.cc:105:3: note: ------>vectorizing statement: z3_11 = _10 - x_5;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _10
base.cc:105:3: note: vect_is_simple_use: operand _10
base.cc:105:3: note: def_stmt: _10 = z2_8 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _10
  def_stmt =  _10 = z2_8 * _12;
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: add new stmt: vect_z3_11.1074_198 = vect__10.1073_197 - vect_x_5.1064_189;
base.cc:105:3: note: ------>vectorizing statement: _13 = z3_11 * _12;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z3_11
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: add new stmt: vect__13.1075_199 = vect_z3_11.1074_198 * vect__12.1071_196;
base.cc:105:3: note: ------>vectorizing statement: z4_14 = _13 - z2_8;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _13
base.cc:105:3: note: vect_is_simple_use: operand _13
base.cc:105:3: note: def_stmt: _13 = z3_11 * _12;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _13
  def_stmt =  _13 = z3_11 * _12;
base.cc:105:3: note: vect_get_vec_def_for_operand: z2_8
base.cc:105:3: note: vect_is_simple_use: operand z2_8
base.cc:105:3: note: def_stmt: z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z2_8
  def_stmt =  z2_8 = _7 - 1.0e+0;
base.cc:105:3: note: add new stmt: vect_z4_14.1076_200 = vect__13.1075_199 - vect_z2_8.1069_194;
base.cc:105:3: note: ------>vectorizing statement: _16 = _12 * z4_14;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: z4_14
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:105:3: note: add new stmt: vect__16.1077_201 = vect__12.1071_196 * vect_z4_14.1076_200;
base.cc:105:3: note: ------>vectorizing statement: z5_17 = _16 - z3_11;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _16
base.cc:105:3: note: vect_is_simple_use: operand _16
base.cc:105:3: note: def_stmt: _16 = _12 * z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _16
  def_stmt =  _16 = _12 * z4_14;
base.cc:105:3: note: vect_get_vec_def_for_operand: z3_11
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:105:3: note: add new stmt: vect_z5_17.1078_202 = vect__16.1077_201 - vect_z3_11.1074_198;
base.cc:105:3: note: ------>vectorizing statement: _19 = _12 * z5_17;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: z5_17
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:105:3: note: add new stmt: vect__19.1079_203 = vect__12.1071_196 * vect_z5_17.1078_202;
base.cc:105:3: note: ------>vectorizing statement: z6_20 = _19 - z4_14;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _19
base.cc:105:3: note: vect_is_simple_use: operand _19
base.cc:105:3: note: def_stmt: _19 = _12 * z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _19
  def_stmt =  _19 = _12 * z5_17;
base.cc:105:3: note: vect_get_vec_def_for_operand: z4_14
base.cc:105:3: note: vect_is_simple_use: operand z4_14
base.cc:105:3: note: def_stmt: z4_14 = _13 - z2_8;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z4_14
  def_stmt =  z4_14 = _13 - z2_8;
base.cc:105:3: note: add new stmt: vect_z6_20.1080_204 = vect__19.1079_203 - vect_z4_14.1076_200;
base.cc:105:3: note: ------>vectorizing statement: _22 = _12 * z6_20;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _12
base.cc:105:3: note: vect_is_simple_use: operand _12
base.cc:105:3: note: def_stmt: _12 = x_5 * 2.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _12
  def_stmt =  _12 = x_5 * 2.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: z6_20
base.cc:105:3: note: vect_is_simple_use: operand z6_20
base.cc:105:3: note: def_stmt: z6_20 = _19 - z4_14;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z6_20
  def_stmt =  z6_20 = _19 - z4_14;
base.cc:105:3: note: add new stmt: vect__22.1081_205 = vect__12.1071_196 * vect_z6_20.1080_204;
base.cc:105:3: note: ------>vectorizing statement: z7_23 = _22 - z5_17;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _22
base.cc:105:3: note: vect_is_simple_use: operand _22
base.cc:105:3: note: def_stmt: _22 = _12 * z6_20;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _22
  def_stmt =  _22 = _12 * z6_20;
base.cc:105:3: note: vect_get_vec_def_for_operand: z5_17
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:105:3: note: add new stmt: vect_z7_23.1082_206 = vect__22.1081_205 - vect_z5_17.1078_202;
base.cc:105:3: note: ------>vectorizing statement: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: x_5
base.cc:105:3: note: vect_is_simple_use: operand x_5
base.cc:105:3: note: def_stmt: x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  x_5
  def_stmt =  x_5 = x_4 * 4.0e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1084_207 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:105:3: note: add new stmt: vect__24.1083_208 = vect_x_5.1064_189 * vect_cst_.1084_207;
base.cc:105:3: note: ------>vectorizing statement: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z3_11
base.cc:105:3: note: vect_is_simple_use: operand z3_11
base.cc:105:3: note: def_stmt: z3_11 = _10 - x_5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z3_11
  def_stmt =  z3_11 = _10 - x_5;
base.cc:105:3: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1086_209 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:105:3: note: add new stmt: vect__25.1085_210 = vect_z3_11.1074_198 * vect_cst_.1086_209;
base.cc:105:3: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _24
base.cc:105:3: note: vect_is_simple_use: operand _24
base.cc:105:3: note: def_stmt: _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _24
  def_stmt =  _24 = x_5 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:105:3: note: vect_get_vec_def_for_operand: _25
base.cc:105:3: note: vect_is_simple_use: operand _25
base.cc:105:3: note: def_stmt: _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _25
  def_stmt =  _25 = z3_11 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:105:3: note: add new stmt: vect__26.1087_211 = vect__24.1083_208 + vect__25.1085_210;
base.cc:105:3: note: ------>vectorizing statement: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z5_17
base.cc:105:3: note: vect_is_simple_use: operand z5_17
base.cc:105:3: note: def_stmt: z5_17 = _16 - z3_11;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z5_17
  def_stmt =  z5_17 = _16 - z3_11;
base.cc:105:3: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1089_212 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:105:3: note: add new stmt: vect__27.1088_213 = vect_z5_17.1078_202 * vect_cst_.1089_212;
base.cc:105:3: note: ------>vectorizing statement: _28 = _26 + _27;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _26
base.cc:105:3: note: vect_is_simple_use: operand _26
base.cc:105:3: note: def_stmt: _26 = _24 + _25;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:105:3: note: vect_get_vec_def_for_operand: _27
base.cc:105:3: note: vect_is_simple_use: operand _27
base.cc:105:3: note: def_stmt: _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _27
  def_stmt =  _27 = z5_17 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:105:3: note: add new stmt: vect__28.1090_214 = vect__26.1087_211 + vect__27.1088_213;
base.cc:105:3: note: ------>vectorizing statement: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: z7_23
base.cc:105:3: note: vect_is_simple_use: operand z7_23
base.cc:105:3: note: def_stmt: z7_23 = _22 - z5_17;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  z7_23
  def_stmt =  z7_23 = _22 - z5_17;
base.cc:105:3: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1092_215 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:105:3: note: add new stmt: vect__29.1091_216 = vect_z7_23.1082_206 * vect_cst_.1092_215;
base.cc:105:3: note: ------>vectorizing statement: _30 = _28 + _29;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: transform binary/unary operation.
base.cc:105:3: note: vect_get_vec_def_for_operand: _28
base.cc:105:3: note: vect_is_simple_use: operand _28
base.cc:105:3: note: def_stmt: _28 = _26 + _27;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _28
  def_stmt =  _28 = _26 + _27;
base.cc:105:3: note: vect_get_vec_def_for_operand: _29
base.cc:105:3: note: vect_is_simple_use: operand _29
base.cc:105:3: note: def_stmt: _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _29
  def_stmt =  _29 = z7_23 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:105:3: note: add new stmt: vect__30.1093_217 = vect__28.1090_214 + vect__29.1091_216;
base.cc:105:3: note: ------>vectorizing statement: _121 = &retval.410[iter.417_32];

base.cc:105:3: note: ------>vectorizing statement: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _35
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _35
  def_stmt =  _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: vect_is_simple_use: operand _35
base.cc:105:3: note: def_stmt: _35 = VIEW_CONVERT_EXPR<signed long>(_34);
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1095_218 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 0
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1096_219 = { 0, 0, 0, 0 };
base.cc:105:3: note: vect_is_simple_use: operand 0
base.cc:105:3: note: vect_get_vec_def_for_operand: 18446744073709551615
base.cc:105:3: note: vect_is_simple_use: operand 18446744073709551615
base.cc:105:3: note: Create vector_cst. nunits = 4
base.cc:105:3: note: created new init_stmt: vect_cst_.1097_220 = { 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615 };
base.cc:105:3: note: vect_is_simple_use: operand 18446744073709551615
base.cc:105:3: note: add new stmt: vect__ifc__120.1094_221 = VEC_COND_EXPR <vect__35.1008_83 == vect_cst_.1095_218, vect_cst_.1096_219, vect_cst_.1097_220>;
base.cc:105:3: note: ------>vectorizing statement: MASK_STORE (_121, 0B, _ifc__120, _30);

base.cc:105:3: note: transform statement.
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: vect_get_vec_def_for_operand: _30
base.cc:105:3: note: vect_is_simple_use: operand _30
base.cc:105:3: note: def_stmt: _30 = _28 + _29;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _30
  def_stmt =  _30 = _28 + _29;
base.cc:105:3: note: vect_get_vec_def_for_operand: _ifc__120
base.cc:105:3: note: vect_is_simple_use: operand _ifc__120
base.cc:105:3: note: def_stmt: _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: type of def: 3.
base.cc:105:3: note: def =  _ifc__120
  def_stmt =  _ifc__120 = _35 == 0 ? 0 : 18446744073709551615;
base.cc:105:3: note: create vector_type-pointer variable to type: vector(4) double  vectorizing a pointer ref: MEM[(double *)&retval.410]
base.cc:105:3: note: created vectp_retval.1099_222
base.cc:105:3: note: add new stmt: MASK_STORE (vectp_retval.1098_223, 0B, vect__ifc__120.1094_221, vect__30.1093_217);
base.cc:105:3: note: ------>vectorizing statement: iter.417_33 = iter.417_32 + 1;

base.cc:105:3: note: ------>vectorizing statement: ivtmp_175 = ivtmp_176 - 1;

base.cc:105:3: note: ------>vectorizing statement: vectp_x.1002_89 = vectp_x.1002_90 + 32;

base.cc:105:3: note: ------>vectorizing statement: vectp_mask.1005_85 = vectp_mask.1005_86 + 32;

base.cc:105:3: note: ------>vectorizing statement: vectp_retval.1098_224 = vectp_retval.1098_223 + 32;

base.cc:105:3: note: ------>vectorizing statement: if (ivtmp_175 != 0)


loop at base.cc:105: if (ivtmp_226 < 1)

base.cc:105:3: note: LOOP VECTORIZED

base.cc:104:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&x.411] = simd.413_44(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:95
base.cc:95:29: note: ===== analyze_loop_nest =====
base.cc:95:29: note: === vect_analyze_loop_form ===
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: not vectorized: number of iterations cannot be computed.
base.cc:95:29: note: bad loop form.
base.cc:85:8: note: vectorized 0 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&a.419] = simd.420_35(D);
 scalar_type: vector(2) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
base.cc:95:29: note: ===vect_slp_analyze_bb===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.419[iter.422_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: retval.418[iter.422_28] = _26;
vector(4) double
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: not consecutive access retval.418[iter.422_28] = _26;

base.cc:95:29: note: not consecutive access a_1 = a.419[iter.422_28];

base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.419[iter.422_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_29
base.cc:95:29: note: def_stmt: powmult_29 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.419[iter.422_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.419[iter.422_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: Failed to SLP the basic block.
base.cc:95:29: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:95:29: note: ***** Re-trying analysis with vector size 16
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.419[iter.422_28];
vector(2) double
base.cc:95:29: note: got vectype for stmt: retval.418[iter.422_28] = _26;
vector(2) double
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: not consecutive access retval.418[iter.422_28] = _26;

base.cc:95:29: note: not consecutive access a_1 = a.419[iter.422_28];

base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.419[iter.422_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_29
base.cc:95:29: note: def_stmt: powmult_29 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.419[iter.422_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.419[iter.422_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: Failed to SLP the basic block.
base.cc:95:29: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:85:8: note: ===vect_slp_analyze_bb===
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: not vectorized: not enough data-refs in basic block.
base.cc:85:8: note: ===vect_slp_analyze_bb===
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: not vectorized: no vectype for stmt: _30 = VIEW_CONVERT_EXPR<vector(2) double>(retval.418);
 scalar_type: vector(2) double
base.cc:85:8: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:95
base.cc:95:29: note: ===== analyze_loop_nest =====
base.cc:95:29: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: not vectorized: number of iterations cannot be computed.
base.cc:95:29: note: bad loop form.
base.cc:85:8: note: vectorized 0 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&a.424] = simd.426_40(D);
 scalar_type: vector(2) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
base.cc:95:29: note: ===vect_slp_analyze_bb===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: retval.423[0] = _24;
vector(4) double
base.cc:95:29: note: not vectorized: not enough data-refs in basic block.
base.cc:95:29: note: ***** Re-trying analysis with vector size 16
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: retval.423[0] = _24;
vector(2) double
base.cc:95:29: note: not vectorized: not enough data-refs in basic block.
base.cc:85:8: note: ===vect_slp_analyze_bb===
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: got vectype for stmt: a_59 = a.424[1];
vector(4) double
base.cc:85:8: note: got vectype for stmt: _58 = mask.425[1];
vector(4) double
base.cc:85:8: note: === vect_analyze_data_ref_accesses ===
base.cc:85:8: note: not consecutive access a_59 = a.424[1];

base.cc:85:8: note: not consecutive access _58 = mask.425[1];

base.cc:85:8: note: === vect_pattern_recog ===
base.cc:85:8: note: === vect_analyze_data_refs_alignment ===
base.cc:85:8: note: === vect_analyze_slp ===
base.cc:85:8: note: Failed to SLP the basic block.
base.cc:85:8: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:85:8: note: ***** Re-trying analysis with vector size 16
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: got vectype for stmt: a_59 = a.424[1];
vector(2) double
base.cc:85:8: note: got vectype for stmt: _58 = mask.425[1];
vector(2) double
base.cc:85:8: note: === vect_analyze_data_ref_accesses ===
base.cc:85:8: note: not consecutive access a_59 = a.424[1];

base.cc:85:8: note: not consecutive access _58 = mask.425[1];

base.cc:85:8: note: === vect_pattern_recog ===
base.cc:85:8: note: === vect_analyze_data_refs_alignment ===
base.cc:85:8: note: === vect_analyze_slp ===
base.cc:85:8: note: Failed to SLP the basic block.
base.cc:85:8: note: not vectorized: failed to find SLP opportunities in basic block.
base.cc:95:29: note: ===vect_slp_analyze_bb===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: retval.423[1] = _17;
vector(4) double
base.cc:95:29: note: not vectorized: not enough data-refs in basic block.
base.cc:95:29: note: ***** Re-trying analysis with vector size 16
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: retval.423[1] = _17;
vector(2) double
base.cc:95:29: note: not vectorized: not enough data-refs in basic block.
base.cc:85:8: note: ===vect_slp_analyze_bb===
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: not vectorized: no vectype for stmt: _32 = VIEW_CONVERT_EXPR<vector(2) double>(retval.423);
 scalar_type: vector(2) double
base.cc:85:8: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:95
base.cc:95:29: note: ===== analyze_loop_nest =====
base.cc:95:29: note: === vect_analyze_loop_form ===
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.432[iter.435_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: retval.431[iter.435_28] = _26;
vector(4) double
base.cc:95:29: note: === vect_analyze_scalar_cycles ===
base.cc:95:29: note: Analyze phi: iter.435_28 = PHI <0(2), iter.435_29(4)>

base.cc:95:29: note: Access function of PHI: {0, +, 1}_1
base.cc:95:29: note: step: 1,  init: 0
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: Analyze phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: Analyze phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:95:29: note: step: 4294967295,  init: 4
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:95:29: note: init: phi relevant? iter.435_28 = PHI <0(2), iter.435_29(4)>
base.cc:95:29: note: init: phi relevant? .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>
base.cc:95:29: note: init: phi relevant? ivtmp_99 = PHI <4(2), ivtmp_98(4)>
base.cc:95:29: note: init: stmt relevant? a_1 = a.432[iter.435_28];
base.cc:95:29: note: init: stmt relevant? powmult_32 = a_1 * a_1;
base.cc:95:29: note: init: stmt relevant? _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: init: stmt relevant? _8 = a_1 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? _6 = z2_4 * _8;
base.cc:95:29: note: init: stmt relevant? z3_7 = _6 - a_1;
base.cc:95:29: note: init: stmt relevant? _9 = z3_7 * _8;
base.cc:95:29: note: init: stmt relevant? z4_10 = _9 - z2_4;
base.cc:95:29: note: init: stmt relevant? _12 = _8 * z4_10;
base.cc:95:29: note: init: stmt relevant? z5_13 = _12 - z3_7;
base.cc:95:29: note: init: stmt relevant? _15 = _8 * z5_13;
base.cc:95:29: note: init: stmt relevant? z6_16 = _15 - z4_10;
base.cc:95:29: note: init: stmt relevant? _18 = _8 * z6_16;
base.cc:95:29: note: init: stmt relevant? z7_19 = _18 - z5_13;
base.cc:95:29: note: init: stmt relevant? _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: init: stmt relevant? _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: init: stmt relevant? _22 = _20 + _21;
base.cc:95:29: note: init: stmt relevant? _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: init: stmt relevant? _24 = _22 + _23;
base.cc:95:29: note: init: stmt relevant? _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: init: stmt relevant? _26 = _24 + _25;
base.cc:95:29: note: init: stmt relevant? retval.431[iter.435_28] = _26;
base.cc:95:29: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: init: stmt relevant? iter.435_29 = iter.435_28 + 1;
base.cc:95:29: note: init: stmt relevant? ivtmp_98 = ivtmp_99 - 1;
base.cc:95:29: note: init: stmt relevant? if (ivtmp_98 != 0)
base.cc:95:29: note: worklist: examine stmt: retval.431[iter.435_28] = _26;
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: worklist: examine stmt: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: === vect_analyze_data_ref_dependences ===
base.cc:95:29: note: === vect_determine_vectorization_factor ===
base.cc:95:29: note: ==> examining phi: iter.435_28 = PHI <0(2), iter.435_29(4)>

base.cc:95:29: note: ==> examining phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: ==> examining phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: ==> examining statement: a_1 = a.432[iter.435_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: powmult_32 = a_1 * a_1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _3 = powmult_32 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: retval.431[iter.435_28] = _26;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: iter.435_29 = iter.435_28 + 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: ivtmp_98 = ivtmp_99 - 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: if (ivtmp_98 != 0)

base.cc:95:29: note: skip.
base.cc:95:29: note: vectorization factor = 4
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of a.432[iter.435_28]
base.cc:95:29: note: misalign = 0 bytes of ref a.432[iter.435_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of retval.431[iter.435_28]
base.cc:95:29: note: misalign = 0 bytes of ref retval.431[iter.435_28]
base.cc:95:29: note: === vect_prune_runtime_alias_test_list ===
base.cc:95:29: note: === vect_enhance_data_refs_alignment ===
base.cc:95:29: note: vect_can_advance_ivs_p:
base.cc:95:29: note: Analyze phi: iter.435_28 = PHI <0(2), iter.435_29(4)>

base.cc:95:29: note: Analyze phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: virtual phi. skip.
base.cc:95:29: note: Analyze phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: === vect_make_slp_decision ===
base.cc:95:29: note: === vect_detect_hybrid_slp ===
base.cc:95:29: note: === vect_analyze_loop_operations ===
base.cc:95:29: note: examining phi: iter.435_28 = PHI <0(2), iter.435_29(4)>

base.cc:95:29: note: examining phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: examining phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: ==> examining statement: a_1 = a.432[iter.435_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand a.432[iter.435_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: powmult_32 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: retval.431[iter.435_28] = _26;
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_model_store_cost: aligned.
base.cc:95:29: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: iter.435_29 = iter.435_28 + 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: ivtmp_98 = ivtmp_99 - 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: if (ivtmp_98 != 0)
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: vectorization_factor = 4, niters = 4
base.cc:95:29: note: === vect_update_slp_costs_according_to_vf ===
base.cc:95:29: note: cost model disabled.
base.cc:95:29: note: loop vectorized
base.cc:95:29: note: === vec_transform_loop ===
base.cc:95:29: note: ------>vectorizing phi: iter.435_28 = PHI <0(6), iter.435_29(4)>

base.cc:95:29: note: ------>vectorizing phi: .MEM_31 = PHI <.MEM_33(6), .MEM_34(4)>

base.cc:95:29: note: ------>vectorizing phi: ivtmp_99 = PHI <4(6), ivtmp_98(4)>

base.cc:95:29: note: ------>vectorizing statement: a_1 = a.432[iter.435_28];

base.cc:95:29: note: transform statement.
base.cc:95:29: note: transform load. ncopies = 1
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: a.432
base.cc:95:29: note: created vectp_a.1107_97
base.cc:95:29: note: add new stmt: vect_a_1.1108_94 = MEM[(double *)vectp_a.1106_96];
base.cc:95:29: note: ------>vectorizing statement: powmult_32 = a_1 * a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.432[iter.435_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.432[iter.435_28];
base.cc:95:29: note: add new stmt: vect_powmult_32.1109_93 = vect_a_1.1108_94 * vect_a_1.1108_94;
base.cc:95:29: note: ------>vectorizing statement: _3 = powmult_32 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: powmult_32
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  powmult_32
  def_stmt =  powmult_32 = a_1 * a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1111_92 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__3.1110_91 = vect_powmult_32.1109_93 * vect_cst_.1111_92;
base.cc:95:29: note: ------>vectorizing statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _3
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _3
  def_stmt =  _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1113_90 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:95:29: note: add new stmt: vect_z2_4.1112_89 = vect__3.1110_91 - vect_cst_.1113_90;
base.cc:95:29: note: ------>vectorizing statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.432[iter.435_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1115_88 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__8.1114_87 = vect_a_1.1108_94 * vect_cst_.1115_88;
base.cc:95:29: note: ------>vectorizing statement: _6 = z2_4 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__6.1116_86 = vect_z2_4.1112_89 * vect__8.1114_87;
base.cc:95:29: note: ------>vectorizing statement: z3_7 = _6 - a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _6
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _6
  def_stmt =  _6 = z2_4 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.432[iter.435_28];
base.cc:95:29: note: add new stmt: vect_z3_7.1117_85 = vect__6.1116_86 - vect_a_1.1108_94;
base.cc:95:29: note: ------>vectorizing statement: _9 = z3_7 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__9.1118_84 = vect_z3_7.1117_85 * vect__8.1114_87;
base.cc:95:29: note: ------>vectorizing statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _9
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _9
  def_stmt =  _9 = z3_7 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: add new stmt: vect_z4_10.1119_83 = vect__9.1118_84 - vect_z2_4.1112_89;
base.cc:95:29: note: ------>vectorizing statement: _12 = _8 * z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect__12.1120_82 = vect__8.1114_87 * vect_z4_10.1119_83;
base.cc:95:29: note: ------>vectorizing statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _12
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _12
  def_stmt =  _12 = _8 * z4_10;
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: add new stmt: vect_z5_13.1121_81 = vect__12.1120_82 - vect_z3_7.1117_85;
base.cc:95:29: note: ------>vectorizing statement: _15 = _8 * z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect__15.1122_80 = vect__8.1114_87 * vect_z5_13.1121_81;
base.cc:95:29: note: ------>vectorizing statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _15
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _15
  def_stmt =  _15 = _8 * z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect_z6_16.1123_79 = vect__15.1122_80 - vect_z4_10.1119_83;
base.cc:95:29: note: ------>vectorizing statement: _18 = _8 * z6_16;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z6_16
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z6_16
  def_stmt =  z6_16 = _15 - z4_10;
base.cc:95:29: note: add new stmt: vect__18.1124_77 = vect__8.1114_87 * vect_z6_16.1123_79;
base.cc:95:29: note: ------>vectorizing statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _18
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _18
  def_stmt =  _18 = _8 * z6_16;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect_z7_19.1125_76 = vect__18.1124_77 - vect_z5_13.1121_81;
base.cc:95:29: note: ------>vectorizing statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.432[iter.435_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.432[iter.435_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1127_75 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:95:29: note: add new stmt: vect__20.1126_74 = vect_a_1.1108_94 * vect_cst_.1127_75;
base.cc:95:29: note: ------>vectorizing statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1129_73 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:95:29: note: add new stmt: vect__21.1128_72 = vect_z3_7.1117_85 * vect_cst_.1129_73;
base.cc:95:29: note: ------>vectorizing statement: _22 = _20 + _21;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _20
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _20
  def_stmt =  _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _21
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _21
  def_stmt =  _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: add new stmt: vect__22.1130_71 = vect__20.1126_74 + vect__21.1128_72;
base.cc:95:29: note: ------>vectorizing statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1132_70 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:95:29: note: add new stmt: vect__23.1131_69 = vect_z5_13.1121_81 * vect_cst_.1132_70;
base.cc:95:29: note: ------>vectorizing statement: _24 = _22 + _23;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _22
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _22
  def_stmt =  _22 = _20 + _21;
base.cc:95:29: note: vect_get_vec_def_for_operand: _23
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _23
  def_stmt =  _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: add new stmt: vect__24.1133_68 = vect__22.1130_71 + vect__23.1131_69;
base.cc:95:29: note: ------>vectorizing statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z7_19
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z7_19
  def_stmt =  z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1135_67 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:95:29: note: add new stmt: vect__25.1134_66 = vect_z7_19.1125_76 * vect_cst_.1135_67;
base.cc:95:29: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _24
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _24
  def_stmt =  _24 = _22 + _23;
base.cc:95:29: note: vect_get_vec_def_for_operand: _25
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _25
  def_stmt =  _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: add new stmt: vect__26.1136_65 = vect__24.1133_68 + vect__25.1134_66;
base.cc:95:29: note: ------>vectorizing statement: retval.431[iter.435_28] = _26;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform store. ncopies = 1
base.cc:95:29: note: vect_get_vec_def_for_operand: _26
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: retval.431
base.cc:95:29: note: created vectp_retval.1138_64
base.cc:95:29: note: add new stmt: MEM[(double *)vectp_retval.1137_63] = vect__26.1136_65;
base.cc:95:29: note: ------>vectorizing statement: iter.435_29 = iter.435_28 + 1;

base.cc:95:29: note: ------>vectorizing statement: ivtmp_98 = ivtmp_99 - 1;

base.cc:95:29: note: ------>vectorizing statement: vectp_a.1106_95 = vectp_a.1106_96 + 32;

base.cc:95:29: note: ------>vectorizing statement: vectp_retval.1137_62 = vectp_retval.1137_63 + 32;

base.cc:95:29: note: ------>vectorizing statement: if (ivtmp_98 != 0)


loop at base.cc:95: if (ivtmp_60 < 1)

base.cc:95:29: note: LOOP VECTORIZED

base.cc:85:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&a.432] = simd.433_35(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:95
base.cc:95:29: note: ===== analyze_loop_nest =====
base.cc:95:29: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.437[iter.443_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: _30 = mask.438[iter.443_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: MASK_STORE (_71, 0B, _ifc__72, _26);
vector(4) double
base.cc:95:29: note: === vect_analyze_scalar_cycles ===
base.cc:95:29: note: Analyze phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: Access function of PHI: {0, +, 1}_1
base.cc:95:29: note: step: 1,  init: 0
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: Analyze phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: Analyze phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:95:29: note: step: 4294967295,  init: 4
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:95:29: note: init: phi relevant? iter.443_28 = PHI <0(3), iter.443_29(5)>
base.cc:95:29: note: init: phi relevant? .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>
base.cc:95:29: note: init: phi relevant? ivtmp_64 = PHI <4(3), ivtmp_63(5)>
base.cc:95:29: note: init: stmt relevant? a_1 = a.437[iter.443_28];
base.cc:95:29: note: init: stmt relevant? _30 = mask.438[iter.443_28];
base.cc:95:29: note: init: stmt relevant? _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: init: stmt relevant? powmult_35 = a_1 * a_1;
base.cc:95:29: note: init: stmt relevant? _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: init: stmt relevant? _8 = a_1 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? _6 = z2_4 * _8;
base.cc:95:29: note: init: stmt relevant? z3_7 = _6 - a_1;
base.cc:95:29: note: init: stmt relevant? _9 = z3_7 * _8;
base.cc:95:29: note: init: stmt relevant? z4_10 = _9 - z2_4;
base.cc:95:29: note: init: stmt relevant? _12 = _8 * z4_10;
base.cc:95:29: note: init: stmt relevant? z5_13 = _12 - z3_7;
base.cc:95:29: note: init: stmt relevant? _15 = _8 * z5_13;
base.cc:95:29: note: init: stmt relevant? z6_16 = _15 - z4_10;
base.cc:95:29: note: init: stmt relevant? _18 = _8 * z6_16;
base.cc:95:29: note: init: stmt relevant? z7_19 = _18 - z5_13;
base.cc:95:29: note: init: stmt relevant? _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: init: stmt relevant? _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: init: stmt relevant? _22 = _20 + _21;
base.cc:95:29: note: init: stmt relevant? _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: init: stmt relevant? _24 = _22 + _23;
base.cc:95:29: note: init: stmt relevant? _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: init: stmt relevant? _26 = _24 + _25;
base.cc:95:29: note: init: stmt relevant? _71 = &retval.436[iter.443_28];
base.cc:95:29: note: init: stmt relevant? _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: init: stmt relevant? MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: init: stmt relevant? iter.443_29 = iter.443_28 + 1;
base.cc:95:29: note: init: stmt relevant? ivtmp_63 = ivtmp_64 - 1;
base.cc:95:29: note: init: stmt relevant? if (ivtmp_63 != 0)
base.cc:95:29: note: worklist: examine stmt: MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: worklist: examine stmt: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: === vect_analyze_data_ref_dependences ===
base.cc:95:29: note: === vect_determine_vectorization_factor ===
base.cc:95:29: note: ==> examining phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: ==> examining phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: ==> examining phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: ==> examining statement: a_1 = a.437[iter.443_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _30 = mask.438[iter.443_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);

base.cc:95:29: note: get vectype for scalar type:  signed long
base.cc:95:29: note: vectype: vector(4) signed long
base.cc:95:29: note: get vectype for scalar type:  signed long
base.cc:95:29: note: vectype: vector(4) signed long
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: powmult_35 = a_1 * a_1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _3 = powmult_35 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _71 = &retval.436[iter.443_28];

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;

base.cc:95:29: note: get vectype for scalar type:  unsigned long
base.cc:95:29: note: vectype: vector(4) unsigned long
base.cc:95:29: note: get vectype for scalar type:  unsigned long
base.cc:95:29: note: vectype: vector(4) unsigned long
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: MASK_STORE (_71, 0B, _ifc__72, _26);

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: iter.443_29 = iter.443_28 + 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: ivtmp_63 = ivtmp_64 - 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: if (ivtmp_63 != 0)

base.cc:95:29: note: skip.
base.cc:95:29: note: vectorization factor = 4
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of a.437[iter.443_28]
base.cc:95:29: note: misalign = 0 bytes of ref a.437[iter.443_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of mask.438[iter.443_28]
base.cc:95:29: note: misalign = 0 bytes of ref mask.438[iter.443_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of *_71
base.cc:95:29: note: misalign = 0 bytes of ref *_71
base.cc:95:29: note: === vect_prune_runtime_alias_test_list ===
base.cc:95:29: note: === vect_enhance_data_refs_alignment ===
base.cc:95:29: note: vect_can_advance_ivs_p:
base.cc:95:29: note: Analyze phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: Analyze phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: virtual phi. skip.
base.cc:95:29: note: Analyze phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: === vect_make_slp_decision ===
base.cc:95:29: note: === vect_detect_hybrid_slp ===
base.cc:95:29: note: === vect_analyze_loop_operations ===
base.cc:95:29: note: examining phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: examining phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: examining phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: ==> examining statement: a_1 = a.437[iter.443_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand a.437[iter.443_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _30 = mask.438[iter.443_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand mask.438[iter.443_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand VIEW_CONVERT_EXPR<signed long>(_30)
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_assignment ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _71 = &retval.436[iter.443_28];
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: vect_is_simple_use: operand _31 == 0
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: not vectorized: relevant stmt not supported: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: bad operation or unsupported loop bound.
base.cc:95:29: note: ***** Re-trying analysis with vector size 16
base.cc:95:29: note: === vect_analyze_loop_form ===
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.437[iter.443_28];
vector(2) double
base.cc:95:29: note: got vectype for stmt: _30 = mask.438[iter.443_28];
vector(2) double
base.cc:95:29: note: got vectype for stmt: MASK_STORE (_71, 0B, _ifc__72, _26);
vector(2) double
base.cc:95:29: note: === vect_analyze_scalar_cycles ===
base.cc:95:29: note: Analyze phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: Access function of PHI: {0, +, 1}_1
base.cc:95:29: note: step: 1,  init: 0
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: Analyze phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: Analyze phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:95:29: note: step: 4294967295,  init: 4
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:95:29: note: init: phi relevant? iter.443_28 = PHI <0(3), iter.443_29(5)>
base.cc:95:29: note: init: phi relevant? .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>
base.cc:95:29: note: init: phi relevant? ivtmp_64 = PHI <4(3), ivtmp_63(5)>
base.cc:95:29: note: init: stmt relevant? a_1 = a.437[iter.443_28];
base.cc:95:29: note: init: stmt relevant? _30 = mask.438[iter.443_28];
base.cc:95:29: note: init: stmt relevant? _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: init: stmt relevant? powmult_35 = a_1 * a_1;
base.cc:95:29: note: init: stmt relevant? _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: init: stmt relevant? _8 = a_1 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? _6 = z2_4 * _8;
base.cc:95:29: note: init: stmt relevant? z3_7 = _6 - a_1;
base.cc:95:29: note: init: stmt relevant? _9 = z3_7 * _8;
base.cc:95:29: note: init: stmt relevant? z4_10 = _9 - z2_4;
base.cc:95:29: note: init: stmt relevant? _12 = _8 * z4_10;
base.cc:95:29: note: init: stmt relevant? z5_13 = _12 - z3_7;
base.cc:95:29: note: init: stmt relevant? _15 = _8 * z5_13;
base.cc:95:29: note: init: stmt relevant? z6_16 = _15 - z4_10;
base.cc:95:29: note: init: stmt relevant? _18 = _8 * z6_16;
base.cc:95:29: note: init: stmt relevant? z7_19 = _18 - z5_13;
base.cc:95:29: note: init: stmt relevant? _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: init: stmt relevant? _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: init: stmt relevant? _22 = _20 + _21;
base.cc:95:29: note: init: stmt relevant? _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: init: stmt relevant? _24 = _22 + _23;
base.cc:95:29: note: init: stmt relevant? _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: init: stmt relevant? _26 = _24 + _25;
base.cc:95:29: note: init: stmt relevant? _71 = &retval.436[iter.443_28];
base.cc:95:29: note: init: stmt relevant? _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: init: stmt relevant? MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: init: stmt relevant? iter.443_29 = iter.443_28 + 1;
base.cc:95:29: note: init: stmt relevant? ivtmp_63 = ivtmp_64 - 1;
base.cc:95:29: note: init: stmt relevant? if (ivtmp_63 != 0)
base.cc:95:29: note: worklist: examine stmt: MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: worklist: examine stmt: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: === vect_analyze_data_ref_dependences ===
base.cc:95:29: note: === vect_determine_vectorization_factor ===
base.cc:95:29: note: ==> examining phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: ==> examining phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: ==> examining phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: ==> examining statement: a_1 = a.437[iter.443_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _30 = mask.438[iter.443_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);

base.cc:95:29: note: get vectype for scalar type:  signed long
base.cc:95:29: note: vectype: vector(2) signed long
base.cc:95:29: note: get vectype for scalar type:  signed long
base.cc:95:29: note: vectype: vector(2) signed long
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: powmult_35 = a_1 * a_1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _3 = powmult_35 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: _71 = &retval.436[iter.443_28];

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;

base.cc:95:29: note: get vectype for scalar type:  unsigned long
base.cc:95:29: note: vectype: vector(2) unsigned long
base.cc:95:29: note: get vectype for scalar type:  unsigned long
base.cc:95:29: note: vectype: vector(2) unsigned long
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: MASK_STORE (_71, 0B, _ifc__72, _26);

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(2) double
base.cc:95:29: note: nunits = 2
base.cc:95:29: note: ==> examining statement: iter.443_29 = iter.443_28 + 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: ivtmp_63 = ivtmp_64 - 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: if (ivtmp_63 != 0)

base.cc:95:29: note: skip.
base.cc:95:29: note: vectorization factor = 2
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of a.437[iter.443_28]
base.cc:95:29: note: misalign = 0 bytes of ref a.437[iter.443_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of mask.438[iter.443_28]
base.cc:95:29: note: misalign = 0 bytes of ref mask.438[iter.443_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of *_71
base.cc:95:29: note: misalign = 0 bytes of ref *_71
base.cc:95:29: note: === vect_prune_runtime_alias_test_list ===
base.cc:95:29: note: === vect_enhance_data_refs_alignment ===
base.cc:95:29: note: vect_can_advance_ivs_p:
base.cc:95:29: note: Analyze phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: Analyze phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: virtual phi. skip.
base.cc:95:29: note: Analyze phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: === vect_make_slp_decision ===
base.cc:95:29: note: === vect_detect_hybrid_slp ===
base.cc:95:29: note: === vect_analyze_loop_operations ===
base.cc:95:29: note: examining phi: iter.443_28 = PHI <0(3), iter.443_29(5)>

base.cc:95:29: note: examining phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: examining phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: ==> examining statement: a_1 = a.437[iter.443_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand a.437[iter.443_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _30 = mask.438[iter.443_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand mask.438[iter.443_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand VIEW_CONVERT_EXPR<signed long>(_30)
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_assignment ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _71 = &retval.436[iter.443_28];
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: vect_is_simple_use: operand _31 == 0
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: ==> examining statement: MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_model_store_cost: aligned.
base.cc:95:29: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: iter.443_29 = iter.443_28 + 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: ivtmp_63 = ivtmp_64 - 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: if (ivtmp_63 != 0)
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: vectorization_factor = 2, niters = 4
base.cc:95:29: note: === vect_update_slp_costs_according_to_vf ===
base.cc:95:29: note: cost model disabled.
base.cc:95:29: note: loop vectorized
base.cc:95:29: note: === vec_transform_loop ===
base.cc:95:29: note: ------>vectorizing phi: iter.443_28 = PHI <0(13), iter.443_29(5)>

base.cc:95:29: note: ------>vectorizing phi: .MEM_33 = PHI <.MEM_38(13), .MEM_73(5)>

base.cc:95:29: note: ------>vectorizing phi: ivtmp_64 = PHI <4(13), ivtmp_63(5)>

base.cc:95:29: note: ------>vectorizing statement: a_1 = a.437[iter.443_28];

base.cc:95:29: note: transform statement.
base.cc:95:29: note: transform load. ncopies = 1
base.cc:95:29: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: a.437
base.cc:95:29: note: created vectp_a.1142_75
base.cc:95:29: note: add new stmt: vect_a_1.1143_78 = MEM[(double *)vectp_a.1141_76];
base.cc:95:29: note: ------>vectorizing statement: _30 = mask.438[iter.443_28];

base.cc:95:29: note: transform statement.
base.cc:95:29: note: transform load. ncopies = 1
base.cc:95:29: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: mask.438
base.cc:95:29: note: created vectp_mask.1145_79
base.cc:95:29: note: add new stmt: vect__30.1146_82 = MEM[(double *)vectp_mask.1144_80];
base.cc:95:29: note: ------>vectorizing statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform assignment.
base.cc:95:29: note: vect_get_vec_def_for_operand: _30
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.438[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _30
  def_stmt =  _30 = mask.438[iter.443_28];
base.cc:95:29: note: add new stmt: vect__31.1147_83 = VIEW_CONVERT_EXPR<vector(2) signed long>(vect__30.1146_82);
base.cc:95:29: note: ------>vectorizing statement: powmult_35 = a_1 * a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.437[iter.443_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.437[iter.443_28];
base.cc:95:29: note: add new stmt: vect_powmult_35.1148_84 = vect_a_1.1143_78 * vect_a_1.1143_78;
base.cc:95:29: note: ------>vectorizing statement: _3 = powmult_35 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: powmult_35
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  powmult_35
  def_stmt =  powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1150_85 = { 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__3.1149_86 = vect_powmult_35.1148_84 * vect_cst_.1150_85;
base.cc:95:29: note: ------>vectorizing statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _3
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _3
  def_stmt =  _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1152_87 = { 1.0e+0, 1.0e+0 };
base.cc:95:29: note: add new stmt: vect_z2_4.1151_88 = vect__3.1149_86 - vect_cst_.1152_87;
base.cc:95:29: note: ------>vectorizing statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.437[iter.443_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1154_89 = { 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__8.1153_90 = vect_a_1.1143_78 * vect_cst_.1154_89;
base.cc:95:29: note: ------>vectorizing statement: _6 = z2_4 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__6.1155_91 = vect_z2_4.1151_88 * vect__8.1153_90;
base.cc:95:29: note: ------>vectorizing statement: z3_7 = _6 - a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _6
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _6
  def_stmt =  _6 = z2_4 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.437[iter.443_28];
base.cc:95:29: note: add new stmt: vect_z3_7.1156_92 = vect__6.1155_91 - vect_a_1.1143_78;
base.cc:95:29: note: ------>vectorizing statement: _9 = z3_7 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__9.1157_93 = vect_z3_7.1156_92 * vect__8.1153_90;
base.cc:95:29: note: ------>vectorizing statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _9
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _9
  def_stmt =  _9 = z3_7 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: add new stmt: vect_z4_10.1158_94 = vect__9.1157_93 - vect_z2_4.1151_88;
base.cc:95:29: note: ------>vectorizing statement: _12 = _8 * z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect__12.1159_95 = vect__8.1153_90 * vect_z4_10.1158_94;
base.cc:95:29: note: ------>vectorizing statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _12
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _12
  def_stmt =  _12 = _8 * z4_10;
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: add new stmt: vect_z5_13.1160_96 = vect__12.1159_95 - vect_z3_7.1156_92;
base.cc:95:29: note: ------>vectorizing statement: _15 = _8 * z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect__15.1161_97 = vect__8.1153_90 * vect_z5_13.1160_96;
base.cc:95:29: note: ------>vectorizing statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _15
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _15
  def_stmt =  _15 = _8 * z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect_z6_16.1162_98 = vect__15.1161_97 - vect_z4_10.1158_94;
base.cc:95:29: note: ------>vectorizing statement: _18 = _8 * z6_16;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z6_16
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z6_16
  def_stmt =  z6_16 = _15 - z4_10;
base.cc:95:29: note: add new stmt: vect__18.1163_99 = vect__8.1153_90 * vect_z6_16.1162_98;
base.cc:95:29: note: ------>vectorizing statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _18
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _18
  def_stmt =  _18 = _8 * z6_16;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect_z7_19.1164_100 = vect__18.1163_99 - vect_z5_13.1160_96;
base.cc:95:29: note: ------>vectorizing statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.437[iter.443_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.437[iter.443_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1166_101 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:95:29: note: add new stmt: vect__20.1165_102 = vect_a_1.1143_78 * vect_cst_.1166_101;
base.cc:95:29: note: ------>vectorizing statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1168_103 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:95:29: note: add new stmt: vect__21.1167_104 = vect_z3_7.1156_92 * vect_cst_.1168_103;
base.cc:95:29: note: ------>vectorizing statement: _22 = _20 + _21;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _20
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _20
  def_stmt =  _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _21
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _21
  def_stmt =  _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: add new stmt: vect__22.1169_105 = vect__20.1165_102 + vect__21.1167_104;
base.cc:95:29: note: ------>vectorizing statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1171_106 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:95:29: note: add new stmt: vect__23.1170_107 = vect_z5_13.1160_96 * vect_cst_.1171_106;
base.cc:95:29: note: ------>vectorizing statement: _24 = _22 + _23;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _22
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _22
  def_stmt =  _22 = _20 + _21;
base.cc:95:29: note: vect_get_vec_def_for_operand: _23
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _23
  def_stmt =  _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: add new stmt: vect__24.1172_108 = vect__22.1169_105 + vect__23.1170_107;
base.cc:95:29: note: ------>vectorizing statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z7_19
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z7_19
  def_stmt =  z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1174_109 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:95:29: note: add new stmt: vect__25.1173_110 = vect_z7_19.1164_100 * vect_cst_.1174_109;
base.cc:95:29: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _24
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _24
  def_stmt =  _24 = _22 + _23;
base.cc:95:29: note: vect_get_vec_def_for_operand: _25
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _25
  def_stmt =  _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: add new stmt: vect__26.1175_111 = vect__24.1172_108 + vect__25.1173_110;
base.cc:95:29: note: ------>vectorizing statement: _71 = &retval.436[iter.443_28];

base.cc:95:29: note: ------>vectorizing statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_get_vec_def_for_operand: _31
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _31
  def_stmt =  _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_get_vec_def_for_operand: 0
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1177_112 = { 0, 0 };
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: vect_get_vec_def_for_operand: 0
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1178_113 = { 0, 0 };
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: vect_get_vec_def_for_operand: 18446744073709551615
base.cc:95:29: note: vect_is_simple_use: operand 18446744073709551615
base.cc:95:29: note: Create vector_cst. nunits = 2
base.cc:95:29: note: created new init_stmt: vect_cst_.1179_114 = { 18446744073709551615, 18446744073709551615 };
base.cc:95:29: note: vect_is_simple_use: operand 18446744073709551615
base.cc:95:29: note: add new stmt: vect__ifc__72.1176_115 = VEC_COND_EXPR <vect__31.1147_83 == vect_cst_.1177_112, vect_cst_.1178_113, vect_cst_.1179_114>;
base.cc:95:29: note: ------>vectorizing statement: MASK_STORE (_71, 0B, _ifc__72, _26);

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_get_vec_def_for_operand: _26
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:95:29: note: vect_get_vec_def_for_operand: _ifc__72
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _ifc__72
  def_stmt =  _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: MEM[(double *)&retval.436]
base.cc:95:29: note: created vectp_retval.1181_116
base.cc:95:29: note: add new stmt: MASK_STORE (vectp_retval.1180_117, 0B, vect__ifc__72.1176_115, vect__26.1175_111);
base.cc:95:29: note: ------>vectorizing statement: iter.443_29 = iter.443_28 + 1;

base.cc:95:29: note: ------>vectorizing statement: ivtmp_63 = ivtmp_64 - 1;

base.cc:95:29: note: ------>vectorizing statement: vectp_a.1141_77 = vectp_a.1141_76 + 16;

base.cc:95:29: note: ------>vectorizing statement: vectp_mask.1144_81 = vectp_mask.1144_80 + 16;

base.cc:95:29: note: ------>vectorizing statement: vectp_retval.1180_118 = vectp_retval.1180_117 + 16;

base.cc:95:29: note: ------>vectorizing statement: if (ivtmp_63 != 0)


loop at base.cc:95: if (ivtmp_120 < 2)

base.cc:95:29: note: LOOP VECTORIZED

base.cc:85:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&a.437] = simd.439_40(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
base.cc:95:29: note: ===vect_slp_analyze_bb===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: not vectorized: no vectype for stmt: vect_a_1.1143_78 = MEM[(double *)vectp_a.1141_76];
 scalar_type: vector(2) double
base.cc:95:29: note: not vectorized: not enough data-refs in basic block.
base.cc:85:8: note: ===vect_slp_analyze_bb===
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: not vectorized: not enough data-refs in basic block.
base.cc:85:8: note: ===vect_slp_analyze_bb===
base.cc:85:8: note: === vect_analyze_data_refs ===
base.cc:85:8: note: not vectorized: no vectype for stmt: _32 = VIEW_CONVERT_EXPR<vector(4) double>(retval.436);
 scalar_type: vector(4) double
base.cc:85:8: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:95
base.cc:95:29: note: ===== analyze_loop_nest =====
base.cc:95:29: note: === vect_analyze_loop_form ===
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.445[iter.448_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: retval.444[iter.448_28] = _26;
vector(4) double
base.cc:95:29: note: === vect_analyze_scalar_cycles ===
base.cc:95:29: note: Analyze phi: iter.448_28 = PHI <0(2), iter.448_29(4)>

base.cc:95:29: note: Access function of PHI: {0, +, 1}_1
base.cc:95:29: note: step: 1,  init: 0
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: Analyze phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: Analyze phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:95:29: note: step: 4294967295,  init: 4
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:95:29: note: init: phi relevant? iter.448_28 = PHI <0(2), iter.448_29(4)>
base.cc:95:29: note: init: phi relevant? .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>
base.cc:95:29: note: init: phi relevant? ivtmp_99 = PHI <4(2), ivtmp_98(4)>
base.cc:95:29: note: init: stmt relevant? a_1 = a.445[iter.448_28];
base.cc:95:29: note: init: stmt relevant? powmult_32 = a_1 * a_1;
base.cc:95:29: note: init: stmt relevant? _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: init: stmt relevant? _8 = a_1 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? _6 = z2_4 * _8;
base.cc:95:29: note: init: stmt relevant? z3_7 = _6 - a_1;
base.cc:95:29: note: init: stmt relevant? _9 = z3_7 * _8;
base.cc:95:29: note: init: stmt relevant? z4_10 = _9 - z2_4;
base.cc:95:29: note: init: stmt relevant? _12 = _8 * z4_10;
base.cc:95:29: note: init: stmt relevant? z5_13 = _12 - z3_7;
base.cc:95:29: note: init: stmt relevant? _15 = _8 * z5_13;
base.cc:95:29: note: init: stmt relevant? z6_16 = _15 - z4_10;
base.cc:95:29: note: init: stmt relevant? _18 = _8 * z6_16;
base.cc:95:29: note: init: stmt relevant? z7_19 = _18 - z5_13;
base.cc:95:29: note: init: stmt relevant? _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: init: stmt relevant? _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: init: stmt relevant? _22 = _20 + _21;
base.cc:95:29: note: init: stmt relevant? _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: init: stmt relevant? _24 = _22 + _23;
base.cc:95:29: note: init: stmt relevant? _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: init: stmt relevant? _26 = _24 + _25;
base.cc:95:29: note: init: stmt relevant? retval.444[iter.448_28] = _26;
base.cc:95:29: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: init: stmt relevant? iter.448_29 = iter.448_28 + 1;
base.cc:95:29: note: init: stmt relevant? ivtmp_98 = ivtmp_99 - 1;
base.cc:95:29: note: init: stmt relevant? if (ivtmp_98 != 0)
base.cc:95:29: note: worklist: examine stmt: retval.444[iter.448_28] = _26;
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: worklist: examine stmt: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: === vect_analyze_data_ref_dependences ===
base.cc:95:29: note: === vect_determine_vectorization_factor ===
base.cc:95:29: note: ==> examining phi: iter.448_28 = PHI <0(2), iter.448_29(4)>

base.cc:95:29: note: ==> examining phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: ==> examining phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: ==> examining statement: a_1 = a.445[iter.448_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: powmult_32 = a_1 * a_1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _3 = powmult_32 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: retval.444[iter.448_28] = _26;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: iter.448_29 = iter.448_28 + 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: ivtmp_98 = ivtmp_99 - 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: if (ivtmp_98 != 0)

base.cc:95:29: note: skip.
base.cc:95:29: note: vectorization factor = 4
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of a.445[iter.448_28]
base.cc:95:29: note: misalign = 0 bytes of ref a.445[iter.448_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of retval.444[iter.448_28]
base.cc:95:29: note: misalign = 0 bytes of ref retval.444[iter.448_28]
base.cc:95:29: note: === vect_prune_runtime_alias_test_list ===
base.cc:95:29: note: === vect_enhance_data_refs_alignment ===
base.cc:95:29: note: vect_can_advance_ivs_p:
base.cc:95:29: note: Analyze phi: iter.448_28 = PHI <0(2), iter.448_29(4)>

base.cc:95:29: note: Analyze phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: virtual phi. skip.
base.cc:95:29: note: Analyze phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: === vect_make_slp_decision ===
base.cc:95:29: note: === vect_detect_hybrid_slp ===
base.cc:95:29: note: === vect_analyze_loop_operations ===
base.cc:95:29: note: examining phi: iter.448_28 = PHI <0(2), iter.448_29(4)>

base.cc:95:29: note: examining phi: .MEM_31 = PHI <.MEM_33(2), .MEM_34(4)>

base.cc:95:29: note: examining phi: ivtmp_99 = PHI <4(2), ivtmp_98(4)>

base.cc:95:29: note: ==> examining statement: a_1 = a.445[iter.448_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand a.445[iter.448_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: powmult_32 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: retval.444[iter.448_28] = _26;
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_model_store_cost: aligned.
base.cc:95:29: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: iter.448_29 = iter.448_28 + 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: ivtmp_98 = ivtmp_99 - 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: if (ivtmp_98 != 0)
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: vectorization_factor = 4, niters = 4
base.cc:95:29: note: === vect_update_slp_costs_according_to_vf ===
base.cc:95:29: note: cost model disabled.
base.cc:95:29: note: loop vectorized
base.cc:95:29: note: === vec_transform_loop ===
base.cc:95:29: note: ------>vectorizing phi: iter.448_28 = PHI <0(6), iter.448_29(4)>

base.cc:95:29: note: ------>vectorizing phi: .MEM_31 = PHI <.MEM_33(6), .MEM_34(4)>

base.cc:95:29: note: ------>vectorizing phi: ivtmp_99 = PHI <4(6), ivtmp_98(4)>

base.cc:95:29: note: ------>vectorizing statement: a_1 = a.445[iter.448_28];

base.cc:95:29: note: transform statement.
base.cc:95:29: note: transform load. ncopies = 1
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: a.445
base.cc:95:29: note: created vectp_a.1195_97
base.cc:95:29: note: add new stmt: vect_a_1.1196_94 = MEM[(double *)vectp_a.1194_96];
base.cc:95:29: note: ------>vectorizing statement: powmult_32 = a_1 * a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.445[iter.448_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.445[iter.448_28];
base.cc:95:29: note: add new stmt: vect_powmult_32.1197_93 = vect_a_1.1196_94 * vect_a_1.1196_94;
base.cc:95:29: note: ------>vectorizing statement: _3 = powmult_32 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: powmult_32
base.cc:95:29: note: vect_is_simple_use: operand powmult_32
base.cc:95:29: note: def_stmt: powmult_32 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  powmult_32
  def_stmt =  powmult_32 = a_1 * a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1199_92 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__3.1198_91 = vect_powmult_32.1197_93 * vect_cst_.1199_92;
base.cc:95:29: note: ------>vectorizing statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _3
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _3
  def_stmt =  _3 = powmult_32 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1201_90 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:95:29: note: add new stmt: vect_z2_4.1200_89 = vect__3.1198_91 - vect_cst_.1201_90;
base.cc:95:29: note: ------>vectorizing statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.445[iter.448_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1203_88 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__8.1202_87 = vect_a_1.1196_94 * vect_cst_.1203_88;
base.cc:95:29: note: ------>vectorizing statement: _6 = z2_4 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__6.1204_86 = vect_z2_4.1200_89 * vect__8.1202_87;
base.cc:95:29: note: ------>vectorizing statement: z3_7 = _6 - a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _6
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _6
  def_stmt =  _6 = z2_4 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.445[iter.448_28];
base.cc:95:29: note: add new stmt: vect_z3_7.1205_85 = vect__6.1204_86 - vect_a_1.1196_94;
base.cc:95:29: note: ------>vectorizing statement: _9 = z3_7 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__9.1206_84 = vect_z3_7.1205_85 * vect__8.1202_87;
base.cc:95:29: note: ------>vectorizing statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _9
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _9
  def_stmt =  _9 = z3_7 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: add new stmt: vect_z4_10.1207_83 = vect__9.1206_84 - vect_z2_4.1200_89;
base.cc:95:29: note: ------>vectorizing statement: _12 = _8 * z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect__12.1208_82 = vect__8.1202_87 * vect_z4_10.1207_83;
base.cc:95:29: note: ------>vectorizing statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _12
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _12
  def_stmt =  _12 = _8 * z4_10;
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: add new stmt: vect_z5_13.1209_81 = vect__12.1208_82 - vect_z3_7.1205_85;
base.cc:95:29: note: ------>vectorizing statement: _15 = _8 * z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect__15.1210_80 = vect__8.1202_87 * vect_z5_13.1209_81;
base.cc:95:29: note: ------>vectorizing statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _15
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _15
  def_stmt =  _15 = _8 * z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect_z6_16.1211_79 = vect__15.1210_80 - vect_z4_10.1207_83;
base.cc:95:29: note: ------>vectorizing statement: _18 = _8 * z6_16;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z6_16
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z6_16
  def_stmt =  z6_16 = _15 - z4_10;
base.cc:95:29: note: add new stmt: vect__18.1212_77 = vect__8.1202_87 * vect_z6_16.1211_79;
base.cc:95:29: note: ------>vectorizing statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _18
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _18
  def_stmt =  _18 = _8 * z6_16;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect_z7_19.1213_76 = vect__18.1212_77 - vect_z5_13.1209_81;
base.cc:95:29: note: ------>vectorizing statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.445[iter.448_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.445[iter.448_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1215_75 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:95:29: note: add new stmt: vect__20.1214_74 = vect_a_1.1196_94 * vect_cst_.1215_75;
base.cc:95:29: note: ------>vectorizing statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1217_73 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:95:29: note: add new stmt: vect__21.1216_72 = vect_z3_7.1205_85 * vect_cst_.1217_73;
base.cc:95:29: note: ------>vectorizing statement: _22 = _20 + _21;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _20
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _20
  def_stmt =  _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _21
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _21
  def_stmt =  _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: add new stmt: vect__22.1218_71 = vect__20.1214_74 + vect__21.1216_72;
base.cc:95:29: note: ------>vectorizing statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1220_70 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:95:29: note: add new stmt: vect__23.1219_69 = vect_z5_13.1209_81 * vect_cst_.1220_70;
base.cc:95:29: note: ------>vectorizing statement: _24 = _22 + _23;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _22
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _22
  def_stmt =  _22 = _20 + _21;
base.cc:95:29: note: vect_get_vec_def_for_operand: _23
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _23
  def_stmt =  _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: add new stmt: vect__24.1221_68 = vect__22.1218_71 + vect__23.1219_69;
base.cc:95:29: note: ------>vectorizing statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z7_19
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z7_19
  def_stmt =  z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1223_67 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:95:29: note: add new stmt: vect__25.1222_66 = vect_z7_19.1213_76 * vect_cst_.1223_67;
base.cc:95:29: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _24
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _24
  def_stmt =  _24 = _22 + _23;
base.cc:95:29: note: vect_get_vec_def_for_operand: _25
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _25
  def_stmt =  _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: add new stmt: vect__26.1224_65 = vect__24.1221_68 + vect__25.1222_66;
base.cc:95:29: note: ------>vectorizing statement: retval.444[iter.448_28] = _26;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform store. ncopies = 1
base.cc:95:29: note: vect_get_vec_def_for_operand: _26
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: retval.444
base.cc:95:29: note: created vectp_retval.1226_64
base.cc:95:29: note: add new stmt: MEM[(double *)vectp_retval.1225_63] = vect__26.1224_65;
base.cc:95:29: note: ------>vectorizing statement: iter.448_29 = iter.448_28 + 1;

base.cc:95:29: note: ------>vectorizing statement: ivtmp_98 = ivtmp_99 - 1;

base.cc:95:29: note: ------>vectorizing statement: vectp_a.1194_95 = vectp_a.1194_96 + 32;

base.cc:95:29: note: ------>vectorizing statement: vectp_retval.1225_62 = vectp_retval.1225_63 + 32;

base.cc:95:29: note: ------>vectorizing statement: if (ivtmp_98 != 0)


loop at base.cc:95: if (ivtmp_60 < 1)

base.cc:95:29: note: LOOP VECTORIZED

base.cc:85:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&a.445] = simd.446_35(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at base.cc:95
base.cc:95:29: note: ===== analyze_loop_nest =====
base.cc:95:29: note: === vect_analyze_loop_form ===
split exit edge.
base.cc:95:29: note: === get_loop_niters ===
base.cc:95:29: note: === vect_analyze_data_refs ===
base.cc:95:29: note: got vectype for stmt: a_1 = a.450[iter.456_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: _30 = mask.451[iter.456_28];
vector(4) double
base.cc:95:29: note: got vectype for stmt: MASK_STORE (_71, 0B, _ifc__72, _26);
vector(4) double
base.cc:95:29: note: === vect_analyze_scalar_cycles ===
base.cc:95:29: note: Analyze phi: iter.456_28 = PHI <0(3), iter.456_29(5)>

base.cc:95:29: note: Access function of PHI: {0, +, 1}_1
base.cc:95:29: note: step: 1,  init: 0
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: Analyze phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: Analyze phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: Access function of PHI: {4, +, 4294967295}_1
base.cc:95:29: note: step: 4294967295,  init: 4
base.cc:95:29: note: Detected induction.
base.cc:95:29: note: === vect_pattern_recog ===
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vect_analyze_data_ref_accesses ===
base.cc:95:29: note: === vect_mark_stmts_to_be_vectorized ===
base.cc:95:29: note: init: phi relevant? iter.456_28 = PHI <0(3), iter.456_29(5)>
base.cc:95:29: note: init: phi relevant? .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>
base.cc:95:29: note: init: phi relevant? ivtmp_64 = PHI <4(3), ivtmp_63(5)>
base.cc:95:29: note: init: stmt relevant? a_1 = a.450[iter.456_28];
base.cc:95:29: note: init: stmt relevant? _30 = mask.451[iter.456_28];
base.cc:95:29: note: init: stmt relevant? _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: init: stmt relevant? powmult_35 = a_1 * a_1;
base.cc:95:29: note: init: stmt relevant? _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: init: stmt relevant? _8 = a_1 * 2.0e+0;
base.cc:95:29: note: init: stmt relevant? _6 = z2_4 * _8;
base.cc:95:29: note: init: stmt relevant? z3_7 = _6 - a_1;
base.cc:95:29: note: init: stmt relevant? _9 = z3_7 * _8;
base.cc:95:29: note: init: stmt relevant? z4_10 = _9 - z2_4;
base.cc:95:29: note: init: stmt relevant? _12 = _8 * z4_10;
base.cc:95:29: note: init: stmt relevant? z5_13 = _12 - z3_7;
base.cc:95:29: note: init: stmt relevant? _15 = _8 * z5_13;
base.cc:95:29: note: init: stmt relevant? z6_16 = _15 - z4_10;
base.cc:95:29: note: init: stmt relevant? _18 = _8 * z6_16;
base.cc:95:29: note: init: stmt relevant? z7_19 = _18 - z5_13;
base.cc:95:29: note: init: stmt relevant? _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: init: stmt relevant? _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: init: stmt relevant? _22 = _20 + _21;
base.cc:95:29: note: init: stmt relevant? _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: init: stmt relevant? _24 = _22 + _23;
base.cc:95:29: note: init: stmt relevant? _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: init: stmt relevant? _26 = _24 + _25;
base.cc:95:29: note: init: stmt relevant? _71 = &retval.449[iter.456_28];
base.cc:95:29: note: init: stmt relevant? _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: init: stmt relevant? MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vec_stmt_relevant_p: stmt has vdefs.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: init: stmt relevant? iter.456_29 = iter.456_28 + 1;
base.cc:95:29: note: init: stmt relevant? ivtmp_63 = ivtmp_64 - 1;
base.cc:95:29: note: init: stmt relevant? if (ivtmp_63 != 0)
base.cc:95:29: note: worklist: examine stmt: MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: worklist: examine stmt: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: already marked relevant/live.
base.cc:95:29: note: worklist: examine stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.451[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: mark relevant 4, live 0.
base.cc:95:29: note: worklist: examine stmt: _30 = mask.451[iter.456_28];
base.cc:95:29: note: === vect_analyze_data_ref_dependences ===
base.cc:95:29: note: === vect_determine_vectorization_factor ===
base.cc:95:29: note: ==> examining phi: iter.456_28 = PHI <0(3), iter.456_29(5)>

base.cc:95:29: note: ==> examining phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: ==> examining phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: ==> examining statement: a_1 = a.450[iter.456_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _30 = mask.451[iter.456_28];

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);

base.cc:95:29: note: get vectype for scalar type:  signed long
base.cc:95:29: note: vectype: vector(4) signed long
base.cc:95:29: note: get vectype for scalar type:  signed long
base.cc:95:29: note: vectype: vector(4) signed long
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: powmult_35 = a_1 * a_1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _3 = powmult_35 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: get vectype for scalar type:  const double
base.cc:95:29: note: vectype: const vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: _71 = &retval.449[iter.456_28];

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;

base.cc:95:29: note: get vectype for scalar type:  unsigned long
base.cc:95:29: note: vectype: vector(4) unsigned long
base.cc:95:29: note: get vectype for scalar type:  unsigned long
base.cc:95:29: note: vectype: vector(4) unsigned long
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: MASK_STORE (_71, 0B, _ifc__72, _26);

base.cc:95:29: note: get vectype for scalar type:  double
base.cc:95:29: note: vectype: vector(4) double
base.cc:95:29: note: nunits = 4
base.cc:95:29: note: ==> examining statement: iter.456_29 = iter.456_28 + 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: ivtmp_63 = ivtmp_64 - 1;

base.cc:95:29: note: skip.
base.cc:95:29: note: ==> examining statement: if (ivtmp_63 != 0)

base.cc:95:29: note: skip.
base.cc:95:29: note: vectorization factor = 4
base.cc:95:29: note: === vect_analyze_data_refs_alignment ===
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of a.450[iter.456_28]
base.cc:95:29: note: misalign = 0 bytes of ref a.450[iter.456_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of mask.451[iter.456_28]
base.cc:95:29: note: misalign = 0 bytes of ref mask.451[iter.456_28]
base.cc:95:29: note: vect_compute_data_ref_alignment:
base.cc:95:29: note: force alignment of *_71
base.cc:95:29: note: misalign = 0 bytes of ref *_71
base.cc:95:29: note: === vect_prune_runtime_alias_test_list ===
base.cc:95:29: note: === vect_enhance_data_refs_alignment ===
base.cc:95:29: note: vect_can_advance_ivs_p:
base.cc:95:29: note: Analyze phi: iter.456_28 = PHI <0(3), iter.456_29(5)>

base.cc:95:29: note: Analyze phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: virtual phi. skip.
base.cc:95:29: note: Analyze phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: === vect_analyze_slp ===
base.cc:95:29: note: === vect_make_slp_decision ===
base.cc:95:29: note: === vect_detect_hybrid_slp ===
base.cc:95:29: note: === vect_analyze_loop_operations ===
base.cc:95:29: note: examining phi: iter.456_28 = PHI <0(3), iter.456_29(5)>

base.cc:95:29: note: examining phi: .MEM_33 = PHI <.MEM_38(3), .MEM_73(5)>

base.cc:95:29: note: examining phi: ivtmp_64 = PHI <4(3), ivtmp_63(5)>

base.cc:95:29: note: ==> examining statement: a_1 = a.450[iter.456_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand a.450[iter.456_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _30 = mask.451[iter.456_28];
base.cc:95:29: note: num. args = 4 (not unary/binary/ternary op).
base.cc:95:29: note: vect_is_simple_use: operand mask.451[iter.456_28]
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_model_load_cost: aligned.
base.cc:95:29: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand VIEW_CONVERT_EXPR<signed long>(_30)
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.451[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_assignment ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _6 = z2_4 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z3_7 = _6 - a_1;
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _9 = z3_7 * _8;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z4_10 = _9 - z2_4;
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _12 = _8 * z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _15 = _8 * z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z6_16 = _15 - z4_10;
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _18 = _8 * z6_16;
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _22 = _20 + _21;
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _24 = _22 + _23;
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
base.cc:95:29: note: ==> examining statement: _26 = _24 + _25;
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: === vectorizable_operation ===
base.cc:95:29: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: _71 = &retval.449[iter.456_28];
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: vect_is_simple_use: operand _31 == 0
base.cc:95:29: note: not ssa-name.
base.cc:95:29: note: use not simple.
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: ==> examining statement: MASK_STORE (_71, 0B, _ifc__72, _26);
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_model_store_cost: aligned.
base.cc:95:29: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
base.cc:95:29: note: ==> examining statement: iter.456_29 = iter.456_28 + 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: ivtmp_63 = ivtmp_64 - 1;
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: ==> examining statement: if (ivtmp_63 != 0)
base.cc:95:29: note: irrelevant.
base.cc:95:29: note: vectorization_factor = 4, niters = 4
base.cc:95:29: note: === vect_update_slp_costs_according_to_vf ===
base.cc:95:29: note: cost model disabled.
base.cc:95:29: note: loop vectorized
base.cc:95:29: note: === vec_transform_loop ===
base.cc:95:29: note: ------>vectorizing phi: iter.456_28 = PHI <0(13), iter.456_29(5)>

base.cc:95:29: note: ------>vectorizing phi: .MEM_33 = PHI <.MEM_38(13), .MEM_73(5)>

base.cc:95:29: note: ------>vectorizing phi: ivtmp_64 = PHI <4(13), ivtmp_63(5)>

base.cc:95:29: note: ------>vectorizing statement: a_1 = a.450[iter.456_28];

base.cc:95:29: note: transform statement.
base.cc:95:29: note: transform load. ncopies = 1
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: a.450
base.cc:95:29: note: created vectp_a.1230_75
base.cc:95:29: note: add new stmt: vect_a_1.1231_78 = MEM[(double *)vectp_a.1229_76];
base.cc:95:29: note: ------>vectorizing statement: _30 = mask.451[iter.456_28];

base.cc:95:29: note: transform statement.
base.cc:95:29: note: transform load. ncopies = 1
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing an array ref: mask.451
base.cc:95:29: note: created vectp_mask.1233_79
base.cc:95:29: note: add new stmt: vect__30.1234_82 = MEM[(double *)vectp_mask.1232_80];
base.cc:95:29: note: ------>vectorizing statement: _31 = VIEW_CONVERT_EXPR<signed long>(_30);

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.451[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform assignment.
base.cc:95:29: note: vect_get_vec_def_for_operand: _30
base.cc:95:29: note: vect_is_simple_use: operand _30
base.cc:95:29: note: def_stmt: _30 = mask.451[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _30
  def_stmt =  _30 = mask.451[iter.456_28];
base.cc:95:29: note: add new stmt: vect__31.1235_83 = VIEW_CONVERT_EXPR<vector(4) signed long>(vect__30.1234_82);
base.cc:95:29: note: ------>vectorizing statement: powmult_35 = a_1 * a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.450[iter.456_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.450[iter.456_28];
base.cc:95:29: note: add new stmt: vect_powmult_35.1236_84 = vect_a_1.1231_78 * vect_a_1.1231_78;
base.cc:95:29: note: ------>vectorizing statement: _3 = powmult_35 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: powmult_35
base.cc:95:29: note: vect_is_simple_use: operand powmult_35
base.cc:95:29: note: def_stmt: powmult_35 = a_1 * a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  powmult_35
  def_stmt =  powmult_35 = a_1 * a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1238_85 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__3.1237_86 = vect_powmult_35.1236_84 * vect_cst_.1238_85;
base.cc:95:29: note: ------>vectorizing statement: z2_4 = _3 - 1.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _3
base.cc:95:29: note: vect_is_simple_use: operand _3
base.cc:95:29: note: def_stmt: _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _3
  def_stmt =  _3 = powmult_35 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1240_87 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
base.cc:95:29: note: add new stmt: vect_z2_4.1239_88 = vect__3.1237_86 - vect_cst_.1240_87;
base.cc:95:29: note: ------>vectorizing statement: _8 = a_1 * 2.0e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.450[iter.456_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 2.0e+0
base.cc:95:29: note: vect_is_simple_use: operand 2.0e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1242_89 = { 2.0e+0, 2.0e+0, 2.0e+0, 2.0e+0 };
base.cc:95:29: note: add new stmt: vect__8.1241_90 = vect_a_1.1231_78 * vect_cst_.1242_89;
base.cc:95:29: note: ------>vectorizing statement: _6 = z2_4 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__6.1243_91 = vect_z2_4.1239_88 * vect__8.1241_90;
base.cc:95:29: note: ------>vectorizing statement: z3_7 = _6 - a_1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _6
base.cc:95:29: note: vect_is_simple_use: operand _6
base.cc:95:29: note: def_stmt: _6 = z2_4 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _6
  def_stmt =  _6 = z2_4 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.450[iter.456_28];
base.cc:95:29: note: add new stmt: vect_z3_7.1244_92 = vect__6.1243_91 - vect_a_1.1231_78;
base.cc:95:29: note: ------>vectorizing statement: _9 = z3_7 * _8;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: add new stmt: vect__9.1245_93 = vect_z3_7.1244_92 * vect__8.1241_90;
base.cc:95:29: note: ------>vectorizing statement: z4_10 = _9 - z2_4;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _9
base.cc:95:29: note: vect_is_simple_use: operand _9
base.cc:95:29: note: def_stmt: _9 = z3_7 * _8;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _9
  def_stmt =  _9 = z3_7 * _8;
base.cc:95:29: note: vect_get_vec_def_for_operand: z2_4
base.cc:95:29: note: vect_is_simple_use: operand z2_4
base.cc:95:29: note: def_stmt: z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z2_4
  def_stmt =  z2_4 = _3 - 1.0e+0;
base.cc:95:29: note: add new stmt: vect_z4_10.1246_94 = vect__9.1245_93 - vect_z2_4.1239_88;
base.cc:95:29: note: ------>vectorizing statement: _12 = _8 * z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect__12.1247_95 = vect__8.1241_90 * vect_z4_10.1246_94;
base.cc:95:29: note: ------>vectorizing statement: z5_13 = _12 - z3_7;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _12
base.cc:95:29: note: vect_is_simple_use: operand _12
base.cc:95:29: note: def_stmt: _12 = _8 * z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _12
  def_stmt =  _12 = _8 * z4_10;
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: add new stmt: vect_z5_13.1248_96 = vect__12.1247_95 - vect_z3_7.1244_92;
base.cc:95:29: note: ------>vectorizing statement: _15 = _8 * z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect__15.1249_97 = vect__8.1241_90 * vect_z5_13.1248_96;
base.cc:95:29: note: ------>vectorizing statement: z6_16 = _15 - z4_10;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _15
base.cc:95:29: note: vect_is_simple_use: operand _15
base.cc:95:29: note: def_stmt: _15 = _8 * z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _15
  def_stmt =  _15 = _8 * z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: z4_10
base.cc:95:29: note: vect_is_simple_use: operand z4_10
base.cc:95:29: note: def_stmt: z4_10 = _9 - z2_4;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z4_10
  def_stmt =  z4_10 = _9 - z2_4;
base.cc:95:29: note: add new stmt: vect_z6_16.1250_98 = vect__15.1249_97 - vect_z4_10.1246_94;
base.cc:95:29: note: ------>vectorizing statement: _18 = _8 * z6_16;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _8
base.cc:95:29: note: vect_is_simple_use: operand _8
base.cc:95:29: note: def_stmt: _8 = a_1 * 2.0e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _8
  def_stmt =  _8 = a_1 * 2.0e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: z6_16
base.cc:95:29: note: vect_is_simple_use: operand z6_16
base.cc:95:29: note: def_stmt: z6_16 = _15 - z4_10;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z6_16
  def_stmt =  z6_16 = _15 - z4_10;
base.cc:95:29: note: add new stmt: vect__18.1251_99 = vect__8.1241_90 * vect_z6_16.1250_98;
base.cc:95:29: note: ------>vectorizing statement: z7_19 = _18 - z5_13;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _18
base.cc:95:29: note: vect_is_simple_use: operand _18
base.cc:95:29: note: def_stmt: _18 = _8 * z6_16;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _18
  def_stmt =  _18 = _8 * z6_16;
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: add new stmt: vect_z7_19.1252_100 = vect__18.1251_99 - vect_z5_13.1248_96;
base.cc:95:29: note: ------>vectorizing statement: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: a_1
base.cc:95:29: note: vect_is_simple_use: operand a_1
base.cc:95:29: note: def_stmt: a_1 = a.450[iter.456_28];
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  a_1
  def_stmt =  a_1 = a.450[iter.456_28];
base.cc:95:29: note: vect_get_vec_def_for_operand: 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: vect_is_simple_use: operand 1.133648177811787061131099108024500310420989990234375e+0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1254_101 = { 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0, 1.133648177811787061131099108024500310420989990234375e+0 };
base.cc:95:29: note: add new stmt: vect__20.1253_102 = vect_a_1.1231_78 * vect_cst_.1254_101;
base.cc:95:29: note: ------>vectorizing statement: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z3_7
base.cc:95:29: note: vect_is_simple_use: operand z3_7
base.cc:95:29: note: def_stmt: z3_7 = _6 - a_1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z3_7
  def_stmt =  z3_7 = _6 - a_1;
base.cc:95:29: note: vect_get_vec_def_for_operand: -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: vect_is_simple_use: operand -1.380717766004891100539708759242785163223743438720703125e-1
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1256_103 = { -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1, -1.380717766004891100539708759242785163223743438720703125e-1 };
base.cc:95:29: note: add new stmt: vect__21.1255_104 = vect_z3_7.1244_92 * vect_cst_.1256_103;
base.cc:95:29: note: ------>vectorizing statement: _22 = _20 + _21;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _20
base.cc:95:29: note: vect_is_simple_use: operand _20
base.cc:95:29: note: def_stmt: _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _20
  def_stmt =  _20 = a_1 * 1.133648177811787061131099108024500310420989990234375e+0;
base.cc:95:29: note: vect_get_vec_def_for_operand: _21
base.cc:95:29: note: vect_is_simple_use: operand _21
base.cc:95:29: note: def_stmt: _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _21
  def_stmt =  _21 = z3_7 * -1.380717766004891100539708759242785163223743438720703125e-1;
base.cc:95:29: note: add new stmt: vect__22.1257_105 = vect__20.1253_102 + vect__21.1255_104;
base.cc:95:29: note: ------>vectorizing statement: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z5_13
base.cc:95:29: note: vect_is_simple_use: operand z5_13
base.cc:95:29: note: def_stmt: z5_13 = _12 - z3_7;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z5_13
  def_stmt =  z5_13 = _12 - z3_7;
base.cc:95:29: note: vect_get_vec_def_for_operand: 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: vect_is_simple_use: operand 4.4907175846143065900406554646906442940235137939453125e-3
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1259_106 = { 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3, 4.4907175846143065900406554646906442940235137939453125e-3 };
base.cc:95:29: note: add new stmt: vect__23.1258_107 = vect_z5_13.1248_96 * vect_cst_.1259_106;
base.cc:95:29: note: ------>vectorizing statement: _24 = _22 + _23;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _22
base.cc:95:29: note: vect_is_simple_use: operand _22
base.cc:95:29: note: def_stmt: _22 = _20 + _21;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _22
  def_stmt =  _22 = _20 + _21;
base.cc:95:29: note: vect_get_vec_def_for_operand: _23
base.cc:95:29: note: vect_is_simple_use: operand _23
base.cc:95:29: note: def_stmt: _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _23
  def_stmt =  _23 = z5_13 * 4.4907175846143065900406554646906442940235137939453125e-3;
base.cc:95:29: note: add new stmt: vect__24.1260_108 = vect__22.1257_105 + vect__23.1258_107;
base.cc:95:29: note: ------>vectorizing statement: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: z7_19
base.cc:95:29: note: vect_is_simple_use: operand z7_19
base.cc:95:29: note: def_stmt: z7_19 = _18 - z5_13;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  z7_19
  def_stmt =  z7_19 = _18 - z5_13;
base.cc:95:29: note: vect_get_vec_def_for_operand: -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: vect_is_simple_use: operand -6.829040537602304450359724796726368367671966552734375e-5
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1262_109 = { -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5, -6.829040537602304450359724796726368367671966552734375e-5 };
base.cc:95:29: note: add new stmt: vect__25.1261_110 = vect_z7_19.1252_100 * vect_cst_.1262_109;
base.cc:95:29: note: ------>vectorizing statement: _26 = _24 + _25;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: transform binary/unary operation.
base.cc:95:29: note: vect_get_vec_def_for_operand: _24
base.cc:95:29: note: vect_is_simple_use: operand _24
base.cc:95:29: note: def_stmt: _24 = _22 + _23;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _24
  def_stmt =  _24 = _22 + _23;
base.cc:95:29: note: vect_get_vec_def_for_operand: _25
base.cc:95:29: note: vect_is_simple_use: operand _25
base.cc:95:29: note: def_stmt: _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _25
  def_stmt =  _25 = z7_19 * -6.829040537602304450359724796726368367671966552734375e-5;
base.cc:95:29: note: add new stmt: vect__26.1263_111 = vect__24.1260_108 + vect__25.1261_110;
base.cc:95:29: note: ------>vectorizing statement: _71 = &retval.449[iter.456_28];

base.cc:95:29: note: ------>vectorizing statement: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_get_vec_def_for_operand: _31
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _31
  def_stmt =  _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: vect_is_simple_use: operand _31
base.cc:95:29: note: def_stmt: _31 = VIEW_CONVERT_EXPR<signed long>(_30);
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_get_vec_def_for_operand: 0
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1265_112 = { 0, 0, 0, 0 };
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: vect_get_vec_def_for_operand: 0
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1266_113 = { 0, 0, 0, 0 };
base.cc:95:29: note: vect_is_simple_use: operand 0
base.cc:95:29: note: vect_get_vec_def_for_operand: 18446744073709551615
base.cc:95:29: note: vect_is_simple_use: operand 18446744073709551615
base.cc:95:29: note: Create vector_cst. nunits = 4
base.cc:95:29: note: created new init_stmt: vect_cst_.1267_114 = { 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615 };
base.cc:95:29: note: vect_is_simple_use: operand 18446744073709551615
base.cc:95:29: note: add new stmt: vect__ifc__72.1264_115 = VEC_COND_EXPR <vect__31.1235_83 == vect_cst_.1265_112, vect_cst_.1266_113, vect_cst_.1267_114>;
base.cc:95:29: note: ------>vectorizing statement: MASK_STORE (_71, 0B, _ifc__72, _26);

base.cc:95:29: note: transform statement.
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: vect_get_vec_def_for_operand: _26
base.cc:95:29: note: vect_is_simple_use: operand _26
base.cc:95:29: note: def_stmt: _26 = _24 + _25;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _26
  def_stmt =  _26 = _24 + _25;
base.cc:95:29: note: vect_get_vec_def_for_operand: _ifc__72
base.cc:95:29: note: vect_is_simple_use: operand _ifc__72
base.cc:95:29: note: def_stmt: _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: type of def: 3.
base.cc:95:29: note: def =  _ifc__72
  def_stmt =  _ifc__72 = _31 == 0 ? 0 : 18446744073709551615;
base.cc:95:29: note: create vector_type-pointer variable to type: vector(4) double  vectorizing a pointer ref: MEM[(double *)&retval.449]
base.cc:95:29: note: created vectp_retval.1269_116
base.cc:95:29: note: add new stmt: MASK_STORE (vectp_retval.1268_117, 0B, vect__ifc__72.1264_115, vect__26.1263_111);
base.cc:95:29: note: ------>vectorizing statement: iter.456_29 = iter.456_28 + 1;

base.cc:95:29: note: ------>vectorizing statement: ivtmp_63 = ivtmp_64 - 1;

base.cc:95:29: note: ------>vectorizing statement: vectp_a.1229_77 = vectp_a.1229_76 + 32;

base.cc:95:29: note: ------>vectorizing statement: vectp_mask.1232_81 = vectp_mask.1232_80 + 32;

base.cc:95:29: note: ------>vectorizing statement: vectp_retval.1268_118 = vectp_retval.1268_117 + 32;

base.cc:95:29: note: ------>vectorizing statement: if (ivtmp_63 != 0)


loop at base.cc:95: if (ivtmp_120 < 1)

base.cc:95:29: note: LOOP VECTORIZED

base.cc:85:8: note: vectorized 1 loops in function.
base.cc:344:1: note: ===vect_slp_analyze_bb===
base.cc:344:1: note: === vect_analyze_data_refs ===
base.cc:344:1: note: not vectorized: no vectype for stmt: MEM[(double *)&a.450] = simd.452_40(D);
 scalar_type: vector(4) double
base.cc:344:1: note: not vectorized: not enough data-refs in basic block.
Target //:base_bench up-to-date:
  bazel-bin/base_bench
____Elapsed time: 0.960s, Critical Path: 0.80s
